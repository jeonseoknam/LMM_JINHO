[1mdiff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml[m
[1mindex 4dc63ef..8e54c09 100644[m
[1m--- a/.idea/deploymentTargetSelector.xml[m
[1m+++ b/.idea/deploymentTargetSelector.xml[m
[36m@@ -7,18 +7,19 @@[m
       </SelectionState>[m
       <SelectionState runConfigName="LoginActivity">[m
         <option name="selectionMode" value="DROPDOWN" />[m
[31m-        <DropdownSelection timestamp="2024-11-27T02:02:55.656946600Z">[m
[31m-          <Target type="DEFAULT_BOOT">[m
[31m-            <handle>[m
[31m-              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\kl751\.android\avd\Medium_Phone_API_35.avd" />[m
[31m-            </handle>[m
[31m-          </Target>[m
[31m-        </DropdownSelection>[m
[31m-        <DialogSelection />[m
       </SelectionState>[m
       <SelectionState runConfigName="InitActivity">[m
         <option name="selectionMode" value="DROPDOWN" />[m
       </SelectionState>[m
[32m+[m[32m      <SelectionState runConfigName="ChatRoomMenuActivity">[m
[32m+[m[32m        <option name="selectionMode" value="DROPDOWN" />[m
[32m+[m[32m      </SelectionState>[m
[32m+[m[32m      <SelectionState runConfigName="ChatCalendarActivity">[m
[32m+[m[32m        <option name="selectionMode" value="DROPDOWN" />[m
[32m+[m[32m      </SelectionState>[m
[32m+[m[32m      <SelectionState runConfigName="MainActivity">[m
[32m+[m[32m        <option name="selectionMode" value="DROPDOWN" />[m
[32m+[m[32m      </SelectionState>[m
     </selectionStates>[m
   </component>[m
 </project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mindex b2c751a..74dd639 100644[m
[1m--- a/.idea/misc.xml[m
[1m+++ b/.idea/misc.xml[m
[36m@@ -1,3 +1,4 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
 <project version="4">[m
   <component name="ExternalStorageConfigurationManager" enabled="true" />[m
   <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="jbr-21" project-jdk-type="JavaSDK">[m
[1mdiff --git a/StudyBuddy.zip b/StudyBuddy.zip[m
[1mdeleted file mode 100644[m
[1mindex 23d2c4e..0000000[m
Binary files a/StudyBuddy.zip and /dev/null differ
[1mdiff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml[m
[1mindex 343889d..1fbafbe 100644[m
[1m--- a/app/src/main/AndroidManifest.xml[m
[1m+++ b/app/src/main/AndroidManifest.xml[m
[36m@@ -5,10 +5,8 @@[m
     <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />[m
     <uses-permission android:name="android.permission.INTERNET" />[m
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />[m
[31m-    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />[m
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />[m
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />[m
[31m-    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_DATA_SYNC"/>[m
 [m
     <application[m
         android:allowBackup="true"[m
[36m@@ -21,16 +19,20 @@[m
         android:theme="@style/Theme.StudyBuddy"[m
         tools:targetApi="31">[m
         <activity[m
[31m-            android:name=".ChatCalendarActivity"[m
[31m-            android:exported="true" />[m
[32m+[m[32m            android:name=".GoalRegistrationActivity"[m
[32m+[m[32m            android:exported="true">[m
[32m+[m[32m            <intent-filter>[m
[32m+[m[32m                <action android:name="android.intent.action.MAIN" />[m
[32m+[m
[32m+[m[32m                <category android:name="android.intent.category.LAUNCHER" />[m
[32m+[m[32m            </intent-filter>[m
[32m+[m[32m        </activity>[m
         <activity[m
             android:name=".SettingActivity"[m
             android:exported="true" />[m
 [m
         <service[m
             android:name=".TimerService"[m
[31m-            android:foregroundServiceType="dataSync"[m
[31m-            android:enabled="true"[m
             android:exported="false" />[m
 [m
         <activity[m
[36m@@ -63,7 +65,24 @@[m
                 <category android:name="android.intent.category.LAUNCHER" />[m
             </intent-filter>[m
         </activity>[m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".ChatroomActivity"[m
[32m+[m[32m            android:exported="true">[m
[32m+[m[32m            <intent-filter>[m
[32m+[m[32m                <action android:name="android.intent.action.MAIN" />[m
 [m
[32m+[m[32m                <category android:name="android.intent.category.LAUNCHER" />[m
[32m+[m[32m            </intent-filter>[m
[32m+[m[32m        </activity>[m
[32m+[m[32m        <activity[m
[32m+[m[32m            android:name=".CreateChatActivity"[m
[32m+[m[32m            android:exported="true">[m
[32m+[m[32m            <intent-filter>[m
[32m+[m[32m                <action android:name="android.intent.action.MAIN" />[m
[32m+[m
[32m+[m[32m                <category android:name="android.intent.category.LAUNCHER" />[m
[32m+[m[32m            </intent-filter>[m
[32m+[m[32m        </activity>[m
         <activity[m
             android:name=".ClassChatListActivity"[m
             android:exported="true">[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/ChatCalendarActivity.java b/app/src/main/java/com/example/studybuddy/ChatCalendarActivity.java[m
[1mdeleted file mode 100644[m
[1mindex 2bb5ece..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/ChatCalendarActivity.java[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-package com.example.studybuddy;[m
[31m-[m
[31m-import android.os.Bundle;[m
[31m-[m
[31m-import androidx.appcompat.app.AppCompatActivity;[m
[31m-import androidx.fragment.app.FragmentManager;[m
[31m-import androidx.fragment.app.FragmentTransaction;[m
[31m-[m
[31m-public class ChatCalendarActivity extends AppCompatActivity {[m
[31m-[m
[31m-    @Override[m
[31m-    protected void onCreate(Bundle savedInstanceState) {[m
[31m-        super.onCreate(savedInstanceState);[m
[31m-        setContentView(R.layout.activity_chat_calendar);[m
[31m-[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/ChatCalendarFragment.java b/app/src/main/java/com/example/studybuddy/ChatCalendarFragment.java[m
[1mdeleted file mode 100644[m
[1mindex 05b86df..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/ChatCalendarFragment.java[m
[1m+++ /dev/null[m
[36m@@ -1,64 +0,0 @@[m
[31m-package com.example.studybuddy;[m
[31m-[m
[31m-import android.os.Bundle;[m
[31m-[m
[31m-import androidx.fragment.app.Fragment;[m
[31m-[m
[31m-import android.view.LayoutInflater;[m
[31m-import android.view.View;[m
[31m-import android.view.ViewGroup;[m
[31m-[m
[31m-/**[m
[31m- * A simple {@link Fragment} subclass.[m
[31m- * Use the {@link ChatCalendarFragment#newInstance} factory method to[m
[31m- * create an instance of this fragment.[m
[31m- */[m
[31m-public class ChatCalendarFragment extends Fragment {[m
[31m-[m
[31m-    // TODO: Rename parameter arguments, choose names that match[m
[31m-    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER[m
[31m-    private static final String ARG_PARAM1 = "param1";[m
[31m-    private static final String ARG_PARAM2 = "param2";[m
[31m-[m
[31m-    // TODO: Rename and change types of parameters[m
[31m-    private String mParam1;[m
[31m-    private String mParam2;[m
[31m-[m
[31m-    public ChatCalendarFragment() {[m
[31m-        // Required empty public constructor[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Use this factory method to create a new instance of[m
[31m-     * this fragment using the provided parameters.[m
[31m-     *[m
[31m-     * @param param1 Parameter 1.[m
[31m-     * @param param2 Parameter 2.[m
[31m-     * @return A new instance of fragment ChatCalendarFragment.[m
[31m-     */[m
[31m-    // TODO: Rename and change types and number of parameters[m
[31m-    public static ChatCalendarFragment newInstance(String param1, String param2) {[m
[31m-        ChatCalendarFragment fragment = new ChatCalendarFragment();[m
[31m-        Bundle args = new Bundle();[m
[31m-        args.putString(ARG_PARAM1, param1);[m
[31m-        args.putString(ARG_PARAM2, param2);[m
[31m-        fragment.setArguments(args);[m
[31m-        return fragment;[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void onCreate(Bundle savedInstanceState) {[m
[31m-        super.onCreate(savedInstanceState);[m
[31m-        if (getArguments() != null) {[m
[31m-            mParam1 = getArguments().getString(ARG_PARAM1);[m
[31m-            mParam2 = getArguments().getString(ARG_PARAM2);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public View onCreateView(LayoutInflater inflater, ViewGroup container,[m
[31m-                             Bundle savedInstanceState) {[m
[31m-        // Inflate the layout for this fragment[m
[31m-        return inflater.inflate(R.layout.fragment_chat_calendar, container, false);[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/ChatMessageItem.java b/app/src/main/java/com/example/studybuddy/ChatMessageItem.java[m
[1mindex 1966b79..a01e042 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/ChatMessageItem.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/ChatMessageItem.java[m
[36m@@ -5,14 +5,12 @@[m [mpublic class ChatMessageItem {[m
     String message;[m
     String time;[m
     String profileUrl;[m
[31m-    String imageMessage;[m
 [m
[31m-    public ChatMessageItem(String name, String message, String time, String profileUrl, String imageMessage) {[m
[32m+[m[32m    public ChatMessageItem(String name, String message, String time, String profileUrl) {[m
         this.name = name;[m
         this.message = message;[m
         this.time = time;[m
         this.profileUrl = profileUrl;[m
[31m-        this.imageMessage = imageMessage;[m
     }[m
     public ChatMessageItem() {[m
     }[m
[36m@@ -48,12 +46,4 @@[m [mpublic class ChatMessageItem {[m
     public void setProfileUrl(String profileUrl) {[m
         this.profileUrl = profileUrl;[m
     }[m
[31m-[m
[31m-    public String getImageMessage() {[m
[31m-        return imageMessage;[m
[31m-    }[m
[31m-[m
[31m-    public void setImageMessage(String imageMessage) {[m
[31m-        this.imageMessage = imageMessage;[m
[31m-    }[m
 }[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/ChatRoomFragment.java b/app/src/main/java/com/example/studybuddy/ChatRoomFragment.java[m
[1mdeleted file mode 100644[m
[1mindex 9982b16..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/ChatRoomFragment.java[m
[1m+++ /dev/null[m
[36m@@ -1,349 +0,0 @@[m
[31m-package com.example.studybuddy;[m
[31m-[m
[31m-import static android.app.Activity.RESULT_OK;[m
[31m-import static androidx.core.content.ContextCompat.getSystemService;[m
[31m-[m
[31m-import static java.lang.Thread.sleep;[m
[31m-[m
[31m-import android.animation.Animator;[m
[31m-import android.content.Context;[m
[31m-import android.content.Intent;[m
[31m-import android.content.SharedPreferences;[m
[31m-import android.media.Image;[m
[31m-import android.net.Uri;[m
[31m-import android.os.Bundle;[m
[31m-import android.provider.MediaStore;[m
[31m-import android.util.Log;[m
[31m-import android.view.LayoutInflater;[m
[31m-import android.view.View;[m
[31m-import android.view.ViewGroup;[m
[31m-import android.view.inputmethod.InputMethodManager;[m
[31m-import android.widget.Button;[m
[31m-import android.widget.EditText;[m
[31m-import android.widget.ImageButton;[m
[31m-import android.widget.ImageView;[m
[31m-import android.widget.TextView;[m
[31m-[m
[31m-import androidx.activity.result.ActivityResult;[m
[31m-import androidx.activity.result.ActivityResultCallback;[m
[31m-import androidx.activity.result.ActivityResultLauncher;[m
[31m-import androidx.activity.result.contract.ActivityResultContracts;[m
[31m-import androidx.annotation.Dimension;[m
[31m-import androidx.annotation.NonNull;[m
[31m-import androidx.annotation.Nullable;[m
[31m-import androidx.fragment.app.Fragment;[m
[31m-import androidx.fragment.app.FragmentResultListener;[m
[31m-import androidx.recyclerview.widget.RecyclerView;[m
[31m-[m
[31m-import com.bumptech.glide.Glide;[m
[31m-import com.example.studybuddy.databinding.FragmentChatRoomBinding;[m
[31m-import com.google.android.gms.tasks.OnFailureListener;[m
[31m-import com.google.android.gms.tasks.OnSuccessListener;[m
[31m-import com.google.firebase.auth.FirebaseAuth;[m
[31m-import com.google.firebase.firestore.CollectionReference;[m
[31m-import com.google.firebase.firestore.DocumentChange;[m
[31m-import com.google.firebase.firestore.DocumentSnapshot;[m
[31m-import com.google.firebase.firestore.EventListener;[m
[31m-import com.google.firebase.firestore.FirebaseFirestore;[m
[31m-import com.google.firebase.firestore.FirebaseFirestoreException;[m
[31m-import com.google.firebase.firestore.QuerySnapshot;[m
[31m-import com.google.firebase.storage.FirebaseStorage;[m
[31m-import com.google.firebase.storage.StorageReference;[m
[31m-import com.google.firebase.storage.UploadTask;[m
[31m-[m
[31m-import org.w3c.dom.Text;[m
[31m-[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.Calendar;[m
[31m-import java.util.HashMap;[m
[31m-import java.util.List;[m
[31m-import java.util.Map;[m
[31m-[m
[31m-public class ChatRoomFragment extends Fragment {[m
[31m-[m
[31m-    private FirebaseAuth mAuth;[m
[31m-    private FirebaseFirestore db;[m
[31m-    private FirebaseStorage storage;[m
[31m-    private Uri fileUri = null;[m
[31m-    private String chatname;[m
[31m-    private ImageView addFile, expend, totalView;[m
[31m-[m
[31m-    private SharedPreferences userPref, chatNamePref;[m
[31m-    private final int MY_CHAT=1, OTHER_CHAT=0;[m
[31m-    ChatAdapter adapter;[m
[31m-    ArrayList<ChatMessageItem> messageItems = new ArrayList<>();[m
[31m-[m
[31m-    @Override[m
[31m-    public void onCreate(@Nullable Bundle savedInstanceState) {[m
[31m-        super.onCreate(savedInstanceState);[m
[31m-    }[m
[31m-[m
[31m-    @Nullable[m
[31m-    @Override[m
[31m-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {[m
[31m-        View view = inflater.inflate(R.layout.fragment_chat_room, container, false);[m
[31m-        TextView chatTitle = view.findViewById(R.id.chatTitleText);[m
[31m-        chatNamePref = getContext().getSharedPreferences("chatName", Context.MODE_PRIVATE);[m
[31m-[m
[31m-        chatname = chatNamePref.getString("Name","none");[m
[31m-        Log.d("logchk", "onCreateView: "+ chatname);[m
[31m-        chatTitle.setText(chatname);[m
[31m-[m
[31m-        return view;[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-    @Override[m
[31m-    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {[m
[31m-        super.onViewCreated(view, savedInstanceState);[m
[31m-[m
[31m-        mAuth = FirebaseAuth.getInstance();[m
[31m-        db = FirebaseFirestore.getInstance();[m
[31m-        storage = FirebaseStorage.getInstance();[m
[31m-        userPref = getContext().getSharedPreferences("userData", Context.MODE_PRIVATE);[m
[31m-[m
[31m-        totalView = view.findViewById(R.id.total_image);[m
[31m-        expend = view.findViewById(R.id.expanded_image);[m
[31m-        expend.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-                if (expend.getVisibility() == View.VISIBLE){[m
[31m-                    expend.setVisibility(View.GONE);[m
[31m-                    totalView.setVisibility(View.GONE);[m
[31m-                    Log.d("logchk", "onClick: " + expend.getVisibility());[m
[31m-                    expend.setImageResource(0);[m
[31m-                }[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-[m
[31m-        RecyclerView recyclerView = view.findViewById(R.id.chatRecyclerView);[m
[31m-        adapter = new ChatAdapter(messageItems);[m
[31m-        recyclerView.setAdapter(adapter);[m
[31m-[m
[31m-        final CollectionReference chatRef = db.collection("chatRoom").document("singleChat").collection(chatname);[m
[31m-        chatRef.addSnapshotListener(new EventListener<QuerySnapshot>() {[m
[31m-            @Override[m
[31m-            public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {[m
[31m-                List<DocumentChange> documentChanges = value.getDocumentChanges();[m
[31m-                for (DocumentChange documentChange : documentChanges){[m
[31m-                    if (error != null) {[m
[31m-                        Log.w("logchk", "Listen failed.", error);[m
[31m-                        return;[m
[31m-                    }[m
[31m-                    if (value != null && !value.isEmpty()) {[m
[31m-                        DocumentSnapshot snapshot = documentChange.getDocument();[m
[31m-                        Map<String, Object> msg = snapshot.getData();[m
[31m-                        String name = msg.get("name").toString();[m
[31m-                        String message = msg.get("message").toString();[m
[31m-                        String time = msg.get("time").toString();[m
[31m-                        String profileUrl = (String) msg.get("profileUrl");[m
[31m-                        String imageMessage = (String) msg.get("imageMessage");[m
[31m-[m
[31m-                        ChatMessageItem item = new ChatMessageItem(name, message, time, profileUrl,imageMessage);[m
[31m-[m
[31m-                        messageItems.add(item);[m
[31m-                        adapter.notifyItemInserted(messageItems.size() - 1);[m
[31m-                        recyclerView.scrollToPosition(messageItems.size() - 1);[m
[31m-[m
[31m-                    } else {[m
[31m-                        Log.d("logchk", "Current data: null");[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        addFile = view.findViewById(R.id.addImageFile);[m
[31m-        TextView deleteFile = view.findViewById(R.id.btn_fileDeleteButton);[m
[31m-        ImageButton addFileButton = view.findViewById(R.id.btn_attachButton);[m
[31m-        addFileButton.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-                Intent intent = new Intent(Intent.ACTION_PICK);[m
[31m-                intent.setDataAndType(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, "image/*");[m
[31m-                intent.setAction(Intent.ACTION_PICK);[m
[31m-                fileLauncher.launch(intent);[m
[31m-                ViewGroup.LayoutParams params = addFile.getLayoutParams();[m
[31m-                deleteFile.setTextSize(Dimension.DP, 60);[m
[31m-                params.height = 500;[m
[31m-                addFile.setLayoutParams(params);[m
[31m-            }[m
[31m-        });[m
[31m-        deleteFile.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-                ViewGroup.LayoutParams params = addFile.getLayoutParams();[m
[31m-                deleteFile.setTextSize(Dimension.DP, 1);[m
[31m-                params.height = 1;[m
[31m-                addFile.setLayoutParams(params);[m
[31m-                addFile.setImageResource(0);[m
[31m-                fileUri = null;[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        ImageButton sendButton = view.findViewById(R.id.btn_sendButton);[m
[31m-        sendButton.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-                String nickname = userPref.getString("Nickname","none");[m
[31m-                EditText messageInput = view.findViewById(R.id.messageInput);[m
[31m-                String message = messageInput.getText().toString();[m
[31m-                Log.d("logchk", "onClick: "+fileUri);[m
[31m-                String imageMessage = null;[m
[31m-                Object currentTime = System.currentTimeMillis();[m
[31m-                if (!message.isEmpty()){[m
[31m-                    if (fileUri != null) {[m
[31m-[m
[31m-                        StorageReference stoRef = storage.getReference("chatImage/" + System.currentTimeMillis());[m
[31m-                        stoRef.putFile(fileUri);[m
[31m-                        try {[m
[31m-                            sleep(3000);[m
[31m-                        } catch (InterruptedException e){[m
[31m-                            Log.d("logchk", "onClick: " + e);[m
[31m-                        }[m
[31m-[m
[31m-                        stoRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {[m
[31m-                            @Override[m
[31m-                            public void onSuccess(Uri uri) {[m
[31m-                                String imageMessage = uri.toString();[m
[31m-                                Map<String, Object> link = new HashMap<>();[m
[31m-                                link.put("imageMessage", uri);[m
[31m-                                chatRef.document("msg"+currentTime).update(link);[m
[31m-                                fileUri = null;[m
[31m-                            }[m
[31m-                        }).addOnFailureListener(new OnFailureListener() {[m
[31m-                            @Override[m
[31m-                            public void onFailure(@NonNull Exception e) {[m
[31m-[m
[31m-                                Log.d("logchk", "onFailure: 다운 실패" + e);[m
[31m-                            }[m
[31m-                        });[m
[31m-                    }[m
[31m-                        String profileUrl = userPref.getString("Profile", null);[m
[31m-                        Calendar calendar = Calendar.getInstance();[m
[31m-                        String time = calendar.get(Calendar.HOUR_OF_DAY) + ":" + calendar.get(Calendar.MINUTE);[m
[31m-                        Map<String, Object> lastTime = new HashMap<>();[m
[31m-                        lastTime.put(chatname, currentTime);[m
[31m-                        db.collection("chatRoom").document("singleChat").update(lastTime);[m
[31m-                        ChatMessageItem item = new ChatMessageItem(nickname, message, time, profileUrl, imageMessage);[m
[31m-                        chatRef.document("msg" + currentTime).set(item);[m
[31m-                        messageInput.setText("");[m
[31m-                        ViewGroup.LayoutParams params = addFile.getLayoutParams();[m
[31m-                        deleteFile.setTextSize(Dimension.DP, 1);[m
[31m-                        params.height = 1;[m
[31m-                        addFile.setLayoutParams(params);[m
[31m-                        addFile.setImageResource(0);[m
[31m-[m
[31m-                        InputMethodManager imm = (InputMethodManager) getContext().getSystemService(Context.INPUT_METHOD_SERVICE);[m
[31m-                        imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, InputMethodManager.HIDE_NOT_ALWAYS);[m
[31m-                }[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        ImageButton chatMenuButton = view.findViewById(R.id.btn_chatMenu);[m
[31m-        chatMenuButton.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-                getParentFragmentManager().beginTransaction()[m
[31m-                        .add(R.id.fragment_container, new ChatRoomMenuFragment())[m
[31m-                        .addToBackStack(null)[m
[31m-                        .commit();[m
[31m-            }[m
[31m-        });[m
[31m-    }[m
[31m-    private ActivityResultLauncher<Intent> fileLauncher = registerForActivityResult([m
[31m-            new ActivityResultContracts.StartActivityForResult(),[m
[31m-            new ActivityResultCallback<ActivityResult>() {[m
[31m-                @Override[m
[31m-                public void onActivityResult(ActivityResult o) {[m
[31m-                    if (o.getResultCode() == RESULT_OK){[m
[31m-                        Intent intent = o.getData();[m
[31m-                        fileUri = intent.getData();[m
[31m-                        Glide.with(addFile).load(fileUri).into(addFile);[m
[31m-                        Map<String, Object> test = new HashMap<>();[m
[31m-                        test.put("link", fileUri);[m
[31m-                        db.collection("chatReferences").document("item"+System.currentTimeMillis()).set(test);[m
[31m-                    }[m
[31m-                }[m
[31m-            }[m
[31m-    );[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-    private class MyViewHolder extends RecyclerView.ViewHolder{[m
[31m-        ImageView profile;[m
[31m-        ImageView imageMessage;[m
[31m-        TextView name;[m
[31m-        TextView message;[m
[31m-        TextView time;[m
[31m-        public MyViewHolder(@NonNull View itemView) {[m
[31m-            super(itemView);[m
[31m-            profile = itemView.findViewById(R.id.profileImage);[m
[31m-            imageMessage = itemView.findViewById(R.id.messageImage);[m
[31m-            name = itemView.findViewById(R.id.username);[m
[31m-            message = itemView.findViewById(R.id.messageText);[m
[31m-            time = itemView.findViewById(R.id.chatMessage_time);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    private class ChatAdapter extends RecyclerView.Adapter<ChatRoomFragment.MyViewHolder>{[m
[31m-        private ArrayList<ChatMessageItem> messageItems;[m
[31m-[m
[31m-        private ChatAdapter(ArrayList<ChatMessageItem> messageItems){[m
[31m-            this.messageItems = messageItems;[m
[31m-        }[m
[31m-[m
[31m-        @Override[m
[31m-        public void onBindViewHolder(@NonNull ChatRoomFragment.MyViewHolder holder, int position) {[m
[31m-            ChatMessageItem item = messageItems.get(position);[m
[31m-[m
[31m-            holder.name.setText(item.name);[m
[31m-            holder.message.setText(item.message);[m
[31m-            holder.time.setText(item.time);[m
[31m-            if (item.imageMessage != null){[m
[31m-                ViewGroup.LayoutParams params = holder.imageMessage.getLayoutParams();[m
[31m-                params.width = 500;[m
[31m-                Glide.with(ChatRoomFragment.this).load(item.imageMessage).into(holder.imageMessage);[m
[31m-            }[m
[31m-            if (item.profileUrl != null)[m
[31m-                Glide.with(ChatRoomFragment.this).load(item.profileUrl).into(holder.profile);[m
[31m-            if (item.imageMessage != null){[m
[31m-                holder.imageMessage.setOnClickListener(new View.OnClickListener() {[m
[31m-                    @Override[m
[31m-                    public void onClick(View v) {[m
[31m-                        expend.setVisibility(View.VISIBLE);[m
[31m-                        totalView.setVisibility(View.VISIBLE);[m
[31m-                        Glide.with(ChatRoomFragment.this).load(item.imageMessage).into(expend);[m
[31m-                        Log.d("logchk", "onClick: " + expend.getVisibility());[m
[31m-                    }[m
[31m-                });[m
[31m-            }[m
[31m-        }[m
[31m-[m
[31m-        @Override[m
[31m-        public int getItemViewType(int position) {[m
[31m-            if (messageItems.get(position).name.equals(userPref.getString("Nickname","none"))){[m
[31m-                return  MY_CHAT;[m
[31m-            }else { return OTHER_CHAT; }[m
[31m-        }[m
[31m-[m
[31m-        @Override[m
[31m-        public int getItemCount() {[m
[31m-            return messageItems.size();[m
[31m-        }[m
[31m-[m
[31m-        @NonNull[m
[31m-        @Override[m
[31m-        public ChatRoomFragment.MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {[m
[31m-            View itemView = null;[m
[31m-            if (viewType == MY_CHAT){[m
[31m-                itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_my_chat_message,parent,false);[m
[31m-            } else {[m
[31m-                itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_chat_message, parent, false);[m
[31m-            }[m
[31m-            return new ChatRoomFragment.MyViewHolder(itemView);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/ChatRoomMenuActivity.java b/app/src/main/java/com/example/studybuddy/ChatRoomMenuActivity.java[m
[1mindex 2c0cb84..3fab076 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/ChatRoomMenuActivity.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/ChatRoomMenuActivity.java[m
[36m@@ -1,73 +1,18 @@[m
 package com.example.studybuddy;[m
 [m
[31m-import android.content.Intent;[m
 import android.os.Bundle;[m
[31m-import android.util.Log;[m
[31m-import android.view.View;[m
[31m-import android.widget.Button;[m
 [m
 import androidx.activity.EdgeToEdge;[m
 import androidx.appcompat.app.AppCompatActivity;[m
 import androidx.core.graphics.Insets;[m
 import androidx.core.view.ViewCompat;[m
 import androidx.core.view.WindowInsetsCompat;[m
[31m-import androidx.fragment.app.FragmentManager;[m
[31m-import androidx.fragment.app.FragmentTransaction;[m
 [m
 public class ChatRoomMenuActivity extends AppCompatActivity {[m
 [m
[31m-    private String chatID;[m
[31m-[m
[31m-[m
[31m-[m
     @Override[m
     protected void onCreate(Bundle savedInstanceState) {[m
         super.onCreate(savedInstanceState);[m
         setContentView(R.layout.activity_chat_room_menu);[m
[31m-[m
[31m-        Intent intent = getIntent();[m
[31m-        chatID = intent.getStringExtra("chatname");[m
[31m-[m
[31m-        if (chatID != null) {[m
[31m-            Log.d("ChatRoomMenuTag", "ReceiveChatID = " + chatID);[m
[31m-        } else {[m
[31m-            Log.d("ChatRoomMenuTag", "No chatID received!");[m
[31m-        }[m
[31m-[m
[31m-        Button btn_calendar = findViewById(R.id.btn_classCalendar);[m
[31m-        btn_calendar.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View view) {[m
[31m-[m
[31m-                btn_calendar.setOnClickListener(new View.OnClickListener() {[m
[31m-                    @Override[m
[31m-                    public void onClick(View view) {[m
[31m-                        Intent intent = new Intent(ChatRoomMenuActivity.this, ChatCalendarActivity.class);[m
[31m-                        startActivity(intent);[m
[31m-[m
[31m-                    }[m
[31m-                });[m
[31m-[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        Button btn_goalBoard = findViewById(R.id.btn_goalBoard);[m
[31m-        btn_goalBoard.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-                GoalBoardFragment fragment = new GoalBoardFragment();[m
[31m-[m
[31m-                Bundle args = new Bundle();[m
[31m-                args.putString("chatID", chatID);[m
[31m-                fragment.setArguments(args);[m
[31m-[m
[31m-                getSupportFragmentManager().beginTransaction()[m
[31m-                        .replace(R.id.fragment_container, fragment)[m
[31m-                        .addToBackStack(null)[m
[31m-                        .commit();[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/ChatRoomMenuFragment.java b/app/src/main/java/com/example/studybuddy/ChatRoomMenuFragment.java[m
[1mdeleted file mode 100644[m
[1mindex cf35e03..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/ChatRoomMenuFragment.java[m
[1m+++ /dev/null[m
[36m@@ -1,89 +0,0 @@[m
[31m-package com.example.studybuddy;[m
[31m-[m
[31m-import android.content.Context;[m
[31m-import android.content.Intent;[m
[31m-import android.content.SharedPreferences;[m
[31m-import android.os.Bundle;[m
[31m-import android.view.LayoutInflater;[m
[31m-import android.view.View;[m
[31m-import android.view.ViewGroup;[m
[31m-import android.widget.Button;[m
[31m-import android.widget.ImageButton;[m
[31m-import android.widget.TextView;[m
[31m-[m
[31m-import androidx.annotation.NonNull;[m
[31m-import androidx.annotation.Nullable;[m
[31m-import androidx.fragment.app.Fragment;[m
[31m-[m
[31m-public class ChatRoomMenuFragment extends Fragment {[m
[31m-[m
[31m-    private String chatID;[m
[31m-    private String nickName;[m
[31m-    private SharedPreferences userPref;[m
[31m-    private SharedPreferences chatNamePref;[m
[31m-[m
[31m-    @Override[m
[31m-    public void onCreate(@Nullable Bundle savedInstanceState) {[m
[31m-        super.onCreate(savedInstanceState);[m
[31m-    }[m
[31m-[m
[31m-    @Nullable[m
[31m-    @Override[m
[31m-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {[m
[31m-        View view = inflater.inflate(R.layout.fragment_chat_room_menu,container,false);[m
[31m-        chatNamePref = getContext().getSharedPreferences("chatName", Context.MODE_PRIVATE);[m
[31m-        chatID = chatNamePref.getString("Name", "none");[m
[31m-        userPref = getContext().getSharedPreferences("userData", Context.MODE_PRIVATE);[m
[31m-        nickName = userPref.getString("Nickname", "none");[m
[31m-[m
[31m-        return view;[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {[m
[31m-        super.onViewCreated(view, savedInstanceState);[m
[31m-[m
[31m-        ImageButton backbutton = view.findViewById(R.id.btn_backButton);[m
[31m-        backbutton.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-                getParentFragmentManager().beginTransaction()[m
[31m-                        .remove(ChatRoomMenuFragment.this)[m
[31m-                        .commit();[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        TextView chatTitle = view.findViewById(R.id.chatTitleText);[m
[31m-        chatTitle.setText(chatID);[m
[31m-[m
[31m-        Button btn_calendar = view.findViewById(R.id.btn_classCalendar);[m
[31m-        btn_calendar.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View view) {[m
[31m-                Intent intent = new Intent(getActivity(), ChatCalendarActivity.class);[m
[31m-                startActivity(intent);[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        Button btn_goalBoard = view.findViewById(R.id.btn_goalBoard);[m
[31m-        btn_goalBoard.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-                GoalBoardFragment fragment = new GoalBoardFragment();[m
[31m-[m
[31m-                Bundle args = new Bundle();[m
[31m-                args.putString("chatRoomId", chatID);[m
[31m-                args.putString("nickname", nickName);[m
[31m-                fragment.setArguments(args);[m
[31m-[m
[31m-                getParentFragmentManager().beginTransaction()[m
[31m-                        .replace(R.id.fragment_container, fragment)[m
[31m-                        .addToBackStack(null)[m
[31m-                        .commit();[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-    }[m
[31m-[m
[31m-}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/ChatroomActivity.java b/app/src/main/java/com/example/studybuddy/ChatroomActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..1afb1d7[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/studybuddy/ChatroomActivity.java[m
[36m@@ -0,0 +1,185 @@[m
[32m+[m[32mpackage com.example.studybuddy;[m
[32m+[m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.hardware.input.InputManager;[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m[32mimport android.util.Log;[m
[32m+[m[32mimport android.view.LayoutInflater;[m
[32m+[m[32mimport android.view.View;[m
[32m+[m[32mimport android.view.ViewGroup;[m
[32m+[m[32mimport android.view.inputmethod.InputMethodManager;[m
[32m+[m[32mimport android.widget.ImageView;[m
[32m+[m[32mimport android.widget.TextView;[m
[32m+[m
[32m+[m[32mimport androidx.activity.EdgeToEdge;[m
[32m+[m[32mimport androidx.annotation.NonNull;[m
[32m+[m[32mimport androidx.annotation.Nullable;[m
[32m+[m[32mimport androidx.appcompat.app.AppCompatActivity;[m
[32m+[m[32mimport androidx.core.graphics.Insets;[m
[32m+[m[32mimport androidx.core.view.ViewCompat;[m
[32m+[m[32mimport androidx.core.view.WindowInsetsCompat;[m
[32m+[m[32mimport androidx.recyclerview.widget.RecyclerView;[m
[32m+[m
[32m+[m[32mimport com.bumptech.glide.Glide;[m
[32m+[m[32mimport com.example.studybuddy.databinding.ActivityChatroomBinding;[m
[32m+[m[32mimport com.example.studybuddy.utility.userData;[m
[32m+[m[32mimport com.google.android.gms.tasks.OnCompleteListener;[m
[32m+[m[32mimport com.google.android.gms.tasks.Task;[m
[32m+[m[32mimport com.google.firebase.auth.FirebaseAuth;[m
[32m+[m[32mimport com.google.firebase.auth.FirebaseUser;[m
[32m+[m[32mimport com.google.firebase.firestore.CollectionReference;[m
[32m+[m[32mimport com.google.firebase.firestore.DocumentChange;[m
[32m+[m[32mimport com.google.firebase.firestore.DocumentReference;[m
[32m+[m[32mimport com.google.firebase.firestore.DocumentSnapshot;[m
[32m+[m[32mimport com.google.firebase.firestore.EventListener;[m
[32m+[m[32mimport com.google.firebase.firestore.FirebaseFirestore;[m
[32m+[m[32mimport com.google.firebase.firestore.FirebaseFirestoreException;[m
[32m+[m[32mimport com.google.firebase.firestore.QuerySnapshot;[m
[32m+[m
[32m+[m[32mimport java.util.ArrayList;[m
[32m+[m[32mimport java.util.Calendar;[m
[32m+[m[32mimport java.util.Collection;[m
[32m+[m[32mimport java.util.HashMap;[m
[32m+[m[32mimport java.util.List;[m
[32m+[m[32mimport java.util.Map;[m
[32m+[m[32mimport java.util.Objects;[m
[32m+[m
[32m+[m[32mpublic class ChatroomActivity extends AppCompatActivity {[m
[32m+[m
[32m+[m[32m    private FirebaseAuth mAuth;[m
[32m+[m[32m    private FirebaseFirestore db;[m
[32m+[m[32m    private String chatname = "테스트채팅방2";[m
[32m+[m[32m    private final int MY_CHAT=1, OTHER_CHAT=0;[m
[32m+[m[32m    ChatAdapter adapter;[m
[32m+[m[32m    ArrayList<ChatMessageItem> messageItems = new ArrayList<>();[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        ActivityChatroomBinding binding = ActivityChatroomBinding.inflate(getLayoutInflater());[m
[32m+[m[32m        setContentView(binding.getRoot());[m
[32m+[m
[32m+[m[32m        mAuth = FirebaseAuth.getInstance();[m
[32m+[m[32m        db = FirebaseFirestore.getInstance();[m
[32m+[m
[32m+[m
[32m+[m[32m        binding.chatTitleText.setText(chatname);[m
[32m+[m
[32m+[m[32m        adapter = new ChatAdapter(messageItems);[m
[32m+[m[32m        binding.chatRecyclerView.setAdapter(adapter);[m
[32m+[m
[32m+[m[32m        final CollectionReference chatRef = db.collection("chatRoom").document("singleChat").collection(chatname);[m
[32m+[m[32m        chatRef.addSnapshotListener(new EventListener<QuerySnapshot>() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {[m
[32m+[m[32m                List<DocumentChange> documentChanges = value.getDocumentChanges();[m
[32m+[m[32m                for (DocumentChange documentChange : documentChanges){[m
[32m+[m[32m                    if (error != null) {[m
[32m+[m[32m                        Log.w("logchk", "Listen failed.", error);[m
[32m+[m[32m                        return;[m
[32m+[m[32m                    }[m
[32m+[m[32m                    if (value != null && !value.isEmpty()) {[m
[32m+[m[32m                        DocumentSnapshot snapshot = documentChange.getDocument();[m
[32m+[m[32m                        if (snapshot.equals(value.getDocuments().get(0)))[m
[32m+[m[32m                            Log.d("logchk", "onEvent: right");[m
[32m+[m[32m                        else {[m
[32m+[m[32m                            Map<String, Object> msg = snapshot.getData();[m
[32m+[m[32m                            String name = msg.get("name").toString();[m
[32m+[m[32m                            String message = msg.get("message").toString();[m
[32m+[m[32m                            String time = msg.get("time").toString();[m
[32m+[m[32m                            String profileUrl = msg.get("profileUrl").toString();[m
[32m+[m
[32m+[m[32m                            ChatMessageItem item = new ChatMessageItem(name, message, time, profileUrl);[m
[32m+[m
[32m+[m[32m                            messageItems.add(item);[m
[32m+[m[32m                            adapter.notifyItemInserted(messageItems.size() - 1);[m
[32m+[m[32m                            binding.chatRecyclerView.scrollToPosition(messageItems.size() - 1);[m
[32m+[m[32m                        }[m
[32m+[m[32m                    } else {[m
[32m+[m[32m                        Log.d("logchk", "Current data: null");[m
[32m+[m[32m                    }[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m        binding.btnSendButton.setOnClickListener(new View.OnClickListener() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onClick(View v) {[m
[32m+[m[32m                String nickname = userData.userNickname;[m
[32m+[m[32m                String message = binding.messageInput.getText().toString();[m
[32m+[m[32m                String profileUrl = userData.profileUrl;[m
[32m+[m[32m                Calendar calendar = Calendar.getInstance();[m
[32m+[m[32m                String time = calendar.get(Calendar.HOUR_OF_DAY) + ":" + calendar.get(Calendar.MINUTE);[m
[32m+[m[32m                Object currentTime = System.currentTimeMillis();[m
[32m+[m[32m                Map<String, Object> lastTime = new HashMap<>();[m
[32m+[m[32m                lastTime.put(chatname, currentTime);[m
[32m+[m[32m                chatRef.document("chatSetting").set(lastTime);[m
[32m+[m[32m                db.collection("chatRoom").document("singleChat").update(lastTime);[m
[32m+[m[32m                ChatMessageItem item = new ChatMessageItem(nickname, message, time, profileUrl);[m
[32m+[m[32m                chatRef.document("msg" + currentTime).set(item);[m
[32m+[m[32m                binding.messageInput.setText("");[m
[32m+[m
[32m+[m[32m                InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);[m
[32m+[m[32m                imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);[m
[32m+[m[32m            }[m
[32m+[m[32m        });[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private class MyViewHolder extends RecyclerView.ViewHolder{[m
[32m+[m[32m        ImageView profile;[m
[32m+[m[32m        TextView name;[m
[32m+[m[32m        TextView message;[m
[32m+[m[32m        TextView time;[m
[32m+[m[32m        public MyViewHolder(@NonNull View itemView) {[m
[32m+[m[32m            super(itemView);[m
[32m+[m[32m            profile = itemView.findViewById(R.id.profileImage);[m
[32m+[m[32m            name = itemView.findViewById(R.id.username);[m
[32m+[m[32m            message = itemView.findViewById(R.id.messageText);[m
[32m+[m[32m            time = itemView.findViewById(R.id.chatMessage_time);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    private class ChatAdapter extends RecyclerView.Adapter<MyViewHolder>{[m
[32m+[m[32m        private ArrayList<ChatMessageItem> messageItems;[m
[32m+[m
[32m+[m[32m        private ChatAdapter(ArrayList<ChatMessageItem> messageItems){[m
[32m+[m[32m            this.messageItems = messageItems;[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {[m
[32m+[m[32m            ChatMessageItem item = messageItems.get(position);[m
[32m+[m
[32m+[m[32m            holder.name.setText(item.name);[m
[32m+[m[32m            holder.message.setText(item.message);[m
[32m+[m[32m            holder.time.setText(item.time);[m
[32m+[m[32m            if (!item.profileUrl.equals("none"))[m
[32m+[m[32m                Glide.with(ChatroomActivity.this).load(item.profileUrl).into(holder.profile);[m
[32m+[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public int getItemViewType(int position) {[m
[32m+[m[32m            if (messageItems.get(position).name.equals(userData.userNickname)){[m
[32m+[m[32m                return  MY_CHAT;[m
[32m+[m[32m            }else { return OTHER_CHAT; }[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public int getItemCount() {[m
[32m+[m[32m            return messageItems.size();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        @NonNull[m
[32m+[m[32m        @Override[m
[32m+[m[32m        public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {[m
[32m+[m[32m            View itemView = null;[m
[32m+[m[32m            if (viewType == MY_CHAT){[m
[32m+[m[32m                itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_my_chat_message,parent,false);[m
[32m+[m[32m            } else {[m
[32m+[m[32m                itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.activity_chat_message, parent, false);[m
[32m+[m[32m            }[m
[32m+[m[32m            return new MyViewHolder(itemView);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/ClassChatListFragment.java b/app/src/main/java/com/example/studybuddy/ClassChatListFragment.java[m
[1mindex 881fd9f..5974a35 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/ClassChatListFragment.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/ClassChatListFragment.java[m
[36m@@ -1,8 +1,6 @@[m
 package com.example.studybuddy;[m
 [m
[31m-import android.content.Context;[m
 import android.content.Intent;[m
[31m-import android.content.SharedPreferences;[m
 import android.os.Bundle;[m
 [m
 import androidx.annotation.NonNull;[m
[36m@@ -11,22 +9,19 @@[m [mimport androidx.fragment.app.Fragment;[m
 import androidx.recyclerview.widget.LinearLayoutManager;[m
 import androidx.recyclerview.widget.RecyclerView;[m
 [m
[31m-import android.text.Editable;[m
[31m-import android.text.TextWatcher;[m
 import android.util.Log;[m
 import android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
 import android.widget.Button;[m
[31m-import android.widget.EditText;[m
 import android.widget.ImageView;[m
 import android.widget.TextView;[m
 [m
 import com.bumptech.glide.Glide;[m
 import com.example.studybuddy.databinding.FragmentClassChatListBinding;[m
[32m+[m[32mimport com.example.studybuddy.utility.userData;[m
 import com.google.android.gms.tasks.OnCompleteListener;[m
 import com.google.android.gms.tasks.Task;[m
[31m-import com.google.android.material.floatingactionbutton.FloatingActionButton;[m
 import com.google.firebase.auth.FirebaseAuth;[m
 import com.google.firebase.firestore.AggregateQuerySnapshot;[m
 import com.google.firebase.firestore.AggregateSource;[m
[36m@@ -73,10 +68,9 @@[m [mpublic class ClassChatListFragment extends Fragment {[m
 [m
     ChatListAdapter adapter;[m
 [m
[31m-    private SharedPreferences chatNamePref;[m
[32m+[m[32m    FragmentClassChatListBinding binding;[m
 [m
     ArrayList<ChatListItem> chatListItems = new ArrayList<>();[m
[31m-    ArrayList<ChatListItem> searchListItems = new ArrayList<>();[m
 [m
     DocumentReference docRef = db.collection("chatRoom").document("singleChat");[m
 [m
[36m@@ -124,108 +118,53 @@[m [mpublic class ClassChatListFragment extends Fragment {[m
     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {[m
 [m
         RecyclerView recyclerView = view.findViewById(R.id.chatListRecyclerView);[m
[31m-        chatNamePref = getContext().getSharedPreferences("chatName", Context.MODE_PRIVATE);[m
 [m
         adapter = new ChatListAdapter(chatListItems);[m
         recyclerView.setAdapter(adapter);[m
 [m
[31m-        try {[m
[31m-            docRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {[m
[31m-                @Override[m
[31m-                public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {[m
[31m-                    Map<String, Object> data = value.getData();[m
[31m-                    if (value.exists()){[m
[31m-                        List<String> list = new ArrayList<>(data.keySet());[m
[31m-                        list.sort(new Comparator<String>() {[m
[31m-                                      @Override[m
[31m-                                      public int compare(String o1, String o2) {[m
[31m-                                          return data.get(o2).toString().compareTo(data.get(o1).toString());[m
[31m-                                      }[m
[31m-                                  }[m
[31m-                        );[m
[31m-                        chatListItems.clear();[m
[31m-                        for (int i = 0 ; i < list.size() ; i++){[m
[31m-                            chatListItems.add(new ChatListItem("","","",""));[m
[31m-                        }[m
[31m-                        for (int sequence = 0; sequence < list.size() ; sequence++){[m
[31m-                            String chatList = list.get(sequence);[m
[31m-                            int finalSequence = sequence;[m
[31m-                            docRef.collection(chatList).document("msg"+data.get(chatList)).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {[m
[31m-                                @Override[m
[31m-                                public void onComplete(@NonNull Task<DocumentSnapshot> task) {[m
[31m-                                    if (task.isSuccessful()) {[m
[31m-                                        DocumentSnapshot document = task.getResult();[m
[31m-                                        if (document.exists()) {[m
[31m-                                            Map<String, Object> list = document.getData();[m
[31m-                                            String chatName = chatList;[m
[31m-                                            String message = list.get("message").toString();[m
[31m-                                            String time = list.get("time").toString();[m
[31m-                                            String profile = list.get("profileUrl").toString();[m
[31m-                                            ChatListItem item = new ChatListItem(chatName, message, time, profile);[m
[31m-[m
[31m-                                            chatListItems.remove(finalSequence);[m
[31m-                                            chatListItems.add(finalSequence,item);[m
[31m-                                            adapter.notifyDataSetChanged();[m
[31m-                                            //           adapter.notifyItemInserted(chatListItems.size() - 1);[m
[31m-                                            recyclerView.scrollToPosition(0);[m
[31m-                                            Log.d("logchk", "onComplete: " + chatListItems.size());[m
[31m-[m
[31m-                                        } else {[m
[31m-                                            Log.d("logchk", "No such document");[m
[31m-                                        }[m
[31m-                                    } else {[m
[31m-                                        Log.d("logchk", "get failed with ", task.getException());[m
[31m-                                    }[m
[31m-                                }[m
[31m-                            });[m
[31m-                        }[m
[31m-                    }[m
[31m-[m
[31m-                }[m
[31m-            });[m
[31m-        } catch (SecurityException e) {[m
[31m-            Log.d("logchk", "onViewCreated: " + e);[m
[31m-        }[m
[31m-[m
[31m-[m
[31m-        FloatingActionButton addChatButton = view.findViewById(R.id.addChatButton);[m
[31m-        addChatButton.setOnClickListener(new View.OnClickListener() {[m
[32m+[m[32m        docRef.addSnapshotListener(new EventListener<DocumentSnapshot>() {[m
             @Override[m
[31m-            public void onClick(View v) {[m
[31m-                requireActivity().getSupportFragmentManager().beginTransaction()[m
[31m-                        .add(R.id.fragment_container, CreateChatFragment.newInstance("param1","param2"))[m
[31m-                        .commit();[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        EditText chatNameEdittext = view.findViewById(R.id.chatSearchEdittext);[m
[31m-        chatNameEdittext.addTextChangedListener(new TextWatcher() {[m
[31m-            @Override[m
[31m-            public void beforeTextChanged(CharSequence s, int start, int count, int after) {[m
[31m-            }[m
[31m-[m
[31m-            @Override[m
[31m-            public void onTextChanged(CharSequence s, int start, int before, int count) {[m
[31m-            }[m
[31m-[m
[31m-            @Override[m
[31m-            public void afterTextChanged(Editable s) {[m
[31m-                String chatSearch = chatNameEdittext.getText().toString();[m
[31m-                searchListItems.clear();[m
[31m-                if (chatSearch.equals("")){[m
[31m-                    adapter.setListItems(chatListItems);[m
[31m-                } else {[m
[31m-                    for (int i = 0; i < chatListItems.size(); i++){[m
[31m-                        if (chatListItems.get(i).getName().toLowerCase().contains(chatSearch.toLowerCase())){[m
[31m-                            searchListItems.add(chatListItems.get(i));[m
[31m-                        }[m
[31m-                        adapter.setListItems(searchListItems);[m
[32m+[m[32m            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {[m
[32m+[m[32m                Map<String, Object> data = value.getData();[m
[32m+[m[32m                List<String> list = new ArrayList<>(data.keySet());[m
[32m+[m[32m                list.sort(new Comparator<String>() {[m
[32m+[m[32m                    @Override[m
[32m+[m[32m                    public int compare(String o1, String o2) {[m
[32m+[m[32m                        return data.get(o2).toString().compareTo(data.get(o1).toString());[m
                     }[m
[32m+[m[32m                });[m
[32m+[m[32m                chatListItems.clear();[m
[32m+[m[32m                for (String chatList : list){[m
[32m+[m[32m                    docRef.collection(chatList).document("msg"+data.get(chatList)).get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {[m
[32m+[m[32m                        @Override[m
[32m+[m[32m                        public void onComplete(@NonNull Task<DocumentSnapshot> task) {[m
[32m+[m[32m                            if (task.isSuccessful()) {[m
[32m+[m[32m                                DocumentSnapshot document = task.getResult();[m
[32m+[m[32m                                if (document.exists()) {[m
[32m+[m[32m                                    Map<String, Object> list = document.getData();[m
[32m+[m[32m                                    String chatName = chatList;[m
[32m+[m[32m                                    String message = list.get("message").toString();[m
[32m+[m[32m                                    String time = list.get("time").toString();[m
[32m+[m[32m                                    String profile = list.get("profileUrl").toString();[m
[32m+[m[32m                                    ChatListItem item = new ChatListItem(chatName, message, time, profile);[m
[32m+[m
[32m+[m[32m                                    chatListItems.add(item);[m
[32m+[m[32m                                    adapter.notifyItemInserted(chatListItems.size() - 1);[m
[32m+[m[32m                                    recyclerView.scrollToPosition(0);[m
[32m+[m[32m                                    Log.d("logchk", "onComplete: " + chatListItems);[m
[32m+[m
[32m+[m[32m                                } else {[m
[32m+[m[32m                                    Log.d("logchk", "No such document");[m
[32m+[m[32m                                }[m
[32m+[m[32m                            } else {[m
[32m+[m[32m                                Log.d("logchk", "get failed with ", task.getException());[m
[32m+[m[32m                            }[m
[32m+[m[32m                        }[m
[32m+[m[32m                    });[m
                 }[m
             }[m
         });[m
 [m
[31m-[m
         super.onViewCreated(view, savedInstanceState);[m
 [m
     }[m
[36m@@ -264,12 +203,10 @@[m [mpublic class ClassChatListFragment extends Fragment {[m
             holder.itemView.setOnClickListener(new View.OnClickListener() {[m
                 @Override[m
                 public void onClick(View v) {[m
[31m-                    SharedPreferences.Editor editor = chatNamePref.edit();[m
[31m-                    editor.putString("Name", item.chatname);[m
[31m-                    editor.apply();[m
[31m-                    requireActivity().getSupportFragmentManager().beginTransaction()[m
[31m-                            .replace(R.id.fragment_container, new ChatRoomFragment())[m
[31m-                            .commit();[m
[32m+[m[32m                    Intent intent = new Intent(getActivity(), ChatroomActivity.class);[m
[32m+[m[32m                    intent.putExtra("chatname", item.chatname);[m
[32m+[m[32m                    startActivity(intent);[m
[32m+[m[32m                    getActivity().finish();[m
                 }[m
             });[m
         }[m
[36m@@ -279,11 +216,6 @@[m [mpublic class ClassChatListFragment extends Fragment {[m
             return listItems.size();[m
         }[m
 [m
[31m-        public void setListItems(ArrayList<ChatListItem> chatListItems){[m
[31m-            this.listItems = chatListItems;[m
[31m-            notifyDataSetChanged();[m
[31m-        }[m
[31m-[m
         @NonNull[m
         @Override[m
         public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/CreateChatActivity.java b/app/src/main/java/com/example/studybuddy/CreateChatActivity.java[m
[1mnew file mode 100644[m
[1mindex 0000000..0044d75[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/java/com/example/studybuddy/CreateChatActivity.java[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mpackage com.example.studybuddy;[m
[32m+[m
[32m+[m[32mimport android.os.Bundle;[m
[32m+[m
[32m+[m[32mimport androidx.activity.EdgeToEdge;[m
[32m+[m[32mimport androidx.appcompat.app.AppCompatActivity;[m
[32m+[m[32mimport androidx.core.graphics.Insets;[m
[32m+[m[32mimport androidx.core.view.ViewCompat;[m
[32m+[m[32mimport androidx.core.view.WindowInsetsCompat;[m
[32m+[m
[32m+[m[32mpublic class CreateChatActivity extends AppCompatActivity {[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    protected void onCreate(Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m
[32m+[m[32m        setContentView(R.layout.activity_create_chat);[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/CreateChatFragment.java b/app/src/main/java/com/example/studybuddy/CreateChatFragment.java[m
[1mdeleted file mode 100644[m
[1mindex 325a26d..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/CreateChatFragment.java[m
[1m+++ /dev/null[m
[36m@@ -1,118 +0,0 @@[m
[31m-package com.example.studybuddy;[m
[31m-[m
[31m-import android.content.Context;[m
[31m-import android.content.SharedPreferences;[m
[31m-import android.os.Bundle;[m
[31m-[m
[31m-import androidx.annotation.NonNull;[m
[31m-import androidx.annotation.Nullable;[m
[31m-import androidx.fragment.app.Fragment;[m
[31m-[m
[31m-import android.view.LayoutInflater;[m
[31m-import android.view.View;[m
[31m-import android.view.ViewGroup;[m
[31m-import android.widget.Button;[m
[31m-import android.widget.EditText;[m
[31m-import android.widget.ImageButton;[m
[31m-import android.widget.Toast;[m
[31m-[m
[31m-import com.google.firebase.auth.FirebaseAuth;[m
[31m-import com.google.firebase.firestore.FirebaseFirestore;[m
[31m-[m
[31m-/**[m
[31m- * A simple {@link Fragment} subclass.[m
[31m- * Use the {@link CreateChatFragment#newInstance} factory method to[m
[31m- * create an instance of this fragment.[m
[31m- */[m
[31m-public class CreateChatFragment extends Fragment {[m
[31m-[m
[31m-    // TODO: Rename parameter arguments, choose names that match[m
[31m-    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER[m
[31m-    private static final String ARG_PARAM1 = "param1";[m
[31m-    private static final String ARG_PARAM2 = "param2";[m
[31m-[m
[31m-    // TODO: Rename and change types of parameters[m
[31m-    private String mParam1;[m
[31m-    private String mParam2;[m
[31m-    private SharedPreferences chatNamePref;[m
[31m-    private FirebaseAuth mAuth;[m
[31m-    private FirebaseFirestore db;[m
[31m-[m
[31m-    public CreateChatFragment() {[m
[31m-        // Required empty public constructor[m
[31m-    }[m
[31m-[m
[31m-    /**[m
[31m-     * Use this factory method to create a new instance of[m
[31m-     * this fragment using the provided parameters.[m
[31m-     *[m
[31m-     * @param param1 Parameter 1.[m
[31m-     * @param param2 Parameter 2.[m
[31m-     * @return A new instance of fragment CreateChatFragment.[m
[31m-     */[m
[31m-    // TODO: Rename and change types and number of parameters[m
[31m-    public static CreateChatFragment newInstance(String param1, String param2) {[m
[31m-        CreateChatFragment fragment = new CreateChatFragment();[m
[31m-        Bundle args = new Bundle();[m
[31m-        args.putString(ARG_PARAM1, param1);[m
[31m-        args.putString(ARG_PARAM2, param2);[m
[31m-        fragment.setArguments(args);[m
[31m-        return fragment;[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void onCreate(Bundle savedInstanceState) {[m
[31m-        super.onCreate(savedInstanceState);[m
[31m-        if (getArguments() != null) {[m
[31m-            mParam1 = getArguments().getString(ARG_PARAM1);[m
[31m-            mParam2 = getArguments().getString(ARG_PARAM2);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {[m
[31m-        View view = inflater.inflate(R.layout.fragment_create_chat,container,false);[m
[31m-[m
[31m-        // Inflate the layout for this fragment[m
[31m-        return view;[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {[m
[31m-        super.onViewCreated(view, savedInstanceState);[m
[31m-[m
[31m-        mAuth = FirebaseAuth.getInstance();[m
[31m-        db = FirebaseFirestore.getInstance();[m
[31m-        chatNamePref = getContext().getSharedPreferences("chatName", Context.MODE_PRIVATE);[m
[31m-[m
[31m-        ImageButton backButton = view.findViewById(R.id.backButton);[m
[31m-        backButton.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-                getParentFragmentManager().beginTransaction()[m
[31m-                        .remove(CreateChatFragment.this)[m
[31m-                        .commit();[m
[31m-            }[m
[31m-        });[m
[31m-        EditText chatNameText = view.findViewById(R.id.editTextChatRoomName);[m
[31m-[m
[31m-        Button createChatButton = view.findViewById(R.id.btn_createChat);[m
[31m-        createChatButton.setOnClickListener(new View.OnClickListener() {[m
[31m-            @Override[m
[31m-            public void onClick(View v) {[m
[31m-[m
[31m-                if (chatNameText.getText().toString().isEmpty()){[m
[31m-                    Toast.makeText(getContext(), "채팅방 이름은 공백일 수 없습니다.", Toast.LENGTH_SHORT).show();[m
[31m-                } else{[m
[31m-                    SharedPreferences.Editor editor = chatNamePref.edit();[m
[31m-                    editor.putString("Name", chatNameText.getText().toString());[m
[31m-                    editor.apply();[m
[31m-                    getParentFragmentManager().beginTransaction()[m
[31m-                            .replace(R.id.fragment_container,new ChatRoomFragment())[m
[31m-                            .commit();[m
[31m-[m
[31m-                }[m
[31m-            }[m
[31m-        });[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/GoalBoardFragment.java b/app/src/main/java/com/example/studybuddy/GoalBoardFragment.java[m
[1mindex 729cc83..2edc365 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/GoalBoardFragment.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/GoalBoardFragment.java[m
[36m@@ -15,18 +15,13 @@[m [mimport androidx.recyclerview.widget.RecyclerView;[m
 import android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
[31m-import android.widget.ImageView;[m
 import android.widget.Spinner;[m
 import android.widget.ArrayAdapter;[m
 import android.widget.AdapterView;[m
 import android.widget.TextView;[m
[31m-import android.widget.Toast;[m
 [m
[31m-import com.bumptech.glide.Glide;[m
 import com.example.studybuddy.GoalRegistrationActivity;[m
 import com.google.android.material.floatingactionbutton.FloatingActionButton;[m
[31m-import com.google.android.material.tabs.TabLayout;[m
[31m-import com.google.firebase.auth.FirebaseAuth;[m
 import com.google.firebase.firestore.CollectionReference;[m
 import com.google.firebase.firestore.EventListener;[m
 import com.google.firebase.firestore.FirebaseFirestore;[m
[36m@@ -37,33 +32,24 @@[m [mimport com.google.firebase.firestore.QuerySnapshot;[m
 import org.json.JSONArray;[m
 import org.json.JSONException;[m
 import org.json.JSONObject;[m
[31m-[m
 import java.util.ArrayList;[m
 import java.util.Collections;[m
[31m-import java.util.HashMap;[m
[32m+[m[32mimport java.util.Comparator;[m
 import java.util.List;[m
[31m-import java.util.Map;[m
 [m
 public class GoalBoardFragment extends Fragment {[m
 [m
     private static final String TAG = "GoalBoardFragment";[m
     private static final String PREFS_NAME = "com.example.studybuddy.GoalPrefs";[m
     private static final String GOAL_LIST_KEY = "goal_list";[m
[31m-[m
[31m-    private TextView goalBoardTitle;[m
[31m-[m
     private RecyclerView recyclerViewGoals;[m
     private GoalAdapter goalAdapter;[m
[31m-    private List<Goal> originalGoalList; // 원본 데이터를 저장할 리스트[m
[32m+[m[32m    private List<Goal> goalList;[m
     private Spinner spinnerGoalFilter;[m
     private FloatingActionButton addGoalButton;[m
     private SharedPreferences sharedPreferences;[m
[31m-[m
     private FirebaseFirestore db;[m
 [m
[31m-    private String currentFilter = "설정한 목표(미인증)";[m
[31m-    private String currentTab = "나의 목표"; // 기본 탭 설정[m
[31m-[m
     @Nullable[m
     @Override[m
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {[m
[36m@@ -72,54 +58,46 @@[m [mpublic class GoalBoardFragment extends Fragment {[m
         // SharedPreferences 설정[m
         sharedPreferences = getContext().getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);[m
 [m
[31m-[m
[31m-[m
         // Firebase Firestore 초기화[m
         db = FirebaseFirestore.getInstance();[m
 [m
[31m-[m
[31m-[m
         // 목표 리스트 초기화[m
[31m-        originalGoalList = new ArrayList<>();[m
[31m-        String chatRoomId = getArguments().getString("chatRoomId");[m
[31m-        goalBoardTitle = view.findViewById(R.id.chatRoomNameText);[m
[31m-        goalBoardTitle.setText(chatRoomId);[m
[32m+[m[32m        goalList = loadGoalsFromPreferences();[m
[32m+[m[32m        Log.d(TAG, "Loaded goal list size: " + goalList.size());[m
 [m
         // RecyclerView 설정[m
         recyclerViewGoals = view.findViewById(R.id.recyclerViewGoals);[m
[32m+[m[32m        if (recyclerViewGoals == null) {[m
[32m+[m[32m            Log.e(TAG, "RecyclerView is null. Please check the XML layout.");[m
[32m+[m[32m        } else {[m
[32m+[m[32m            Log.d(TAG, "RecyclerView found successfully.");[m
[32m+[m[32m        }[m
         recyclerViewGoals.setLayoutManager(new LinearLayoutManager(getContext()));[m
[31m-        goalAdapter = new GoalAdapter(new ArrayList<>());[m
[32m+[m
[32m+[m[32m        // 어댑터 설정[m
[32m+[m[32m        goalAdapter = new GoalAdapter(goalList);[m
         recyclerViewGoals.setAdapter(goalAdapter);[m
[32m+[m[32m        Log.d(TAG, "Adapter set to RecyclerView. Goal list size: " + goalList.size());[m
 [m
[31m-        // RecyclerView 아이템 클릭 리스너 설정[m
[32m+[m[32m        // RecyclerView에서 아이템 클릭 시 GoalDetailsFragment 열기[m
         goalAdapter.setOnItemClickListener(new GoalAdapter.OnItemClickListener() {[m
             @Override[m
             public void onItemClick(int position) {[m
[31m-                if (position >= 0 && position < goalAdapter.getGoalList().size()) {[m
[31m-                    String goalId = goalAdapter.getGoalList().get(position).getId();[m
[31m-                    openGoalDetailsFragment(goalId);[m
[31m-                }[m
[32m+[m[32m                String goalId = goalList.get(position).getId(); // 목표의 고유 ID 가져오기[m
[32m+[m[32m                openGoalDetailsFragment(goalId);[m
             }[m
         });[m
 [m
[31m-        // TabLayout 설정[m
[31m-        TabLayout tabLayout = view.findViewById(R.id.goalTab);[m
[31m-        tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {[m
[31m-            @Override[m
[31m-            public void onTabSelected(TabLayout.Tab tab) {[m
[31m-                currentTab = tab.getText().toString(); // 선택된 탭 저장[m
[31m-                loadGoalsFromFirebase(); // 탭 변경 시 Firebase에서 데이터 다시 로드[m
[31m-            }[m
[31m-[m
[31m-            @Override[m
[31m-            public void onTabUnselected(TabLayout.Tab tab) {}[m
[31m-[m
[31m-            @Override[m
[31m-            public void onTabReselected(TabLayout.Tab tab) {}[m
[31m-        });[m
[32m+[m[32m        // Firebase에서 목표 불러오기[m
[32m+[m[32m        loadGoalsFromFirebase();[m
 [m
         // Spinner 설정[m
         spinnerGoalFilter = view.findViewById(R.id.goalSetSpinner);[m
[32m+[m[32m        if (spinnerGoalFilter == null) {[m
[32m+[m[32m            Log.e(TAG, "Spinner is null. Please check the XML layout.");[m
[32m+[m[32m        } else {[m
[32m+[m[32m            Log.d(TAG, "Spinner found successfully.");[m
[32m+[m[32m        }[m
         ArrayAdapter<String> spinnerAdapter = new ArrayAdapter<>(getContext(), R.layout.spinner_item, getResources().getStringArray(R.array.goal_filter_options));[m
         spinnerAdapter.setDropDownViewResource(R.layout.spinner_item);[m
         spinnerGoalFilter.setAdapter(spinnerAdapter);[m
[36m@@ -128,43 +106,37 @@[m [mpublic class GoalBoardFragment extends Fragment {[m
         spinnerGoalFilter.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {[m
             @Override[m
             public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {[m
[31m-                currentFilter = (String) parent.getItemAtPosition(position); // 선택된 필터 저장[m
[31m-                filterGoals(currentFilter); // 필터링 적용[m
[32m+[m[32m                String selectedItem = (String) parent.getItemAtPosition(position);[m
[32m+[m[32m                Log.d(TAG, "Spinner item selected: " + selectedItem);[m
[32m+[m[32m                filterGoals(selectedItem);[m
             }[m
 [m
             @Override[m
[31m-            public void onNothingSelected(AdapterView<?> parent) {}[m
[32m+[m[32m            public void onNothingSelected(AdapterView<?> parent) {[m
[32m+[m[32m                Log.d(TAG, "No spinner item selected.");[m
[32m+[m[32m            }[m
         });[m
 [m
         // FloatingActionButton 설정 (목표 추가)[m
[31m-[m
         addGoalButton = view.findViewById(R.id.addGoalButton);[m
[32m+[m[32m        if (addGoalButton == null) {[m
[32m+[m[32m            Log.e(TAG, "FloatingActionButton is null. Please check the XML layout.");[m
[32m+[m[32m        } else {[m
[32m+[m[32m            Log.d(TAG, "FloatingActionButton found successfully.");[m
[32m+[m[32m        }[m
         addGoalButton.setOnClickListener(v -> {[m
[31m-            // 현재 chatRoomId를 가져온다[m
[31m-[m
[31m-[m
[31m-            // Intent에 chatRoomId를 담아서 Activity로 전달[m
             Intent intent = new Intent(getActivity(), GoalRegistrationActivity.class);[m
[31m-            intent.putExtra("chatRoomId", chatRoomId); // chatRoomId 전달[m
             startActivityForResult(intent, 1001);[m
         });[m
 [m
[31m-        // Firebase에서 목표 불러오기[m
[31m-        refreshGoals();[m
[31m-        loadGoalsFromFirebase();[m
[31m-[m
         return view;[m
     }[m
 [m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
     @Override[m
     public void onResume() {[m
         super.onResume();[m
[31m-        loadGoalsFromFirebase(); // Firebase에서 목표 리스트를 다시 불러옵니다.[m
[31m-        refreshGoals();[m
[32m+[m[32m        // Firebase에서 목표 불러오기 (화면이 다시 활성화될 때마다 최신 데이터를 반영)[m
[32m+[m[32m        loadGoalsFromFirebase();[m
     }[m
 [m
     @Override[m
[36m@@ -173,7 +145,6 @@[m [mpublic class GoalBoardFragment extends Fragment {[m
         saveGoalsToPreferences();[m
     }[m
 [m
[31m-[m
     @Override[m
     public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {[m
         super.onActivityResult(requestCode, resultCode, data);[m
[36m@@ -183,242 +154,99 @@[m [mpublic class GoalBoardFragment extends Fragment {[m
         }[m
     }[m
 [m
[31m-    public void refreshGoals() {[m
[31m-        Log.d(TAG, "Refreshing goals with current filter: " + currentFilter);[m
[31m-        loadGoalsFromFirebase(); // Firestore에서 목표 리스트를 다시 불러옵니다.[m
[31m-    }[m
 [m
[31m-    // 목표 상세 정보 화면으로 이동하는 메소드[m
[31m-    private void openGoalDetailsFragment(String goalId) {[m
[31m-        if (getActivity() != null && goalId != null) {[m
[31m-            String chatRoomId = getArguments().getString("chatRoomId"); // 현재 Fragment의 chatRoomId 가져오기[m
[31m-[m
[31m-            if (chatRoomId == null || chatRoomId.isEmpty()) {[m
[31m-                Log.e("logchk", "ChatRoomId is missing!");[m
[31m-                Toast.makeText(getContext(), "ChatRoomId가 유효하지 않습니다.", Toast.LENGTH_SHORT).show();[m
[31m-                return;[m
[32m+[m[32m    // 목표 필터링 메소드[m
[32m+[m[32m    private void filterGoals(String filter) {[m
[32m+[m[32m        Log.d(TAG, "Filtering goals with filter: " + filter);[m
[32m+[m[32m        // 필터에 따라 goalList 업데이트 및 어댑터에 반영[m
[32m+[m[32m        List<Goal> filteredGoals = new ArrayList<>();[m
[32m+[m[32m        for (Goal goal : goalList) {[m
[32m+[m[32m            if (filter.equals("인증한 목표") && goal.isAchieved() && !goal.isRecognized()) {[m
[32m+[m[32m                filteredGoals.add(goal);[m
[32m+[m[32m            } else if (filter.equals("미인증 목표") && !goal.isAchieved()) {[m
[32m+[m[32m                filteredGoals.add(goal);[m
[32m+[m[32m            } else if (filter.equals("설정한 목표(미인증)")) {[m
[32m+[m[32m                filteredGoals.add(goal);[m
[32m+[m[32m            } else if (filter.equals("인정된 목표") && goal.isRecognized()) {[m
[32m+[m[32m                filteredGoals.add(goal);[m
             }[m
[31m-[m
[31m-            Bundle bundle = new Bundle();[m
[31m-            bundle.putString("goalId", goalId);[m
[31m-            bundle.putString("chatRoomId", chatRoomId); // chatRoomId 전달[m
[31m-[m
[31m-            GoalDetailsFragment goalDetailsFragment = new GoalDetailsFragment();[m
[31m-            goalDetailsFragment.setArguments(bundle);[m
[31m-[m
[31m-            FragmentTransaction transaction = getActivity().getSupportFragmentManager().beginTransaction();[m
[31m-            transaction.replace(R.id.fragment_container, goalDetailsFragment);[m
[31m-            transaction.addToBackStack(null);[m
[31m-            transaction.commit();[m
         }[m
[31m-    }[m
 [m
[31m-    private void loadGoalsFromFirebase() {[m
[31m-        String chatRoomId = getArguments().getString("chatRoomId"); // 전달받은 chatRoomId[m
[31m-        CollectionReference goalsRef = db.collection("Goals").document(chatRoomId).collection("goals");[m
[31m-        CollectionReference userInfoRef = db.collection("userInfo"); // userInfo 컬렉션 참조[m
[31m-        String currentUserId = FirebaseAuth.getInstance().getCurrentUser().getUid();[m
[31m-[m
[31m-        // 닉네임 캐시를 위한 맵[m
[31m-        Map<String, String> userNicknameMap = new HashMap<>();[m
[31m-[m
[31m-        // userInfo 컬렉션에서 닉네임 미리 로드[m
[31m-        userInfoRef.get().addOnSuccessListener(userSnapshot -> {[m
[31m-            for (QueryDocumentSnapshot userDoc : userSnapshot) {[m
[31m-                String userId = userDoc.getId();[m
[31m-                String nickName = userDoc.getString("Nickname");[m
[31m-                userNicknameMap.put(userId, nickName != null ? nickName : "Unknown User");[m
[32m+[m[32m        // D-Day 정렬 적용[m
[32m+[m[32m        Collections.sort(filteredGoals, new Comparator<Goal>() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public int compare(Goal g1, Goal g2) {[m
[32m+[m[32m                return Integer.compare(g1.getDueInDays(), g2.getDueInDays());[m
             }[m
[32m+[m[32m        });[m
 [m
[31m-            // Goals 데이터를 로드[m
[31m-            goalsRef.get().addOnSuccessListener(goalSnapshot -> {[m
[31m-                originalGoalList.clear();[m
[31m-[m
[31m-                for (QueryDocumentSnapshot doc : goalSnapshot) {[m
[31m-                    String id = doc.getId();[m
[31m-                    String title = doc.getString("title");[m
[31m-                    int dueInDays = doc.getLong("dueInDays") != null ? doc.getLong("dueInDays").intValue() : 0;[m
[31m-                    int likes = doc.getLong("likes") != null ? doc.getLong("likes").intValue() : 0;[m
[31m-                    int goalLikes = doc.getLong("goalLikes") != null ? doc.getLong("goalLikes").intValue() : 0;[m
[31m-                    String userId = doc.getString("userId");[m
[31m-                    String status = doc.getString("status") != null ? doc.getString("status") : "pending";[m
[31m-                    String certificationImageUrl = doc.getString("certificationImageUrl");[m
[31m-                    String certificationDescription = doc.getString("certificationDescription");[m
[31m-[m
[31m-                    // 닉네임 캐시에서 가져오기[m
[31m-                    String nickName = userNicknameMap.getOrDefault(userId, "Unknown User");[m
[31m-[m
[31m-                    // Goal 객체 생성[m
[31m-                    Goal goal = new Goal([m
[31m-                            id,[m
[31m-                            title,[m
[31m-                            dueInDays,[m
[31m-                            likes,[m
[31m-                            goalLikes,[m
[31m-                            status,[m
[31m-                            certificationImageUrl,[m
[31m-                            certificationDescription,[m
[31m-                            nickName[m
[31m-                    );[m
[31m-[m
[31m-                    // 탭에 따른 목표 필터링 (나의 목표 / 스터디 메이트의 목표)[m
[31m-                    if ((currentTab.equals("나의 목표") && currentUserId.equals(userId)) ||[m
[31m-                            (currentTab.equals("스터디 메이트의 목표") && !currentUserId.equals(userId))) {[m
[31m-                        originalGoalList.add(goal);[m
[31m-                    }[m
[31m-                }[m
[31m-[m
[31m-                // 모든 데이터를 정렬 및 필터링 후 RecyclerView 갱신[m
[31m-                sortGoalsByDueDate();[m
[31m-                filterGoals(currentFilter);[m
[31m-            }).addOnFailureListener(e -> Log.e(TAG, "Failed to fetch goals", e));[m
[31m-        }).addOnFailureListener(e -> Log.e(TAG, "Failed to fetch user info", e));[m
[32m+[m[32m        Log.d(TAG, "Filtered goal list size: " + filteredGoals.size());[m
[32m+[m[32m        goalAdapter.updateGoals(filteredGoals);[m
     }[m
 [m
[31m-//    private void loadGoalsFromFirebase() {[m
[31m-//        String chatRoomId = getArguments().getString("chatRoomId"); // 전달받은 chatRoomId[m
[31m-//        CollectionReference goalsRef = db.collection("Goals").document(chatRoomId).collection("goals");[m
[31m-//        CollectionReference userInfoRef = db.collection("userInfo"); // userInfo 컬렉션 참조[m
[31m-//        String currentUserId = FirebaseAuth.getInstance().getCurrentUser().getUid();[m
[31m-//[m
[31m-//        goalsRef.addSnapshotListener((value, error) -> {[m
[31m-//            if (error != null) {[m
[31m-//                Log.e(TAG, "Listen failed: " + error);[m
[31m-//                return;[m
[31m-//            }[m
[31m-//[m
[31m-//            if (value != null) {[m
[31m-//                originalGoalList.clear();[m
[31m-//[m
[31m-//                for (QueryDocumentSnapshot doc : value) {[m
[31m-//                    String id = doc.getId();[m
[31m-//                    String title = doc.getString("title");[m
[31m-//                    int dueInDays = doc.getLong("dueInDays") != null ? doc.getLong("dueInDays").intValue() : 0;[m
[31m-//                    int likes = doc.getLong("likes") != null ? doc.getLong("likes").intValue() : 0;[m
[31m-//                    int goalLikes = doc.getLong("goalLikes") != null ? doc.getLong("goalLikes").intValue() : 0;[m
[31m-//                    String userId = doc.getString("userId");[m
[31m-//[m
[31m-//                    // status 값을 바로 계산[m
[31m-//                    String status = doc.getString("status") != null ? doc.getString("status") : "pending";[m
[31m-//[m
[31m-//                    String certificationImageUrl = doc.getString("certificationImageUrl");[m
[31m-//                    String certificationDescription = doc.getString("certificationDescription");[m
[31m-//[m
[31m-//                    // userId를 기반으로 userInfo에서 닉네임 쿼리[m
[31m-//                    userInfoRef.document(userId).get().addOnSuccessListener(userDoc -> {[m
[31m-//                        String nickName = userDoc.getString("Nickname"); // 닉네임 가져오기[m
[31m-//[m
[31m-//                        // Goal 객체 생성[m
[31m-//                        Goal goal = new Goal([m
[31m-//                                id,[m
[31m-//                                title,[m
[31m-//                                dueInDays,[m
[31m-//                                likes,[m
[31m-//                                goalLikes,[m
[31m-//                                status, // 바로 계산된 status 값 전달[m
[31m-//                                certificationImageUrl,[m
[31m-//                                certificationDescription,[m
[31m-//                                nickName[m
[31m-//                        );[m
[31m-//[m
[31m-//                        // 탭에 따른 목표 필터링 (나의 목표 / 스터디 메이트의 목표)[m
[31m-//                        if ((currentTab.equals("나의 목표") && currentUserId.equals(userId)) ||[m
[31m-//                                (currentTab.equals("스터디 메이트의 목표") && !currentUserId.equals(userId))) {[m
[31m-//                            originalGoalList.add(goal);[m
[31m-//                        }[m
[31m-//[m
[31m-//                        // 모든 데이터를 정렬 및 필터링 후 RecyclerView 갱신[m
[31m-//                        sortGoalsByDueDate();[m
[31m-//                        filterGoals(currentFilter);[m
[31m-//                    }).addOnFailureListener(e -> {[m
[31m-//                        Log.e(TAG, "Failed to fetch user info for userId: " + userId, e);[m
[31m-//                    });[m
[31m-//                }[m
[31m-//            }[m
[31m-//        });[m
[31m-//    }[m
[31m-[m
[31m-[m
[31m-//    private void loadGoalsFromFirebase() {[m
[31m-//        String chatRoomId = getArguments().getString("chatRoomId"); // 전달받은 chatRoomId[m
[31m-//        CollectionReference goalsRef = db.collection("Goals").document(chatRoomId).collection("goals");[m
[31m-//        String currentUserId = FirebaseAuth.getInstance().getCurrentUser().getUid();[m
[31m-//[m
[31m-//        goalsRef.addSnapshotListener((value, error) -> {[m
[31m-//            if (error != null) {[m
[31m-//                Log.e(TAG, "Listen failed: " + error);[m
[31m-//                return;[m
[31m-//            }[m
[31m-//[m
[31m-//            if (value != null) {[m
[31m-//                originalGoalList.clear();[m
[31m-//[m
[31m-//                for (QueryDocumentSnapshot doc : value) {[m
[31m-//                    String id = doc.getId();[m
[31m-//                    String title = doc.getString("title");[m
[31m-//                    int dueInDays = doc.getLong("dueInDays") != null ? doc.getLong("dueInDays").intValue() : 0;[m
[31m-//                    int likes = doc.getLong("likes") != null ? doc.getLong("likes").intValue() : 0;[m
[31m-//                    int goalLikes = doc.getLong("goalLikes") != null ? doc.getLong("goalLikes").intValue() : 0;[m
[31m-//                    String status = doc.getString("status");[m
[31m-//                    String userId = doc.getString("userId");[m
[31m-//                    String nickName = doc.getString("Nickname");[m
[31m-//[m
[31m-//                    if (status == null) status = "pending";[m
[31m-//[m
[31m-//                    String certificationImageUrl = doc.getString("certificationImageUrl");[m
[31m-//                    String certificationDescription = doc.getString("certificationDescription");[m
[31m-//[m
[31m-//                    Goal goal = new Goal(id, title, dueInDays, likes, goalLikes, status, certificationImageUrl, certificationDescription, nickName);[m
[31m-//[m
[31m-//                    // 탭에 따른 목표 필터링 (나의 목표 / 스터디 메이트의 목표)[m
[31m-//                    if ((currentTab.equals("나의 목표") && currentUserId.equals(userId)) ||[m
[31m-//                            (currentTab.equals("스터디 메이트의 목표") && !currentUserId.equals(userId))) {[m
[31m-//                        originalGoalList.add(goal);[m
[31m-//                    }[m
[31m-//                }[m
[31m-//[m
[31m-//[m
[31m-//[m
[31m-//                sortGoalsByDueDate();[m
[31m-//                // 필터 적용[m
[31m-//                filterGoals(currentFilter);[m
[31m-//                //sortGoalsByDueDate();[m
[31m-//            }[m
[31m-//        });[m
[31m-//    }[m
[31m-[m
[31m-[m
[31m-[m
[32m+[m[32m    private void openGoalDetailsFragment(String goalId) {[m
[32m+[m[32m        Bundle bundle = new Bundle();[m
[32m+[m[32m        bundle.putString("goalId", goalId);[m
[32m+[m[32m        GoalDetailsFragment goalDetailsFragment = new GoalDetailsFragment();[m
[32m+[m[32m        goalDetailsFragment.setArguments(bundle);[m
[32m+[m
[32m+[m[32m        FragmentTransaction transaction = getActivity().getSupportFragmentManager().beginTransaction();[m
[32m+[m[32m        transaction.replace(R.id.fragment_container, goalDetailsFragment);[m
[32m+[m[32m        transaction.addToBackStack(null);[m
[32m+[m[32m        transaction.commit();[m
[32m+[m[32m    }[m
 [m
[32m+[m[32m    // Firebase에서 목표 리스트를 불러오는 메소드[m
[32m+[m[32m    // Firebase에서 목표 리스트를 불러오는 메소드[m
[32m+[m[32m    private void loadGoalsFromFirebase() {[m
[32m+[m[32m        CollectionReference goalsRef = db.collection("Goals");[m
[32m+[m[32m        goalsRef.addSnapshotListener(new EventListener<QuerySnapshot>() {[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {[m
[32m+[m[32m                if (error != null) {[m
[32m+[m[32m                    Log.e(TAG, "Listen failed: " + error);[m
[32m+[m[32m                    return;[m
[32m+[m[32m                }[m
 [m
[31m-    private void filterGoals(String filter) {[m
[31m-        List<Goal> filteredGoals = new ArrayList<>();[m
[32m+[m[32m                if (value != null) {[m
[32m+[m[32m                    goalList.clear();[m
[32m+[m[32m                    for (QueryDocumentSnapshot doc : value) {[m
[32m+[m[32m                        String id = doc.getId(); // Firebase에서 고유 ID 가져오기[m
[32m+[m[32m                        String title = doc.getString("title");[m
[32m+[m[32m                        int dueInDays = doc.getLong("dueInDays") != null ? doc.getLong("dueInDays").intValue() : 0;[m
[32m+[m[32m                        int likes = doc.getLong("likes") != null ? doc.getLong("likes").intValue() : 0;[m
[32m+[m[32m                        int goalLikes = doc.getLong("goalLikes") != null ? doc.getLong("goalLikes").intValue() : 0;[m
[32m+[m[32m                        boolean isAchieved = doc.getBoolean("isAchieved") != null && doc.getBoolean("isAchieved");[m
[32m+[m[32m                        boolean isRecognized = doc.getBoolean("isRecognized") != null && doc.getBoolean("isRecognized");[m
[32m+[m
[32m+[m[32m                        // 새로운 필드 추가: 인증 이미지 URL과 설명[m
[32m+[m[32m                        String certificationImageUrl = doc.getString("certificationImageUrl");[m
[32m+[m[32m                        String certificationDescription = doc.getString("certificationDescription");[m
[32m+[m
[32m+[m[32m                        // Goal 객체 생성 시 새로운 필드 포함[m
[32m+[m[32m                        goalList.add(new Goal(id, title, dueInDays, likes, goalLikes, isAchieved, isRecognized, certificationImageUrl, certificationDescription));[m
[32m+[m[32m                    }[m
 [m
[31m-        for (Goal goal : originalGoalList) {[m
[31m-            if (goal == null || goal.getStatus() == null) continue;[m
[32m+[m[32m                    // D-Day 기준 정렬 적용[m
[32m+[m[32m                    Collections.sort(goalList, new Comparator<Goal>() {[m
[32m+[m[32m                        @Override[m
[32m+[m[32m                        public int compare(Goal g1, Goal g2) {[m
[32m+[m[32m                            return Integer.compare(g1.getDueInDays(), g2.getDueInDays());[m
[32m+[m[32m                        }[m
[32m+[m[32m                    });[m
 [m
[31m-            int dueInDays = goal.getDueInDays();[m
[31m-            if (filter.equals("설정한 목표(미인증)") && goal.getStatus().equals("pending") && dueInDays >= 0) {[m
[31m-                filteredGoals.add(goal);[m
[31m-            } else if (filter.equals("인증한 목표") && goal.getStatus().equals("certified")) {[m
[31m-                filteredGoals.add(goal);[m
[31m-            } else if (filter.equals("인정된 목표") && goal.getStatus().equals("approved")) {[m
[31m-                filteredGoals.add(goal);[m
[31m-            } else if (filter.equals("미인정된 목표") &&[m
[31m-                    (goal.getStatus().equals("unapproved") || (goal.getStatus().equals("pending") && dueInDays < 0))) {[m
[31m-                filteredGoals.add(goal);[m
[32m+[m[32m                    goalAdapter.updateGoals(goalList);[m
[32m+[m[32m                    Log.d(TAG, "Goals loaded from Firebase. Size: " + goalList.size());[m
[32m+[m[32m                }[m
             }[m
[31m-        }[m
[31m-[m
[31m-        Log.d(TAG, "Filtered Goals: " + filteredGoals.size() + " for filter: " + filter);[m
[31m-        goalAdapter.updateGoals(filteredGoals);[m
[32m+[m[32m        });[m
     }[m
 [m
     // 목표 리스트를 SharedPreferences에 저장하는 메소드[m
     private void saveGoalsToPreferences() {[m
         SharedPreferences.Editor editor = sharedPreferences.edit();[m
         JSONArray jsonArray = new JSONArray();[m
[31m-        for (Goal goal : originalGoalList) {[m
[32m+[m[32m        for (Goal goal : goalList) {[m
             try {[m
                 JSONObject jsonObject = new JSONObject();[m
                 jsonObject.put("id", goal.getId());[m
[36m@@ -426,7 +254,9 @@[m [mpublic class GoalBoardFragment extends Fragment {[m
                 jsonObject.put("dueInDays", goal.getDueInDays());[m
                 jsonObject.put("likes", goal.getLikes());[m
                 jsonObject.put("goalLikes", goal.getGoalLikes());[m
[31m-                jsonObject.put("status", goal.getStatus());[m
[32m+[m[32m                jsonObject.put("isAchieved", goal.isAchieved());[m
[32m+[m[32m                jsonObject.put("isRecognized", goal.isRecognized());[m
[32m+[m[32m                // 새로운 필드 추가: 인증 이미지 URL과 설명[m
                 jsonObject.put("certificationImageUrl", goal.getCertificationImageUrl());[m
                 jsonObject.put("certificationDescription", goal.getCertificationDescription());[m
 [m
[36m@@ -437,17 +267,37 @@[m [mpublic class GoalBoardFragment extends Fragment {[m
         }[m
         editor.putString(GOAL_LIST_KEY, jsonArray.toString());[m
         editor.apply();[m
[31m-[m
[31m-[m
[32m+[m[32m        Log.d(TAG, "Goals saved to SharedPreferences. Size: " + goalList.size());[m
     }[m
 [m
[31m-    private void sortGoalsByDueDate() {[m
[31m-        Collections.sort(originalGoalList, (goal1, goal2) -> {[m
[31m-            return Integer.compare(goal1.getDueInDays(), goal2.getDueInDays());[m
[31m-        });[m
[31m-[m
[31m-        // 정렬된 리스트를 어댑터에 반영[m
[31m-        goalAdapter.updateGoals(new ArrayList<>(originalGoalList));[m
[32m+[m[32m    // SharedPreferences에서 목표 리스트를 불러오는 메소드[m
[32m+[m[32m    private List<Goal> loadGoalsFromPreferences() {[m
[32m+[m[32m        List<Goal> loadedGoals = new ArrayList<>();[m
[32m+[m[32m        String jsonString = sharedPreferences.getString(GOAL_LIST_KEY, "");[m
[32m+[m[32m        if (!jsonString.isEmpty()) {[m
[32m+[m[32m            try {[m
[32m+[m[32m                JSONArray jsonArray = new JSONArray(jsonString);[m
[32m+[m[32m                for (int i = 0; i < jsonArray.length(); i++) {[m
[32m+[m[32m                    JSONObject jsonObject = jsonArray.getJSONObject(i);[m
[32m+[m[32m                    String id = jsonObject.getString("id");[m
[32m+[m[32m                    String title = jsonObject.getString("title");[m
[32m+[m[32m                    int dueInDays = jsonObject.getInt("dueInDays");[m
[32m+[m[32m                    int likes = jsonObject.getInt("likes");[m
[32m+[m[32m                    int goalLikes = jsonObject.getInt("goalLikes");[m
[32m+[m[32m                    boolean isAchieved = jsonObject.getBoolean("isAchieved");[m
[32m+[m[32m                    boolean isRecognized = jsonObject.getBoolean("isRecognized");[m
[32m+[m[32m                    // 새로운 필드 추가: 인증 이미지 URL과 설명[m
[32m+[m[32m                    String certificationImageUrl = jsonObject.optString("certificationImageUrl", null);[m
[32m+[m[32m                    String certificationDescription = jsonObject.optString("certificationDescription", null);[m
[32m+[m
[32m+[m[32m                    // Goal 객체 생성 시 새로운 필드 포함[m
[32m+[m[32m                    loadedGoals.add(new Goal(id, title, dueInDays, likes, goalLikes, isAchieved, isRecognized, certificationImageUrl, certificationDescription));[m
[32m+[m[32m                }[m
[32m+[m[32m            } catch (JSONException e) {[m
[32m+[m[32m                Log.e(TAG, "Failed to load goals from SharedPreferences: " + e.getMessage());[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        return loadedGoals;[m
     }[m
 [m
 }[m
[36m@@ -458,31 +308,23 @@[m [mclass Goal {[m
     private int dueInDays;[m
     private int likes;[m
     private int goalLikes;[m
[31m-    private String status; // 추가된 상태 필드[m
[31m-    private String certificationImageUrl;[m
[31m-    private String certificationDescription;[m
[31m-    private String nickname;[m
[32m+[m[32m    private boolean isAchieved;[m
[32m+[m[32m    private boolean isRecognized;[m
[32m+[m[32m    private String certificationImageUrl; // 추가된 필드[m
[32m+[m[32m    private String certificationDescription; // 추가된 필드[m
 [m
[31m-    public Goal(String id, String title, int dueInDays, int likes, int goalLikes, String status, String certificationImageUrl, String certificationDescription, String nickname) {[m
[32m+[m[32m    public Goal(String id, String title, int dueInDays, int likes, int goalLikes, boolean isAchieved, boolean isRecognized, String certificationImageUrl, String certificationDescription) {[m
         this.id = id;[m
         this.title = title;[m
         this.dueInDays = dueInDays;[m
         this.likes = likes;[m
         this.goalLikes = goalLikes;[m
[31m-        this.status = status; // 초기화[m
[32m+[m[32m        this.isAchieved = isAchieved;[m
[32m+[m[32m        this.isRecognized = isRecognized;[m
         this.certificationImageUrl = certificationImageUrl;[m
         this.certificationDescription = certificationDescription;[m
[31m-        this.nickname = nickname;[m
[31m-    }[m
[31m-[m
[31m-    // Getter/Setter 메서드 추가[m
[31m-    public String getStatus() {[m
[31m-        return status;[m
     }[m
 [m
[31m-    public void setStatus(String status) {[m
[31m-        this.status = status;[m
[31m-    }[m
     // Getter 메소드 추가[m
     public String getCertificationImageUrl() {[m
         return certificationImageUrl;[m
[36m@@ -515,13 +357,26 @@[m [mclass Goal {[m
         return goalLikes;[m
     }[m
 [m
[31m-    public String getNickname() {return nickname; }[m
[32m+[m[32m    public boolean isAchieved() {[m
[32m+[m[32m        return isAchieved;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public boolean isRecognized() {[m
[32m+[m[32m        return isRecognized;[m
[32m+[m[32m    }[m
 [m
[32m+[m[32m    public void setAchieved(boolean achieved) {[m
[32m+[m[32m        isAchieved = achieved;[m
[32m+[m[32m    }[m
 [m
[32m+[m[32m    public void setRecognized(boolean recognized) {[m
[32m+[m[32m        isRecognized = recognized;[m
[32m+[m[32m    }[m
 }[m
 [m
 class GoalAdapter extends RecyclerView.Adapter<GoalAdapter.GoalViewHolder> {[m
     private List<Goal> goalList;[m
[32m+[m[32m    private static final String TAG = "GoalAdapter";[m
     private OnItemClickListener listener;[m
 [m
     public interface OnItemClickListener {[m
[36m@@ -548,25 +403,7 @@[m [mclass GoalAdapter extends RecyclerView.Adapter<GoalAdapter.GoalViewHolder> {[m
         Goal goal = goalList.get(position);[m
         holder.goalTitleTextView.setText(goal.getTitle());[m
         holder.dueTextView.setText(goal.getDueDate());[m
[31m-        holder.likeCountTextView.setText(String.valueOf(goal.getGoalLikes()));[m
[31m-[m
[31m-        String nickname = goal.getNickname();[m
[31m-        holder.userName.setText(nickname != null ? nickname : "Unknown User");[m
[31m-[m
[31m-        String imageUrl = goal.getCertificationImageUrl();[m
[31m-        if (imageUrl != null && !imageUrl.isEmpty()) {[m
[31m-            Glide.with(holder.thumbnail.getContext())[m
[31m-                    .load(imageUrl)[m
[31m-                    .placeholder(R.drawable.placeholder_image)[m
[31m-                    .error(R.drawable.placeholder_image)[m
[31m-                    .into(holder.thumbnail);[m
[31m-        } else {[m
[31m-            holder.thumbnail.setImageResource(R.drawable.placeholder_image);[m
[31m-        }[m
[31m-[m
[31m-        holder.goalTitleTextView.setVisibility(View.VISIBLE);[m
[31m-        holder.dueTextView.setVisibility(View.VISIBLE);[m
[31m-        holder.likeCountTextView.setVisibility(View.VISIBLE);[m
[32m+[m[32m        holder.likeCountTextView.setText(goal.getLikes() + "/" + goal.getGoalLikes());[m
     }[m
 [m
     @Override[m
[36m@@ -575,14 +412,8 @@[m [mclass GoalAdapter extends RecyclerView.Adapter<GoalAdapter.GoalViewHolder> {[m
     }[m
 [m
     public void updateGoals(List<Goal> updatedGoals) {[m
[31m-        this.goalList.clear();[m
         this.goalList = updatedGoals;[m
[31m-        notifyDataSetChanged(); // RecyclerView 갱신[m
[31m-    }[m
[31m-[m
[31m-    // 여기서 goalList를 반환하는 메서드를 추가[m
[31m-    public List<Goal> getGoalList() {[m
[31m-        return goalList;[m
[32m+[m[32m        notifyDataSetChanged();[m
     }[m
 [m
     static class GoalViewHolder extends RecyclerView.ViewHolder {[m
[36m@@ -590,25 +421,23 @@[m [mclass GoalAdapter extends RecyclerView.Adapter<GoalAdapter.GoalViewHolder> {[m
         TextView dueTextView;[m
         TextView likeCountTextView;[m
 [m
[31m-        TextView userName;[m
[31m-[m
[31m-        ImageView thumbnail;[m
[31m-[m
         public GoalViewHolder(@NonNull View itemView, final OnItemClickListener listener) {[m
             super(itemView);[m
             goalTitleTextView = itemView.findViewById(R.id.goalTitleTextView);[m
             dueTextView = itemView.findViewById(R.id.dueTextView);[m
             likeCountTextView = itemView.findViewById(R.id.likeCountTextView);[m
[31m-            thumbnail = itemView.findViewById(R.id.thumbnail);[m
[31m-            userName = itemView.findViewById(R.id.userIdTextView);[m
 [m
[31m-            itemView.setOnClickListener(v -> {[m
[31m-                int position = getAdapterPosition();[m
[31m-                if (position != RecyclerView.NO_POSITION && listener != null) { // 유효한 포지션인지 확인[m
[31m-                    listener.onItemClick(position);[m
[32m+[m[32m            itemView.setOnClickListener(new View.OnClickListener() {[m
[32m+[m[32m                @Override[m
[32m+[m[32m                public void onClick(View v) {[m
[32m+[m[32m                    if (listener != null) {[m
[32m+[m[32m                        int position = getAdapterPosition();[m
[32m+[m[32m                        if (position != RecyclerView.NO_POSITION) {[m
[32m+[m[32m                            listener.onItemClick(position);[m
[32m+[m[32m                        }[m
[32m+[m[32m                    }[m
                 }[m
             });[m
         }[m
     }[m
[31m-[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/GoalDetailsFragment.java b/app/src/main/java/com/example/studybuddy/GoalDetailsFragment.java[m
[1mindex 449aad3..88f2ca7 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/GoalDetailsFragment.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/GoalDetailsFragment.java[m
[36m@@ -23,7 +23,6 @@[m [mimport com.bumptech.glide.Glide;[m
 import com.google.firebase.auth.FirebaseAuth;[m
 import com.google.firebase.firestore.DocumentReference;[m
 import com.google.firebase.firestore.DocumentSnapshot;[m
[31m-import com.google.firebase.firestore.FieldValue;[m
 import com.google.firebase.firestore.FirebaseFirestore;[m
 import com.google.firebase.firestore.ListenerRegistration;[m
 import com.google.firebase.storage.FirebaseStorage;[m
[36m@@ -50,7 +49,6 @@[m [mpublic class GoalDetailsFragment extends Fragment {[m
     private ImageView certificationImagePreview;[m
     private EditText certificationDescription;[m
 [m
[31m-    private TextView chatTitleTextView;[m
     private TextView certificationDescriptionSet;[m
     private Uri imageUri;[m
 [m
[36m@@ -63,12 +61,6 @@[m [mpublic class GoalDetailsFragment extends Fragment {[m
         db = FirebaseFirestore.getInstance();[m
 [m
         // UI 요소 초기화[m
[31m-[m
[31m-        chatTitleTextView = view.findViewById(R.id.chatRoomNameText);[m
[31m-        String chatRoomId = getArguments().getString("chatRoomId");[m
[31m-        chatTitleTextView.setText(chatRoomId);[m
[31m-[m
[31m-[m
         goalTitleTextView = view.findViewById(R.id.goalDetailsTitle);[m
         goalDescriptionTextView = view.findViewById(R.id.goalDetailsDescription);[m
         goalDueDateTextView = view.findViewById(R.id.goalDetailsDueDate);[m
[36m@@ -113,20 +105,7 @@[m [mpublic class GoalDetailsFragment extends Fragment {[m
     }[m
 [m
     private void loadGoalDetails(String goalId) {[m
[31m-        String chatRoomId = getArguments().getString("chatRoomId"); // 전달받은 chatRoomId[m
[31m-[m
[31m-        if (chatRoomId == null || chatRoomId.isEmpty()) {[m
[31m-            Log.e(TAG, "ChatRoomId is missing!");[m
[31m-            Toast.makeText(getContext(), "ChatRoomId가 유효하지 않습니다.", Toast.LENGTH_SHORT).show();[m
[31m-            return;[m
[31m-        }[m
[31m-[m
[31m-        // Firestore 경로에 chatRoomId를 포함[m
[31m-        DocumentReference goalRef = db.collection("Goals")[m
[31m-                .document(chatRoomId)[m
[31m-                .collection("goals")[m
[31m-                .document(goalId);[m
[31m-[m
[32m+[m[32m        DocumentReference goalRef = db.collection("Goals").document(goalId);[m
         goalListener = goalRef.addSnapshotListener((snapshot, error) -> {[m
             if (error != null) {[m
                 Log.e(TAG, "Error fetching goal details: " + error.getMessage());[m
[36m@@ -134,18 +113,11 @@[m [mpublic class GoalDetailsFragment extends Fragment {[m
             }[m
 [m
             if (snapshot != null && snapshot.exists()) {[m
[31m-                // 기본값 설정[m
[31m-                String status = snapshot.getString("status");[m
[31m-                if (status == null) {[m
[31m-                    status = "pending"; // 기본값 설정[m
[31m-                    goalRef.update("status", "pending") // Firestore에도 기본값 저장[m
[31m-                            .addOnFailureListener(e -> Log.e(TAG, "Failed to update status: " + e.getMessage()));[m
[31m-                }[m
[31m-[m
                 updateUI(snapshot);[m
             }[m
         });[m
     }[m
[32m+[m
     private void updateUI(DocumentSnapshot snapshot) {[m
         String title = snapshot.getString("title");[m
         String description = snapshot.getString("description");[m
[36m@@ -153,60 +125,36 @@[m [mpublic class GoalDetailsFragment extends Fragment {[m
         String userId = snapshot.getString("userId");[m
         String certificationImageUrl = snapshot.getString("certificationImageUrl");[m
         String certificationDescriptionText = snapshot.getString("certificationDescription");[m
[31m-        String status = snapshot.getString("status");[m
 [m
         goalTitleTextView.setText(title);[m
         goalDescriptionTextView.setText(description);[m
         goalDueDateTextView.setText("D-Day: " + dueInDays);[m
 [m
[32m+[m[32m        // 인증 이미지 URL을 사용하여 이미지 로드[m
         if (certificationImageUrl != null && !certificationImageUrl.isEmpty()) {[m
             Glide.with(this)[m
                     .load(certificationImageUrl)[m
[31m-                    .placeholder(R.drawable.placeholder_image)[m
[32m+[m[32m                    .placeholder(R.drawable.placeholder_image) // 이미지 로드 전 표시할 기본 이미지[m
                     .into(certificationImagePreview);[m
         } else {[m
[31m-            certificationImagePreview.setImageResource(R.drawable.placeholder_image);[m
[32m+[m[32m            certificationImagePreview.setImageResource(R.drawable.placeholder_image); // 기본 이미지 설정[m
         }[m
 [m
[32m+[m[32m        // 인증 설명 세팅[m
         if (certificationDescriptionText != null && !certificationDescriptionText.isEmpty()) {[m
             certificationDescriptionSet.setText(certificationDescriptionText);[m
         }[m
 [m
         String currentUserId = FirebaseAuth.getInstance().getCurrentUser().getUid();[m
 [m
[31m-        // 버튼 로직[m
         if (userId != null && userId.equals(currentUserId)) {[m
[31m-            // 본인: 인증 버튼만 표시[m
[31m-            if ("pending".equals(status)) {[m
[31m-                actionButton.setText("인증하기");[m
[31m-                actionButton.setOnClickListener(v -> {[m
[31m-                    if (imageUri != null) {[m
[31m-                        uploadImageToFirebase();[m
[31m-                    } else {[m
[31m-                        Toast.makeText(getContext(), "이미지를 먼저 선택해주세요.", Toast.LENGTH_SHORT).show();[m
[31m-                    }[m
[31m-                });[m
[31m-            } else {[m
[31m-                // 본인은 인증 후 버튼 숨김[m
[31m-                actionButton.setVisibility(View.GONE);[m
[31m-            }[m
[32m+[m[32m            actionButton.setText("인증하기");[m
         } else {[m
[31m-            // 타인: 인정 버튼만 표시[m
             actionButton.setText("인정하기");[m
[31m-[m
[31m-            // 인증 상태에 따라 버튼 동작 설정[m
[31m-            actionButton.setOnClickListener(v -> {[m
[31m-                if ("pending".equals(status)) {[m
[31m-                    Toast.makeText(getContext(), "아직 인증이 되지 않았습니다!", Toast.LENGTH_SHORT).show();[m
[31m-                } else if ("certified".equals(status)) {[m
[31m-                    endorseGoal(goalId); // 목표 인정 로직 호출[m
[31m-                }[m
[31m-            });[m
[32m+[m[32m            actionButton.setOnClickListener(v -> endorseGoal(goalId));[m
         }[m
     }[m
 [m
[31m-[m
[31m-[m
     private void openFileChooser() {[m
         Intent intent = new Intent(Intent.ACTION_PICK);[m
         intent.setType("image/*");[m
[36m@@ -240,28 +188,19 @@[m [mpublic class GoalDetailsFragment extends Fragment {[m
 [m
     private void saveCertificationToFirestore(String imageUrl) {[m
         String description = certificationDescription.getText().toString();[m
[31m-        String chatRoomId = getArguments().getString("chatRoomId"); // 전달받은 chatRoomId[m
[31m-[m
[31m-        if (chatRoomId == null || chatRoomId.isEmpty()) {[m
[31m-            Log.e(TAG, "ChatRoomId is missing!");[m
[31m-            Toast.makeText(getContext(), "ChatRoomId가 유효하지 않습니다.", Toast.LENGTH_SHORT).show();[m
[31m-            return;[m
[31m-        }[m
 [m
         Map<String, Object> updateData = new HashMap<>();[m
         updateData.put("isCertified", true);[m
[31m-        updateData.put("status", "certified");[m
         updateData.put("certificationImageUrl", imageUrl);[m
         updateData.put("certificationDescription", description);[m
 [m
[31m-        db.collection("Goals").document(chatRoomId).collection("goals").document(goalId)[m
[32m+[m[32m        db.collection("Goals").document(goalId)[m
                 .update(updateData)[m
                 .addOnSuccessListener(aVoid -> {[m
                     Toast.makeText(getContext(), "목표가 인증되었습니다!", Toast.LENGTH_SHORT).show();[m
[31m-[m
[31m-                    // 인증 후 현재 Fragment를 닫기[m
                     if (getActivity() != null) {[m
[31m-                        getActivity().getSupportFragmentManager().popBackStack();[m
[32m+[m[32m                        getActivity().setResult(Activity.RESULT_OK); // 결과 코드 설정[m
[32m+[m[32m                        getActivity().getSupportFragmentManager().popBackStack(); // 현재 화면 종료[m
                     }[m
                 })[m
                 .addOnFailureListener(e -> {[m
[36m@@ -269,109 +208,10 @@[m [mpublic class GoalDetailsFragment extends Fragment {[m
                 });[m
     }[m
 [m
[31m-//    private void endorseGoal(String goalId) {[m
[31m-//        String chatRoomId = getArguments().getString("chatRoomId"); // 전달받은 chatRoomId[m
[31m-//[m
[31m-//        if (chatRoomId == null || chatRoomId.isEmpty()) {[m
[31m-//            Log.e("logchk", "ChatRoomId is missing!");[m
[31m-//            Toast.makeText(getContext(), "ChatRoomId가 유효하지 않습니다.", Toast.LENGTH_SHORT).show();[m
[31m-//            return;[m
[31m-//        }[m
[31m-//[m
[31m-//        Map<String, Object> updateData = new HashMap<>();[m
[31m-//        updateData.put("endorsedByOthers", true); // 기존 인정 필드[m
[31m-//        updateData.put("status", "approved"); // 상태를 'approved'로 설정[m
[31m-//[m
[31m-//        // Firestore 경로[m
[31m-//        DocumentReference goalRef = db.collection("Goals")[m
[31m-//                .document(chatRoomId)[m
[31m-//                .collection("goals")[m
[31m-//                .document(goalId);[m
[31m-//[m
[31m-//        // `goalLikes` 필드 증가[m
[31m-//        goalRef.update(updateData) // 기존 필드 업데이트[m
[31m-//                .addOnSuccessListener(aVoid -> {[m
[31m-//                    // goalLikes 증가[m
[31m-//                    goalRef.update("goalLikes", FieldValue.increment(1))[m
[31m-//                            .addOnSuccessListener(aVoid1 -> {[m
[31m-//                                Toast.makeText(getContext(), "목표가 인정되었습니다!", Toast.LENGTH_SHORT).show();[m
[31m-//[m
[31m-//                                // 창 닫기[m
[31m-//                                if (getActivity() != null) {[m
[31m-//                                    getActivity().getSupportFragmentManager().popBackStack();[m
[31m-//                                }[m
[31m-//                            })[m
[31m-//                            .addOnFailureListener(e -> Log.e("logchk", "Error incrementing goalLikes: " + e.getMessage()));[m
[31m-//                })[m
[31m-//                .addOnFailureListener(e -> Log.e("logchk", "Error endorsing goal: " + e.getMessage()));[m
[31m-//    }[m
[31m-[m
     private void endorseGoal(String goalId) {[m
[31m-        String chatRoomId = getArguments().getString("chatRoomId"); // 전달받은 chatRoomId[m
[31m-        String currentUserId = FirebaseAuth.getInstance().getCurrentUser().getUid(); // 현재 사용자 ID[m
[31m-[m
[31m-        if (chatRoomId == null || chatRoomId.isEmpty()) {[m
[31m-            Log.e("logchk", "ChatRoomId is missing!");[m
[31m-            Toast.makeText(getContext(), "ChatRoomId가 유효하지 않습니다.", Toast.LENGTH_SHORT).show();[m
[31m-            return;[m
[31m-        }[m
[31m-[m
[31m-        DocumentReference goalRef = db.collection("Goals")[m
[31m-                .document(chatRoomId)[m
[31m-                .collection("goals")[m
[31m-                .document(goalId);[m
[31m-[m
[31m-        // Firestore에 목표 인정 정보 업데이트[m
[31m-        Map<String, Object> updateData = new HashMap<>();[m
[31m-        updateData.put("endorsedByOthers", true);[m
[31m-        updateData.put("status", "approved");[m
[31m-[m
[31m-        goalRef.update(updateData) // 상태 업데이트[m
[31m-                .addOnSuccessListener(aVoid -> {[m
[31m-                    // goalLikes 필드 증가[m
[31m-                    goalRef.update("goalLikes", FieldValue.increment(1))[m
[31m-                            .addOnSuccessListener(aVoid1 -> {[m
[31m-                                Toast.makeText(getContext(), "목표가 인정되었습니다!", Toast.LENGTH_SHORT).show();[m
[31m-[m
[31m-                                // 알림 정보 Firestore에 저장[m
[31m-                                goalRef.get()[m
[31m-                                        .addOnSuccessListener(documentSnapshot -> {[m
[31m-                                            if (documentSnapshot.exists()) {[m
[31m-                                                String goalTitle = documentSnapshot.getString("title");[m
[31m-                                                String goalOwnerId = documentSnapshot.getString("userId"); // 목표 작성자 ID[m
[31m-[m
[31m-                                                // 알림 정보 Firestore에 저장[m
[31m-                                                saveNotification(goalOwnerId, goalTitle, chatRoomId, goalId, currentUserId);[m
[31m-                                            }[m
[31m-                                        });[m
[31m-[m
[31m-                                // 창 닫기[m
[31m-                                if (getActivity() != null) {[m
[31m-                                    getActivity().getSupportFragmentManager().popBackStack();[m
[31m-                                }[m
[31m-                            })[m
[31m-                            .addOnFailureListener(e -> Log.e("logchk", "Error incrementing goalLikes: " + e.getMessage()));[m
[31m-                })[m
[31m-                .addOnFailureListener(e -> Log.e("logchk", "Error endorsing goal: " + e.getMessage()));[m
[31m-    }[m
[31m-[m
[31m-    private void saveNotification(String recipientId, String goalTitle, String chatRoomId, String goalId, String senderId) {[m
[31m-        Map<String, Object> notificationData = new HashMap<>();[m
[31m-        notificationData.put("userId", recipientId); // 알림을 받을 사용자 ID (목표 작성자)[m
[31m-        notificationData.put("title", "목표가 인정받았습니다!");[m
[31m-        notificationData.put("message", "당신의 목표 \"" + goalTitle + "\"이 인정되었습니다!");[m
[31m-        notificationData.put("chatRoomId", chatRoomId);[m
[31m-        notificationData.put("goalId", goalId);[m
[31m-        notificationData.put("senderId", senderId); // 알림을 보낸 사용자 ID[m
[31m-        notificationData.put("timestamp", FieldValue.serverTimestamp());[m
[31m-[m
[31m-        db.collection("notifications")[m
[31m-                .add(notificationData)[m
[31m-                .addOnSuccessListener(documentReference -> Log.d("logchk", "Notification saved successfully!"))[m
[31m-                .addOnFailureListener(e -> Log.e("logchk", "Failed to save notification: " + e.getMessage()));[m
[32m+[m[32m        db.collection("Goals").document(goalId)[m
[32m+[m[32m                .update("endorsedByOthers", true)[m
[32m+[m[32m                .addOnSuccessListener(aVoid -> Toast.makeText(getContext(), "목표가 인정되었습니다!", Toast.LENGTH_SHORT).show())[m
[32m+[m[32m                .addOnFailureListener(e -> Log.e(TAG, "Error endorsing goal: " + e.getMessage()));[m
     }[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/GoalRegistrationActivity.java b/app/src/main/java/com/example/studybuddy/GoalRegistrationActivity.java[m
[1mindex 60d519e..e675d7f 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/GoalRegistrationActivity.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/GoalRegistrationActivity.java[m
[36m@@ -84,18 +84,9 @@[m [mpublic class GoalRegistrationActivity extends AppCompatActivity {[m
         datePickerDialog.show();[m
     }[m
 [m
[31m-[m
     private void saveGoalToFirestore(String title, String description, long dueInDays) {[m
         FirebaseFirestore db = FirebaseFirestore.getInstance();[m
         String userId = FirebaseAuth.getInstance().getCurrentUser().getUid();[m
[31m-        String chatRoomId = getIntent().getStringExtra("chatRoomId"); // Intent로 전달받은 chatRoomId[m
[31m-[m
[31m-        if (chatRoomId == null || chatRoomId.isEmpty()) {[m
[31m-            Log.e("logchk", "ChatRoomId is null or empty. Goal cannot be saved.");[m
[31m-            Toast.makeText(this, "ChatRoomId가 유효하지 않습니다.", Toast.LENGTH_SHORT).show();[m
[31m-            return;[m
[31m-        }[m
[31m-[m
         Map<String, Object> goalData = new HashMap<>();[m
         goalData.put("title", title);[m
         goalData.put("description", description);[m
[36m@@ -103,33 +94,12 @@[m [mpublic class GoalRegistrationActivity extends AppCompatActivity {[m
         goalData.put("isCertified", false);[m
         goalData.put("userId", userId);[m
 [m
[31m-        // chatRoomId 기반 경로로 데이터 저장[m
[31m-        db.collection("Goals").document(chatRoomId).collection("goals")[m
[31m-                .add(goalData)[m
[32m+[m[32m        db.collection("Goals").add(goalData)[m
                 .addOnSuccessListener(documentReference -> {[m
                     Toast.makeText(this, "목표가 등록되었습니다!", Toast.LENGTH_SHORT).show();[m
                     setResult(RESULT_OK);[m
[31m-                    finish(); // Activity 종료[m
[32m+[m[32m                    finish();[m
                 })[m
                 .addOnFailureListener(e -> Log.e("logchk", "Error Adding Goal: " + e.getMessage()));[m
     }[m
[31m-[m
[31m-//    private void saveGoalToFirestore(String title, String description, long dueInDays) {[m
[31m-//        FirebaseFirestore db = FirebaseFirestore.getInstance();[m
[31m-//        String userId = FirebaseAuth.getInstance().getCurrentUser().getUid();[m
[31m-//        Map<String, Object> goalData = new HashMap<>();[m
[31m-//        goalData.put("title", title);[m
[31m-//        goalData.put("description", description);[m
[31m-//        goalData.put("dueInDays", dueInDays);[m
[31m-//        goalData.put("isCertified", false);[m
[31m-//        goalData.put("userId", userId);[m
[31m-//[m
[31m-//        db.collection("Goals").add(goalData)[m
[31m-//                .addOnSuccessListener(documentReference -> {[m
[31m-//                    Toast.makeText(this, "목표가 등록되었습니다!", Toast.LENGTH_SHORT).show();[m
[31m-//                    setResult(RESULT_OK);[m
[31m-//                    finish();[m
[31m-//                })[m
[31m-//                .addOnFailureListener(e -> Log.e("logchk", "Error Adding Goal: " + e.getMessage()));[m
[31m-//    }[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/LoginActivity.java b/app/src/main/java/com/example/studybuddy/LoginActivity.java[m
[1mindex 1991826..9ca3947 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/LoginActivity.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/LoginActivity.java[m
[36m@@ -1,10 +1,7 @@[m
 package com.example.studybuddy;[m
 [m
[31m-import android.content.Context;[m
 import android.content.Intent;[m
[31m-import android.content.SharedPreferences;[m
 import android.os.Bundle;[m
[31m-import android.util.Log;[m
 import android.view.View;[m
 import android.widget.Button;[m
 import android.widget.EditText;[m
[36m@@ -12,26 +9,17 @@[m [mimport android.widget.TextView;[m
 import android.widget.Toast;[m
 [m
 import androidx.activity.EdgeToEdge;[m
[31m-import androidx.annotation.NonNull;[m
 import androidx.appcompat.app.AppCompatActivity;[m
 import androidx.core.graphics.Insets;[m
 import androidx.core.view.ViewCompat;[m
 import androidx.core.view.WindowInsetsCompat;[m
 [m
[31m-import com.google.android.gms.tasks.OnCompleteListener;[m
[31m-import com.google.android.gms.tasks.Task;[m
 import com.google.firebase.auth.FirebaseAuth;[m
 import com.google.firebase.auth.FirebaseUser;[m
[31m-import com.google.firebase.firestore.CollectionReference;[m
[31m-import com.google.firebase.firestore.DocumentReference;[m
[31m-import com.google.firebase.firestore.DocumentSnapshot;[m
[31m-import com.google.firebase.firestore.FirebaseFirestore;[m
 [m
 public class LoginActivity extends AppCompatActivity {[m
 [m
     private FirebaseAuth mAuth;[m
[31m-    private FirebaseFirestore db;[m
[31m-    private SharedPreferences userPref;[m
 [m
     @Override[m
     protected void onCreate(Bundle savedInstanceState) {[m
[36m@@ -66,33 +54,6 @@[m [mpublic class LoginActivity extends AppCompatActivity {[m
     }[m
     private void updateUI(FirebaseUser user) {[m
         if (user != null) {[m
[31m-            Log.d("logchk", "updateUI: " + user.getUid());[m
[31m-           // db.collection("userInfo");[m
[31m-         /*   docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {[m
[31m-                @Override[m
[31m-                public void onComplete(@NonNull Task<DocumentSnapshot> task) {[m
[31m-                    if (task.isSuccessful()) {[m
[31m-                        DocumentSnapshot document = task.getResult();[m
[31m-                        if (document.exists()) {[m
[31m-                            Log.d("logchk", "userData saved");[m
[31m-                            userPref = getSharedPreferences("userData", Context.MODE_PRIVATE);[m
[31m-                            SharedPreferences.Editor editor = userPref.edit();[m
[31m-                            editor.putString("Name", document.getData().get("Name").toString());[m
[31m-                            editor.putString("Email", document.getData().get("Email").toString());[m
[31m-                            editor.putString("Password", document.getData().get("Password").toString());[m
[31m-                            editor.putString("School", document.getData().get("School").toString());[m
[31m-                            editor.putString("Major", document.getData().get("Major").toString());[m
[31m-                            editor.putString("Nickname", document.getData().get("Nickname").toString());[m
[31m-                            editor.putString("Profile", document.getData().get("ProfileImage").toString());[m
[31m-                            editor.apply();[m
[31m-                        } else {[m
[31m-                            Log.d("logchk", "No such document");[m
[31m-                        }[m
[31m-                    } else {[m
[31m-                        Log.d("logchk", "get failed with ", task.getException());[m
[31m-                    }[m
[31m-                }[m
[31m-            });*/[m
             Intent intent = new Intent(this, MainActivity.class);[m
             startActivity(intent);[m
         }[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/MainActivity.java b/app/src/main/java/com/example/studybuddy/MainActivity.java[m
[1mindex bdd15c5..177612d 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/MainActivity.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/MainActivity.java[m
[36m@@ -1,12 +1,9 @@[m
 package com.example.studybuddy;[m
 [m
[31m-import android.content.Context;[m
 import android.content.Intent;[m
[31m-import android.content.SharedPreferences;[m
 import android.os.Build;[m
 import android.os.Bundle;[m
 import android.util.Log;[m
[31m-import android.view.ContentInfo;[m
 import android.view.MenuItem;[m
 import android.view.View;[m
 [m
[36m@@ -19,6 +16,7 @@[m [mimport androidx.core.view.WindowInsetsCompat;[m
 import androidx.fragment.app.Fragment;[m
 import androidx.fragment.app.FragmentManager;[m
 [m
[32m+[m[32mimport com.example.studybuddy.utility.userData;[m
 import com.google.android.gms.tasks.OnCompleteListener;[m
 import com.google.android.gms.tasks.Task;[m
 import com.google.android.material.bottomnavigation.BottomNavigationView;[m
[36m@@ -36,8 +34,6 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
     private FirebaseAuth mAuth;[m
     private FirebaseFirestore db;[m
 [m
[31m-    private SharedPreferences userPref;[m
[31m-[m
     @Override[m
     protected void onCreate(Bundle savedInstanceState) {[m
         super.onCreate(savedInstanceState);[m
[36m@@ -48,17 +44,14 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
 [m
         updateUserData();[m
 [m
[31m-        userPref = getSharedPreferences("userData", Context.MODE_PRIVATE);[m
[31m-[m
[31m-[m
[31m-        // TimerService 시작[m
[31m-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {[m
[31m-            Intent serviceIntent = new Intent(this, TimerService.class);[m
[31m-            startForegroundService(serviceIntent);[m
[31m-        } else {[m
[31m-            Intent serviceIntent = new Intent(this, TimerService.class);[m
[31m-            startService(serviceIntent);[m
[31m-        }[m
[32m+[m[32m//        // TimerService 시작[m
[32m+[m[32m//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {[m
[32m+[m[32m//            Intent serviceIntent = new Intent(this, TimerService.class);[m
[32m+[m[32m//            startForegroundService(serviceIntent);[m
[32m+[m[32m//        } else {[m
[32m+[m[32m//            Intent serviceIntent = new Intent(this, TimerService.class);[m
[32m+[m[32m//            startService(serviceIntent);[m
[32m+[m[32m//        }[m
 [m
         BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);[m
         if (savedInstanceState == null) {[m
[36m@@ -83,7 +76,7 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
                 }[m
 [m
                 if (itemId == R.id.notificationPage) {[m
[31m-                    transferTo(new MyNotificationsFragment());[m
[32m+[m[32m                    transferTo(MyNotificationsFragment.newInstance("param1", "param2"));[m
                     return true;[m
                 }[m
 [m
[36m@@ -105,26 +98,11 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
     }[m
 [m
     private void transferTo(Fragment fragment) {[m
[31m-        FragmentManager fragmentManager = getSupportFragmentManager();[m
[31m-        String tag = fragment.getClass().getSimpleName();[m
[31m-[m
[31m-        // 이미 추가된 프래그먼트가 있는지 확인[m
[31m-        Fragment existingFragment = fragmentManager.findFragmentByTag(tag);[m
[31m-[m
[31m-        if (existingFragment != null) {[m
[31m-            // 기존 프래그먼트를 사용[m
[31m-            fragmentManager.beginTransaction()[m
[31m-                    .replace(R.id.fragment_container, existingFragment, tag)[m
[31m-                    .commit();[m
[31m-        } else {[m
[31m-            // 새로운 프래그먼트를 추가[m
[31m-            fragmentManager.beginTransaction()[m
[31m-                    .replace(R.id.fragment_container, fragment, tag)[m
[31m-                    .commit();[m
[31m-        }[m
[32m+[m[32m        getSupportFragmentManager().beginTransaction()[m
[32m+[m[32m                .replace(R.id.fragment_container, fragment)[m
[32m+[m[32m                .commit();[m
     }[m
 [m
[31m-[m
     private void updateUserData(){[m
         FirebaseUser user = mAuth.getCurrentUser();[m
         DocumentReference docRef = db.collection("userInfo").document(user.getUid());[m
[36m@@ -135,17 +113,13 @@[m [mpublic class MainActivity extends AppCompatActivity {[m
                     DocumentSnapshot document = task.getResult();[m
                     if (document.exists()) {[m
                         Log.d("logchk", "Document exists");[m
[31m-                        userPref = getSharedPreferences("userData", Context.MODE_PRIVATE);[m
[31m-                        SharedPreferences.Editor editor = userPref.edit();[m
[31m-                        editor.putString("Name", (String) document.getData().get("Name"));[m
[31m-                        editor.putString("Email", (String)document.getData().get("Email"));[m
[31m-                        editor.putString("Password", (String)document.getData().get("Password"));[m
[31m-                        editor.putString("School", (String)document.getData().get("School"));[m
[31m-                        editor.putString("Major", (String)document.getData().get("Major"));[m
[31m-                        editor.putString("Nickname", (String)document.getData().get("Nickname"));[m
[31m-                        editor.putString("Profile", (String)document.getData().get("ProfileImage"));[m
[31m-                        editor.apply();[m
[31m-[m
[32m+[m[32m                        userData.userName = (String) document.getData().get("Name");[m
[32m+[m[32m                        userData.userEmail = (String) document.getData().get("Email");[m
[32m+[m[32m                        userData.userPassword = (String) document.getData().get("Password");[m
[32m+[m[32m                        userData.userSchool = (String) document.getData().get("School");[m
[32m+[m[32m                        userData.userMajor = (String) document.getData().get("Major");[m
[32m+[m[32m                        userData.userNickname = (String) document.getData().get("Nickname");[m
[32m+[m[32m                        userData.profileUrl = (String) document.getData().get("ProfileImage");[m
                     } else {[m
                         Log.d("logchk", "No such document");[m
                     }[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/MyNotificationsFragment.java b/app/src/main/java/com/example/studybuddy/MyNotificationsFragment.java[m
[1mindex 0bebd26..314ba23 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/MyNotificationsFragment.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/MyNotificationsFragment.java[m
[36m@@ -1,10 +1,8 @@[m
 package com.example.studybuddy;[m
 [m
[32m+[m[32mimport android.app.Notification;[m
 import android.os.Bundle;[m
[31m-import android.util.Log;[m
 [m
[31m-import androidx.annotation.NonNull;[m
[31m-import androidx.annotation.Nullable;[m
 import androidx.fragment.app.Fragment;[m
 import androidx.recyclerview.widget.LinearLayoutManager;[m
 import androidx.recyclerview.widget.RecyclerView;[m
[36m@@ -13,234 +11,88 @@[m [mimport android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
 [m
[31m-import com.google.firebase.auth.FirebaseAuth;[m
[31m-import com.google.firebase.firestore.DocumentSnapshot;[m
[31m-import com.google.firebase.firestore.FirebaseFirestore;[m
[31m-import com.google.firebase.firestore.ListenerRegistration;[m
[31m-[m
 import java.util.ArrayList;[m
 import java.util.List;[m
 [m
[32m+[m[32m/**[m
[32m+[m[32m * A simple {@link Fragment} subclass.[m
[32m+[m[32m * Use the {@link MyNotificationsFragment#newInstance} factory method to[m
[32m+[m[32m * create an instance of this fragment.[m
[32m+[m[32m */[m
 public class MyNotificationsFragment extends Fragment {[m
 [m
[31m-    private static final String TAG = "MyNotificationsFragment";[m
[31m-[m
     private RecyclerView recyclerView;[m
     private List<String> notificationList;[m
     private NotificationAdapter notificationAdapter;[m
 [m
[31m-    private FirebaseFirestore db; // Firestore 객체 선언[m
[31m-    private ListenerRegistration notificationListener; // 리스너 등록을 관리할 변수[m
[32m+[m[32m    // TODO: Rename parameter arguments, choose names that match[m
[32m+[m[32m    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER[m
[32m+[m[32m    private static final String ARG_PARAM1 = "param1";[m
[32m+[m[32m    private static final String ARG_PARAM2 = "param2";[m
[32m+[m
[32m+[m[32m    // TODO: Rename and change types of parameters[m
[32m+[m[32m    private String mParam1;[m
[32m+[m[32m    private String mParam2;[m
 [m
     public MyNotificationsFragment() {[m
         // Required empty public constructor[m
     }[m
 [m
[31m-    @Nullable[m
[32m+[m[32m    /**[m
[32m+[m[32m     * Use this factory method to create a new instance of[m
[32m+[m[32m     * this fragment using the provided parameters.[m
[32m+[m[32m     *[m
[32m+[m[32m     * @param param1 Parameter 1.[m
[32m+[m[32m     * @param param2 Parameter 2.[m
[32m+[m[32m     * @return A new instance of fragment MyNotificationsFragment.[m
[32m+[m[32m     */[m
[32m+[m[32m    // TODO: Rename and change types and number of parameters[m
[32m+[m[32m    public static MyNotificationsFragment newInstance(String param1, String param2) {[m
[32m+[m[32m        MyNotificationsFragment fragment = new MyNotificationsFragment();[m
[32m+[m[32m        Bundle args = new Bundle();[m
[32m+[m[32m        args.putString(ARG_PARAM1, param1);[m
[32m+[m[32m        args.putString(ARG_PARAM2, param2);[m
[32m+[m[32m        fragment.setArguments(args);[m
[32m+[m[32m        return fragment;[m
[32m+[m[32m    }[m
[32m+[m
     @Override[m
[31m-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {[m
[31m-        View view = inflater.inflate(R.layout.fragment_my_notifications, container, false);[m
[32m+[m[32m    public void onCreate(Bundle savedInstanceState) {[m
[32m+[m[32m        super.onCreate(savedInstanceState);[m
[32m+[m[32m        if (getArguments() != null) {[m
[32m+[m[32m            mParam1 = getArguments().getString(ARG_PARAM1);[m
[32m+[m[32m            mParam2 = getArguments().getString(ARG_PARAM2);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
 [m
[31m-        // Firestore 초기화[m
[31m-        db = FirebaseFirestore.getInstance();[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public View onCreateView(LayoutInflater inflater, ViewGroup container,[m
[32m+[m[32m                             Bundle savedInstanceState) {[m
[32m+[m
[32m+[m[32m        View view = inflater.inflate(R.layout.fragment_my_notifications, container, false);[m
 [m
[31m-        // RecyclerView 초기화[m
         recyclerView = view.findViewById(R.id.notificationRecyclerView);[m
         recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));[m
 [m
[31m-        // 알림 데이터와 어댑터 초기화[m
[32m+[m[32m        // 예제 알림 데이터[m
         notificationList = new ArrayList<>();[m
[32m+[m[32m        notificationList.add("톰 크루즈 님이 목표를 등록했습니다.");[m
[32m+[m[32m        notificationList.add("5분 이상 핸드폰을 사용했습니다!");[m
[32m+[m[32m        notificationList.add("빌리 아일.. 님이 목표를 인정해주었습니다. 2/3");[m
[32m+[m[32m        notificationList.add("알고리즘 기말고사가 15일 남았습니다.");[m
[32m+[m
         notificationAdapter = new NotificationAdapter(notificationList);[m
         recyclerView.setAdapter(notificationAdapter);[m
 [m
         return view;[m
[31m-    }[m
 [m
[31m-    @Override[m
[31m-    public void onStart() {[m
[31m-        super.onStart();[m
[31m-        String currentUserId = FirebaseAuth.getInstance().getCurrentUser().getUid(); // 현재 사용자 ID 가져오기[m
[31m-[m
[31m-        // Firestore 리스너 등록[m
[31m-        notificationListener = db.collection("notifications")[m
[31m-                .whereEqualTo("userId", currentUserId)[m
[31m-                .addSnapshotListener((queryDocumentSnapshots, e) -> {[m
[31m-                    if (e != null) {[m
[31m-                        Log.e(TAG, "Error listening to notifications: " + e.getMessage());[m
[31m-                        return;[m
[31m-                    }[m
[31m-[m
[31m-                    if (queryDocumentSnapshots != null && !queryDocumentSnapshots.isEmpty()) {[m
[31m-                        notificationList.clear(); // 기존 데이터 초기화[m
[31m-                        for (DocumentSnapshot document : queryDocumentSnapshots) {[m
[31m-                            String title = document.getString("title");[m
[31m-                            String message = document.getString("message");[m
[31m-[m
[31m-                            // 알림 데이터 추가[m
[31m-                            notificationList.add(title + ": " + message);[m
[31m-                        }[m
[31m-                        // RecyclerView 갱신[m
[31m-                        notificationAdapter.notifyDataSetChanged();[m
[31m-                    }[m
[31m-                });[m
[31m-    }[m
 [m
[31m-    @Override[m
[31m-    public void onStop() {[m
[31m-        super.onStop();[m
[31m-        // Firestore 리스너 제거[m
[31m-        if (notificationListener != null) {[m
[31m-            notificationListener.remove();[m
[31m-        }[m
[32m+[m[32m        // Inflate the layout for this fragment[m
[32m+[m[32m        //return inflater.inflate(R.layout.fragment_my_notifications, container, false);[m
     }[m
 [m
     public void addNotification(String newNotification) {[m
         notificationList.add(newNotification);[m
         notificationAdapter.notifyDataSetChanged();[m
     }[m
[31m-}[m
[31m-[m
[31m-//package com.example.studybuddy;[m
[31m-//[m
[31m-//import android.app.Notification;[m
[31m-//import android.os.Bundle;[m
[31m-//[m
[31m-//import androidx.fragment.app.Fragment;[m
[31m-//import androidx.recyclerview.widget.LinearLayoutManager;[m
[31m-//import androidx.recyclerview.widget.RecyclerView;[m
[31m-//[m
[31m-//import android.util.Log;[m
[31m-//import android.view.LayoutInflater;[m
[31m-//import android.view.View;[m
[31m-//import android.view.ViewGroup;[m
[31m-//[m
[31m-//import com.google.firebase.auth.FirebaseAuth;[m
[31m-//import com.google.firebase.firestore.DocumentSnapshot;[m
[31m-//[m
[31m-//import java.util.ArrayList;[m
[31m-//import java.util.List;[m
[31m-//[m
[31m-///**[m
[31m-// * A simple {@link Fragment} subclass.[m
[31m-// * Use the {@link MyNotificationsFragment#newInstance} factory method to[m
[31m-// * create an instance of this fragment.[m
[31m-// */[m
[31m-//public class MyNotificationsFragment extends Fragment {[m
[31m-//[m
[31m-//    private RecyclerView recyclerView;[m
[31m-//    private List<String> notificationList;[m
[31m-//    private NotificationAdapter notificationAdapter;[m
[31m-//[m
[31m-//    // TODO: Rename parameter arguments, choose names that match[m
[31m-//    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER[m
[31m-//    private static final String ARG_PARAM1 = "param1";[m
[31m-//    private static final String ARG_PARAM2 = "param2";[m
[31m-//[m
[31m-//    // TODO: Rename and change types of parameters[m
[31m-//    private String mParam1;[m
[31m-//    private String mParam2;[m
[31m-//[m
[31m-//    public MyNotificationsFragment() {[m
[31m-//        // Required empty public constructor[m
[31m-//    }[m
[31m-//[m
[31m-//    /**[m
[31m-//     * Use this factory method to create a new instance of[m
[31m-//     * this fragment using the provided parameters.[m
[31m-//     *[m
[31m-//     * @param param1 Parameter 1.[m
[31m-//     * @param param2 Parameter 2.[m
[31m-//     * @return A new instance of fragment MyNotificationsFragment.[m
[31m-//     */[m
[31m-//    // TODO: Rename and change types and number of parameters[m
[31m-//    public static MyNotificationsFragment newInstance(String param1, String param2) {[m
[31m-//        MyNotificationsFragment fragment = new MyNotificationsFragment();[m
[31m-//        Bundle args = new Bundle();[m
[31m-//        args.putString(ARG_PARAM1, param1);[m
[31m-//        args.putString(ARG_PARAM2, param2);[m
[31m-//        fragment.setArguments(args);[m
[31m-//        return fragment;[m
[31m-//    }[m
[31m-//[m
[31m-//    @Override[m
[31m-//    public void onCreate(Bundle savedInstanceState) {[m
[31m-//        super.onCreate(savedInstanceState);[m
[31m-//        if (getArguments() != null) {[m
[31m-//            mParam1 = getArguments().getString(ARG_PARAM1);[m
[31m-//            mParam2 = getArguments().getString(ARG_PARAM2);[m
[31m-//        }[m
[31m-//    }[m
[31m-//[m
[31m-//    @Override[m
[31m-//    public View onCreateView(LayoutInflater inflater, ViewGroup container,[m
[31m-//                             Bundle savedInstanceState) {[m
[31m-//        View view = inflater.inflate(R.layout.fragment_my_notifications, container, false);[m
[31m-//[m
[31m-//        // RecyclerView 초기화[m
[31m-//        recyclerView = view.findViewById(R.id.notificationRecyclerView);[m
[31m-//        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));[m
[31m-//[m
[31m-//        // 알림 데이터를 저장할 리스트와 어댑터 초기화[m
[31m-//        notificationList = new ArrayList<>();[m
[31m-//        notificationAdapter = new NotificationAdapter(notificationList);[m
[31m-//        recyclerView.setAdapter(notificationAdapter);[m
[31m-//[m
[31m-//        // Firestore에서 실시간 알림 데이터 가져오기[m
[31m-//        String currentUserId = FirebaseAuth.getInstance().getCurrentUser().getUid(); // 현재 사용자 ID[m
[31m-//        db.collection("notifications")[m
[31m-//                .whereEqualTo("userId", currentUserId) // 현재 사용자 ID의 알림만 가져오기[m
[31m-//                .addSnapshotListener((queryDocumentSnapshots, e) -> {[m
[31m-//                    if (e != null) {[m
[31m-//                        Log.e("logchk", "Error listening to notifications: " + e.getMessage());[m
[31m-//                        return;[m
[31m-//                    }[m
[31m-//[m
[31m-//                    if (queryDocumentSnapshots != null && !queryDocumentSnapshots.isEmpty()) {[m
[31m-//                        notificationList.clear(); // 기존 리스트 초기화[m
[31m-//                        for (DocumentSnapshot document : queryDocumentSnapshots) {[m
[31m-//                            String title = document.getString("title");[m
[31m-//                            String message = document.getString("message");[m
[31m-//[m
[31m-//                            // 알림 데이터 추가[m
[31m-//                            notificationList.add(title + ": " + message);[m
[31m-//                        }[m
[31m-//                        // RecyclerView 업데이트[m
[31m-//                        notificationAdapter.notifyDataSetChanged();[m
[31m-//                    }[m
[31m-//                });[m
[31m-//[m
[31m-//        return view;[m
[31m-//    }[m
[31m-//[m
[31m-//[m
[31m-////    @Override[m
[31m-////    public View onCreateView(LayoutInflater inflater, ViewGroup container,[m
[31m-////                             Bundle savedInstanceState) {[m
[31m-////[m
[31m-////        View view = inflater.inflate(R.layout.fragment_my_notifications, container, false);[m
[31m-////[m
[31m-////        recyclerView = view.findViewById(R.id.notificationRecyclerView);[m
[31m-////        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));[m
[31m-////[m
[31m-////        // 예제 알림 데이터[m
[31m-////        notificationList = new ArrayList<>();[m
[31m-////        notificationList.add("톰 크루즈 님이 목표를 등록했습니다.");[m
[31m-////        notificationList.add("5분 이상 핸드폰을 사용했습니다!");[m
[31m-////        notificationList.add("빌리 아일.. 님이 목표를 인정해주었습니다. 2/3");[m
[31m-////        notificationList.add("알고리즘 기말고사가 15일 남았습니다.");[m
[31m-////[m
[31m-////        notificationAdapter = new NotificationAdapter(notificationList);[m
[31m-////        recyclerView.setAdapter(notificationAdapter);[m
[31m-////[m
[31m-////        return view;[m
[31m-////[m
[31m-////[m
[31m-////        // Inflate the layout for this fragment[m
[31m-////        //return inflater.inflate(R.layout.fragment_my_notifications, container, false);[m
[31m-////    }[m
[31m-//[m
[31m-//    public void addNotification(String newNotification) {[m
[31m-//        notificationList.add(newNotification);[m
[31m-//        notificationAdapter.notifyDataSetChanged();[m
[31m-//    }[m
[31m-//}[m
\ No newline at end of file[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/MyProfileFragment.java b/app/src/main/java/com/example/studybuddy/MyProfileFragment.java[m
[1mindex 61140c5..c517ed6 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/MyProfileFragment.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/MyProfileFragment.java[m
[36m@@ -69,8 +69,8 @@[m [mpublic class MyProfileFragment extends Fragment {[m
                              Bundle savedInstanceState) {[m
         View view = inflater.inflate(R.layout.fragment_my_profile, container, false);[m
 [m
[31m-[m
[31m-        //프로필 프래그먼트에서 캘린더 프래그먼트를 띄웠다. 프래그먼트에서 프래그먼트를 띄우려면[m
[32m+[m[41m        [m
[32m+[m[32m        //프로필 프래그먼트에서 캘린더 프래그먼트를 띄웠다. 프래그먼트에서 프래그먼트를 띄우려면[m[41m [m
         //부모 액티비티의 프래그먼트 매니저를 이용한다[m
         Button calendarButton = view.findViewById(R.id.btn_personalCalender);[m
         calendarButton.setOnClickListener(v -> {[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/MyStudyTimeFragment.java b/app/src/main/java/com/example/studybuddy/MyStudyTimeFragment.java[m
[1mindex 4ed88b3..ff241f2 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/MyStudyTimeFragment.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/MyStudyTimeFragment.java[m
[36m@@ -4,9 +4,6 @@[m [mimport android.os.Bundle;[m
 import android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
[31m-import android.widget.AdapterView;[m
[31m-import android.widget.ArrayAdapter;[m
[31m-import android.widget.Spinner;[m
 import android.widget.TextView;[m
 import android.widget.Toast;[m
 [m
[36m@@ -28,21 +25,15 @@[m [mimport java.util.Map;[m
 [m
 public class MyStudyTimeFragment extends Fragment {[m
 [m
[31m-    // Firebase 관련 변수[m
     private FirebaseFirestore firestore;[m
     private FirebaseAuth firebaseAuth;[m
 [m
[31m-    // RecyclerView 및 Adapter[m
     private RecyclerView recyclerView;[m
     private StudyTimeAdapter adapter;[m
     private List<StudyTimeItem> subjectStudyTimes = new ArrayList<>();[m
 [m
[31m-    // UI 요소[m
     private TextView totalTimeText; // 총 공부 시간 표시 TextView[m
[31m-    private Spinner sortSpinner;   // 정렬 기준을 선택하는 Spinner[m
 [m
[31m-    // 현재 선택된 정렬 옵션[m
[31m-    private String currentSortOption = "1주"; // 기본 정렬 기준[m
 [m
     public static MyStudyTimeFragment newInstance(String param1, String param2) {[m
         MyStudyTimeFragment fragment = new MyStudyTimeFragment();[m
[36m@@ -62,31 +53,13 @@[m [mpublic class MyStudyTimeFragment extends Fragment {[m
         firestore = FirebaseFirestore.getInstance();[m
         firebaseAuth = FirebaseAuth.getInstance();[m
 [m
[31m-        // UI 요소 초기화[m
[31m-        sortSpinner = view.findViewById(R.id.sort_spinner);[m
[31m-        totalTimeText = view.findViewById(R.id.total_study_time);[m
[32m+[m[32m        // View 초기화[m
         recyclerView = view.findViewById(R.id.recycler_view);[m
         recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));[m
 [m
[31m-        // Spinner 설정[m
[31m-        ArrayAdapter<CharSequence> spinnerAdapter = ArrayAdapter.createFromResource(getContext(),[m
[31m-                R.array.sort_options, android.R.layout.simple_spinner_item);[m
[31m-        spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);[m
[31m-        sortSpinner.setAdapter(spinnerAdapter);[m
[31m-[m
[31m-        // Spinner 선택 이벤트 처리[m
[31m-        sortSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {[m
[31m-            @Override[m
[31m-            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {[m
[31m-                currentSortOption = parent.getItemAtPosition(position).toString();[m
[31m-                fetchStudySessions(); // 선택된 기준에 따라 데이터를 다시 가져옴[m
[31m-            }[m
[31m-[m
[31m-            @Override[m
[31m-            public void onNothingSelected(AdapterView<?> parent) {}[m
[31m-        });[m
[31m-[m
[31m-        // 데이터 가져오기 및 초기 설정[m
[32m+[m[32m        totalTimeText = view.findViewById(R.id.total_study_time); // 총 공부 시간 TextView[m
[32m+[m
[32m+[m[32m        // 데이터 가져오기 및 화면 업데이트[m
         fetchStudySessions();[m
 [m
         return view;[m
[36m@@ -102,31 +75,22 @@[m [mpublic class MyStudyTimeFragment extends Fragment {[m
                 .addOnSuccessListener(queryDocumentSnapshots -> {[m
                     Map<String, Long> subjectTimes = new HashMap<>();[m
                     long totalTimeInSeconds = 0;[m
[31m-                    long currentTime = System.currentTimeMillis();[m
 [m
                     for (QueryDocumentSnapshot document : queryDocumentSnapshots) {[m
[31m-                        // 필드 데이터 가져오기[m
[31m-                        String subjectName = document.getString("subject_name");[m
[31m-                        String elapsedTime = document.getString("elapsed_time");[m
[31m-                        Object timestampObj = document.get("timestamp");[m
[31m-[m
[31m-                        // 필드 검증[m
[31m-                        if (subjectName == null || elapsedTime == null || !(timestampObj instanceof Long)) {[m
[31m-                            continue;[m
[31m-                        }[m
[32m+[m[32m                        StudySession session = document.toObject(StudySession.class);[m
 [m
[31m-                        long timestamp = (Long) timestampObj;[m
[32m+[m[32m                        // 과목별 시간 계산[m
[32m+[m[32m                        String subjectName = session.getSubject_name();[m
[32m+[m[32m                        String[] timeParts = session.getElapsed_time().split(":"); // "mm:ss" 형식[m
[32m+[m[32m                        long sessionTimeInSeconds = Integer.parseInt(timeParts[0]) * 60 // mm -> 초[m
[32m+[m[32m                                + Integer.parseInt(timeParts[1]);     // ss -> 초[m
 [m
[31m-                        // 시간 필터링 (정렬 기준에 따른 데이터 필터링)[m
[31m-                        if (isWithinTimeRange(currentSortOption, timestamp, currentTime)) {[m
[31m-                            String[] timeParts = elapsedTime.split(":");[m
[31m-                            long sessionTimeInSeconds = Integer.parseInt(timeParts[0]) * 60[m
[31m-                                    + Integer.parseInt(timeParts[1]);[m
[32m+[m[32m                        totalTimeInSeconds += sessionTimeInSeconds;[m
 [m
[31m-                            totalTimeInSeconds += sessionTimeInSeconds;[m
[31m-[m
[31m-                            // 과목별 시간 누적[m
[31m-                            subjectTimes.put(subjectName, subjectTimes.getOrDefault(subjectName, 0L) + sessionTimeInSeconds);[m
[32m+[m[32m                        if (subjectTimes.containsKey(subjectName)) {[m
[32m+[m[32m                            subjectTimes.put(subjectName, subjectTimes.get(subjectName) + sessionTimeInSeconds);[m
[32m+[m[32m                        } else {[m
[32m+[m[32m                            subjectTimes.put(subjectName, sessionTimeInSeconds);[m
                         }[m
                     }[m
 [m
[36m@@ -148,23 +112,6 @@[m [mpublic class MyStudyTimeFragment extends Fragment {[m
                 });[m
     }[m
 [m
[31m-    // 정렬 기준에 따른 시간 필터링[m
[31m-    private boolean isWithinTimeRange(String sortOption, long timestamp, long currentTime) {[m
[31m-        long oneDayInMillis = 24 * 60 * 60 * 1000;  // 하루[m
[31m-        long oneWeekInMillis = 7 * oneDayInMillis;  // 일주일[m
[31m-        long oneMonthInMillis = 30 * oneDayInMillis; // 한 달[m
[31m-[m
[31m-        switch (sortOption) {[m
[31m-            case "하루":[m
[31m-                return currentTime - timestamp <= oneDayInMillis;[m
[31m-            case "1주":[m
[31m-                return currentTime - timestamp <= oneWeekInMillis;[m
[31m-            case "1달":[m
[31m-                return currentTime - timestamp <= oneMonthInMillis;[m
[31m-            default:[m
[31m-                return true;[m
[31m-        }[m
[31m-    }[m
 [m
     // 시간 포맷팅 메서드 (초 -> "hh:mm:ss")[m
     private String formatTime(long seconds) {[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/MyTimerFragment.java b/app/src/main/java/com/example/studybuddy/MyTimerFragment.java[m
[1mindex 1de5eed..b58d7ca 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/MyTimerFragment.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/MyTimerFragment.java[m
[36m@@ -13,36 +13,27 @@[m [mimport android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
 import android.widget.Button;[m
[31m-import android.widget.EditText;[m
 import android.widget.ProgressBar;[m
 import android.widget.TextView;[m
 import android.widget.Toast;[m
 [m
 import androidx.annotation.NonNull;[m
 import androidx.annotation.Nullable;[m
[31m-import androidx.appcompat.app.AlertDialog;[m
 import androidx.fragment.app.Fragment;[m
 [m
 import com.example.studybuddy.R;[m
[31m-import com.google.firebase.auth.FirebaseAuth;[m
[31m-import com.google.firebase.firestore.FirebaseFirestore;[m
 import com.google.gson.Gson;[m
 import com.google.gson.reflect.TypeToken;[m
 [m
 import java.lang.reflect.Type;[m
 import java.util.ArrayList;[m
[31m-import java.util.HashMap;[m
 import java.util.List;[m
[31m-import java.util.Map;[m
 [m
 public class MyTimerFragment extends Fragment {[m
 [m
[31m-    private FirebaseFirestore firestore;[m
[31m-    private FirebaseAuth firebaseAuth;[m
[31m-[m
     private TextView timerText;         // 시간 표시 텍스트[m
     private ProgressBar circularProgress; // 원형 ProgressBar[m
[31m-    private Button deleteButton, pauseButton, registerButton, rankingButton, historyButton;[m
[32m+[m[32m    private Button deleteButton, pauseButton, registerButton;[m
 [m
     private Handler handler = new Handler(Looper.getMainLooper());[m
     private int elapsedTime = 0; // 경과 시간 (단위: 초)[m
[36m@@ -58,21 +49,7 @@[m [mpublic class MyTimerFragment extends Fragment {[m
             TimerService.TimerBinder binder = (TimerService.TimerBinder) service;[m
             timerService = binder.getService();[m
             isServiceBound = true;[m
[31m-[m
[31m-[m
[31m-[m
[31m-            // 서비스와 상태 동기화[m
[31m-            elapsedTime = timerService.getElapsedTime();[m
[31m-            isRunning = timerService.isRunning();[m
[31m-            updateTimer();[m
[31m-            updatePauseButton();[m
[31m-[m
[31m-            // 기존 Runnable 제거 후 실행[m
[31m-            handler.removeCallbacks(timerRunnable);[m
[31m-[m
[31m-            if (isRunning) {[m
[31m-                handler.post(timerRunnable);[m
[31m-            }[m
[32m+[m[32m            updateUI(); // 서비스에 연결된 후 UI 업데이트[m
         }[m
 [m
         @Override[m
[36m@@ -101,15 +78,6 @@[m [mpublic class MyTimerFragment extends Fragment {[m
         return fragment;[m
     }[m
 [m
[31m-    @Override[m
[31m-    public void onCreate(@Nullable Bundle savedInstanceState) {[m
[31m-        super.onCreate(savedInstanceState);[m
[31m-[m
[31m-        // Firestore와 FirebaseAuth 초기화[m
[31m-        firestore = FirebaseFirestore.getInstance();[m
[31m-        firebaseAuth = FirebaseAuth.getInstance();[m
[31m-    }[m
[31m-[m
     @Nullable[m
     @Override[m
     public View onCreateView(@NonNull LayoutInflater inflater, @NonNull ViewGroup container, @Nullable Bundle savedInstanceState) {[m
[36m@@ -121,9 +89,6 @@[m [mpublic class MyTimerFragment extends Fragment {[m
         deleteButton = view.findViewById(R.id.delete_button);[m
         pauseButton = view.findViewById(R.id.pause_button);[m
         registerButton = view.findViewById(R.id.register_button);[m
[31m-        rankingButton = view.findViewById(R.id.ranking_button);[m
[31m-        historyButton = view.findViewById(R.id.history_button);[m
[31m-[m
 [m
         // 초기 타이머 설정[m
         updateTimer();[m
[36m@@ -140,74 +105,20 @@[m [mpublic class MyTimerFragment extends Fragment {[m
         //등록 버튼[m
         registerButton.setOnClickListener(v -> {[m
             String time = timerText.getText().toString();[m
[31m-            showInputDialog();[m
[31m-[m
[31m-        });[m
[32m+[m[32m            saveTimeToPreferences(time);[m
[32m+[m[32m            Toast.makeText(getContext(), "시간이 등록되었습니다!", Toast.LENGTH_SHORT).show();[m
 [m
[31m-       historyButton.setOnClickListener(v -> {[m
[31m-            Toast.makeText(getContext(), "나의 공부 기록 페이지로 이동합니다",Toast.LENGTH_SHORT).show();[m
 [m
[32m+[m[32m            // TimeListFragment로 이동[m
             requireActivity().getSupportFragmentManager().beginTransaction()[m
                     .replace(R.id.fragment_container, new TimeListFragment())[m
                     .addToBackStack(null)[m
                     .commit();[m
         });[m
 [m
[31m-        rankingButton.setOnClickListener(v -> {[m
[31m-            requireActivity().getSupportFragmentManager().beginTransaction()[m
[31m-                    .replace(R.id.fragment_container, new RankingFragment())[m
[31m-                    .addToBackStack(null)[m
[31m-                    .commit();[m
[31m-        });[m
[31m-[m
[31m-[m
 [m
         return view;[m
     }[m
[31m-    private void showInputDialog() {[m
[31m-        // 다이얼로그 레이아웃 설정[m
[31m-        View dialogView = LayoutInflater.from(getContext()).inflate(R.layout.dialog_register_time, null);[m
[31m-        EditText subjectEditText = dialogView.findViewById(R.id.subject_edit_text);[m
[31m-        EditText memoEditText = dialogView.findViewById(R.id.memo_edit_text);[m
[31m-[m
[31m-        new AlertDialog.Builder(requireContext())[m
[31m-                .setTitle("공부 기록 저장")[m
[31m-                .setView(dialogView)[m
[31m-                .setPositiveButton("저장", (dialog, which) -> {[m
[31m-                    String subjectName = subjectEditText.getText().toString().trim();[m
[31m-                    String memo = memoEditText.getText().toString().trim();[m
[31m-[m
[31m-                    // Firestore에 데이터 저장[m
[31m-                    saveTimeToFirestore(timerText.getText().toString(), subjectName, memo);[m
[31m-                })[m
[31m-                .setNegativeButton("취소", null)[m
[31m-                .show();[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-    private void saveTimeToFirestore(String elapsedTime, String subjectName, String memo) {[m
[31m-        // 현재 사용자 ID 가져오기 (익명 사용자 처리)[m
[31m-        String userId = firebaseAuth.getCurrentUser() != null ? firebaseAuth.getCurrentUser().getUid() : "anonymous";[m
[31m-[m
[31m-        // Firestore에 저장할 데이터 준비[m
[31m-        Map<String, Object> studySession = new HashMap<>();[m
[31m-        studySession.put("user_id", userId);[m
[31m-        studySession.put("elapsed_time", elapsedTime);[m
[31m-        studySession.put("subject_name", subjectName);[m
[31m-        studySession.put("memo", memo);[m
[31m-        studySession.put("timestamp", System.currentTimeMillis());[m
[31m-[m
[31m-        // Firestore에 데이터 추가[m
[31m-        firestore.collection("study_sessions")[m
[31m-                .add(studySession)[m
[31m-                .addOnSuccessListener(documentReference -> {[m
[31m-                    Toast.makeText(getContext(), "공부 기록이 저장되었습니다!", Toast.LENGTH_SHORT).show();[m
[31m-                })[m
[31m-                .addOnFailureListener(e -> {[m
[31m-                    Toast.makeText(getContext(), "저장 실패: " + e.getMessage(), Toast.LENGTH_SHORT).show();[m
[31m-                });[m
[31m-    }[m
[31m-[m
 [m
     private void updateTimer() {[m
         // 경과 시간을 분, 초로 변환[m
[36m@@ -221,99 +132,47 @@[m [mpublic class MyTimerFragment extends Fragment {[m
         circularProgress.setProgress(progress);[m
     }[m
 [m
[31m-    private void startTimerRunnable() {[m
[31m-        handler.postDelayed(new Runnable() {[m
[31m-            @Override[m
[31m-            public void run() {[m
[31m-                if (isRunning) {[m
[31m-                    elapsedTime++;[m
[31m-                    updateTimer();[m
[31m-                    handler.postDelayed(this, 1000); // 1초마다 실행[m
[31m-                }[m
[31m-            }[m
[31m-        }, 1000);[m
[31m-    }[m
[31m-[m
 [m
     private void resetTimer() {[m
[31m-        if (isServiceBound) {[m
[31m-            timerService.resetTimer();[m
[31m-            elapsedTime = 0;[m
[31m-            isRunning = false;[m
[31m-            handler.removeCallbacks(timerRunnable);[m
[31m-            updateTimer();[m
[31m-            pauseButton.setText("시작");[m
[31m-        }[m
[32m+[m[32m        // 타이머 리셋[m
[32m+[m[32m        isRunning = false;[m
[32m+[m[32m        handler.removeCallbacks(timerRunnable);[m
[32m+[m[32m        elapsedTime = 0;[m
[32m+[m[32m        updateTimer();[m
[32m+[m[32m        pauseButton.setText("시작");[m
     }[m
 [m
[31m-[m
     @Override[m
     public void onStart() {[m
         super.onStart();[m
[31m-         //TimerService 바인딩[m
[31m-        Intent intent = new Intent(getActivity(), TimerService.class);[m
[31m-        requireActivity().bindService(intent, serviceConnection, Context.BIND_AUTO_CREATE);[m
[32m+[m[32m        // TimerService 바인딩[m
[32m+[m[32m//        Intent intent = new Intent(getActivity(), TimerService.class);[m
[32m+[m[32m//        requireActivity().bindService(intent, serviceConnection, Context.BIND_AUTO_CREATE);[m
     }[m
 [m
     @Override[m
     public void onStop() {[m
         super.onStop();[m
         if (isServiceBound) {[m
[31m-[m
             requireActivity().unbindService(serviceConnection);[m
             isServiceBound = false;[m
         }[m
     }[m
 [m
[31m-    @Override[m
[31m-    public void onResume() {[m
[31m-        super.onResume();[m
[31m-[m
[31m-        if (isServiceBound && timerService != null) { // TimerService와 연결된 상태인지 확인[m
[31m-            // TimerService에서 상태를 가져와 동기화[m
[31m-            elapsedTime = timerService.getElapsedTime();[m
[31m-            isRunning = timerService.isRunning();[m
[31m-[m
[31m-            // UI 업데이트[m
[31m-            updateTimer();[m
[31m-            updatePauseButton(); // 버튼 텍스트를 업데이트[m
[31m-[m
[31m-            // 기존 Runnable 제거 후 실행[m
[31m-            handler.removeCallbacks(timerRunnable);[m
[31m-[m
[31m-            // 타이머가 실행 중이라면 Runnable로 지속 업데이트[m
[31m-            if (isRunning) {[m
[31m-                handler.post(timerRunnable);[m
[31m-            }[m
[31m-        }[m
[31m-    }[m
[31m-    private void updatePauseButton() {[m
[31m-        if (isRunning) {[m
[31m-            pauseButton.setText("일시정지");[m
[31m-        } else {[m
[31m-            pauseButton.setText("시작");[m
[31m-        }[m
[31m-    }[m
 [m
     private void toggleTimer() {[m
         if (isServiceBound) {[m
[31m-            handler.removeCallbacks(timerRunnable); // 기존 Runnable 제거[m
[31m-[m
[31m-            if (isRunning) {[m
[32m+[m[32m            if (timerService.getElapsedTime() > 0 && pauseButton.getText().equals("일시정지")) {[m
                 timerService.stopTimer();[m
[31m-                isRunning = false;[m
[32m+[m[32m                pauseButton.setText("시작");[m
             } else {[m
                 timerService.startTimer();[m
[31m-                isRunning = true;[m
[31m-                handler.post(timerRunnable); // 새로운 Runnable 추가[m
[32m+[m[32m                pauseButton.setText("일시정지");[m
             }[m
[31m-[m
[31m-            updateTimer();[m
[31m-            updatePauseButton(); // 버튼 텍스트 업데이트[m
[32m+[m[32m            updateUI();[m
         }[m
     }[m
 [m
[31m-[m
     private void updateUI() {[m
         if (isServiceBound) {[m
             int elapsedTime = timerService.getElapsedTime();[m
[36m@@ -327,4 +186,26 @@[m [mpublic class MyTimerFragment extends Fragment {[m
         }[m
     }[m
 [m
[32m+[m[32m    private void saveTimeToPreferences(String time) {[m
[32m+[m[32m        SharedPreferences sharedPreferences = requireActivity().getSharedPreferences("TimeData", Context.MODE_PRIVATE);[m
[32m+[m[32m        SharedPreferences.Editor editor = sharedPreferences.edit();[m
[32m+[m
[32m+[m[32m        // 기존 시간 목록 불러오기[m
[32m+[m[32m        Gson gson = new Gson();[m
[32m+[m[32m        String json = sharedPreferences.getString("time_list", null);[m
[32m+[m[32m        List<String> timeList = new ArrayList<>();[m
[32m+[m[32m        if (json != null) {[m
[32m+[m[32m            Type type = new TypeToken<List<String>>() {}.getType();[m
[32m+[m[32m            timeList = gson.fromJson(json, type);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // 새 시간 추가[m
[32m+[m[32m        timeList.add(time);[m
[32m+[m
[32m+[m[32m        // 다시 저장[m
[32m+[m[32m        String updatedJson = gson.toJson(timeList);[m
[32m+[m[32m        editor.putString("time_list", updatedJson);[m
[32m+[m[32m        editor.apply();[m
[32m+[m[32m    }[m
[32m+[m
 }[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/RankingAdapter.java b/app/src/main/java/com/example/studybuddy/RankingAdapter.java[m
[1mdeleted file mode 100644[m
[1mindex d6902f0..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/RankingAdapter.java[m
[1m+++ /dev/null[m
[36m@@ -1,58 +0,0 @@[m
[31m-package com.example.studybuddy;[m
[31m-[m
[31m-import android.view.LayoutInflater;[m
[31m-import android.view.View;[m
[31m-import android.view.ViewGroup;[m
[31m-import android.widget.TextView;[m
[31m-[m
[31m-import androidx.annotation.NonNull;[m
[31m-import androidx.recyclerview.widget.RecyclerView;[m
[31m-[m
[31m-import java.util.List;[m
[31m-[m
[31m-public class RankingAdapter extends RecyclerView.Adapter<RankingAdapter.ViewHolder> {[m
[31m-[m
[31m-    private List<RankingItem> rankingList;[m
[31m-[m
[31m-    public RankingAdapter(List<RankingItem> rankingList) {[m
[31m-        this.rankingList = rankingList;[m
[31m-    }[m
[31m-[m
[31m-    @NonNull[m
[31m-    @Override[m
[31m-    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {[m
[31m-        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_ranking, parent, false);[m
[31m-        return new ViewHolder(view);[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {[m
[31m-        RankingItem item = rankingList.get(position);[m
[31m-        holder.rankText.setText(String.valueOf(position + 1));[m
[31m-        holder.userIdText.setText(item.getUserId());[m
[31m-        holder.totalTimeText.setText(formatTime(item.getTotalTime()));[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public int getItemCount() {[m
[31m-        return rankingList.size();[m
[31m-    }[m
[31m-[m
[31m-    private String formatTime(long seconds) {[m
[31m-        long hours = seconds / 3600;[m
[31m-        long minutes = (seconds % 3600) / 60;[m
[31m-        long secs = seconds % 60;[m
[31m-        return String.format("%02d시간 %02d분 %02d초", hours, minutes, secs);[m
[31m-    }[m
[31m-[m
[31m-    public static class ViewHolder extends RecyclerView.ViewHolder {[m
[31m-        TextView rankText, userIdText, totalTimeText;[m
[31m-[m
[31m-        public ViewHolder(@NonNull View itemView) {[m
[31m-            super(itemView);[m
[31m-            rankText = itemView.findViewById(R.id.rank_text);[m
[31m-            userIdText = itemView.findViewById(R.id.user_id_text);[m
[31m-            totalTimeText = itemView.findViewById(R.id.total_time_text);[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/RankingFragment.java b/app/src/main/java/com/example/studybuddy/RankingFragment.java[m
[1mdeleted file mode 100644[m
[1mindex 20d7586..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/RankingFragment.java[m
[1m+++ /dev/null[m
[36m@@ -1,147 +0,0 @@[m
[31m-package com.example.studybuddy;[m
[31m-[m
[31m-import android.os.Bundle;[m
[31m-[m
[31m-import androidx.annotation.NonNull;[m
[31m-import androidx.annotation.Nullable;[m
[31m-import androidx.fragment.app.Fragment;[m
[31m-import androidx.recyclerview.widget.LinearLayoutManager;[m
[31m-import androidx.recyclerview.widget.RecyclerView;[m
[31m-[m
[31m-import android.util.Log;[m
[31m-import android.view.LayoutInflater;[m
[31m-import android.view.View;[m
[31m-import android.view.ViewGroup;[m
[31m-import android.widget.TextView;[m
[31m-import android.widget.Toast;[m
[31m-[m
[31m-import com.google.firebase.firestore.FirebaseFirestore;[m
[31m-import com.google.firebase.firestore.QueryDocumentSnapshot;[m
[31m-[m
[31m-import java.util.ArrayList;[m
[31m-import java.util.HashMap;[m
[31m-import java.util.List;[m
[31m-import java.util.Map;[m
[31m-[m
[31m-import android.widget.AdapterView;[m
[31m-import android.widget.ArrayAdapter;[m
[31m-import android.widget.Spinner;[m
[31m-[m
[31m-public class RankingFragment extends Fragment {[m
[31m-[m
[31m-    private FirebaseFirestore firestore;[m
[31m-    private RecyclerView recyclerView;[m
[31m-    private RankingAdapter adapter;[m
[31m-    private List<RankingItem> rankingList = new ArrayList<>();[m
[31m-    private Spinner sortSpinner;[m
[31m-[m
[31m-    @Nullable[m
[31m-    @Override[m
[31m-    public View onCreateView(@NonNull LayoutInflater inflater, @NonNull ViewGroup container, @Nullable Bundle savedInstanceState) {[m
[31m-        View view = inflater.inflate(R.layout.fragment_ranking, container, false);[m
[31m-[m
[31m-        // Firebase 초기화[m
[31m-        firestore = FirebaseFirestore.getInstance();[m
[31m-[m
[31m-        // RecyclerView 초기화[m
[31m-        recyclerView = view.findViewById(R.id.recycler_view);[m
[31m-        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));[m
[31m-[m
[31m-        // 빈 리스트로 초기 Adapter 설정[m
[31m-        adapter = new RankingAdapter(new ArrayList<>());[m
[31m-        recyclerView.setAdapter(adapter);[m
[31m-[m
[31m-        // Spinner 초기화[m
[31m-        sortSpinner = view.findViewById(R.id.sort_spinner);[m
[31m-        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(getContext(),[m
[31m-                R.array.sort_options, android.R.layout.simple_spinner_item);[m
[31m-        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);[m
[31m-        sortSpinner.setAdapter(adapter);[m
[31m-[m
[31m-        // Spinner 선택 이벤트 처리[m
[31m-        sortSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {[m
[31m-            @Override[m
[31m-            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {[m
[31m-                String selectedOption = parent.getItemAtPosition(position).toString();[m
[31m-                fetchRankingData(selectedOption); // 정렬 기준에 따라 데이터 가져오기[m
[31m-            }[m
[31m-[m
[31m-            @Override[m
[31m-            public void onNothingSelected(AdapterView<?> parent) {[m
[31m-                // 선택되지 않은 경우 처리 (필요 시)[m
[31m-            }[m
[31m-        });[m
[31m-[m
[31m-        return view;[m
[31m-    }[m
[31m-[m
[31m-    private void fetchRankingData(String sortOption) {[m
[31m-        firestore.collection("study_sessions")[m
[31m-                .get()[m
[31m-                .addOnSuccessListener(queryDocumentSnapshots -> {[m
[31m-                    Map<String, Long> userTotalTimes = new HashMap<>();[m
[31m-                    long currentTime = System.currentTimeMillis();[m
[31m-[m
[31m-                    // Firestore의 모든 문서 순회[m
[31m-                    for (QueryDocumentSnapshot document : queryDocumentSnapshots) {[m
[31m-                        try {[m
[31m-                            // timestamp 필드 안전하게 가져오기[m
[31m-                            Object timestampObj = document.get("timestamp");[m
[31m-                            if (timestampObj instanceof Number) {[m
[31m-                                Long timestamp = ((Number) timestampObj).longValue();[m
[31m-[m
[31m-                                // 시간 범위 필터링[m
[31m-                                if (isWithinTimeRange(sortOption, timestamp, currentTime)) {[m
[31m-                                    String userId = document.getString("user_id");[m
[31m-                                    String elapsedTime = document.getString("elapsed_time");[m
[31m-[m
[31m-                                    String[] timeParts = elapsedTime.split(":");[m
[31m-                                    long sessionTimeInSeconds = Integer.parseInt(timeParts[0]) * 60[m
[31m-                                            + Integer.parseInt(timeParts[1]);[m
[31m-[m
[31m-                                    userTotalTimes.put(userId, userTotalTimes.getOrDefault(userId, 0L) + sessionTimeInSeconds);[m
[31m-                                }[m
[31m-                            } else {[m
[31m-                                Log.e("RankingFragment", "Invalid timestamp type for document ID: " + document.getId());[m
[31m-                                continue; // timestamp가 잘못된 경우 해당 문서 무시[m
[31m-                            }[m
[31m-                        } catch (Exception e) {[m
[31m-                            Log.e("RankingFragment", "Error processing document ID: " + document.getId(), e);[m
[31m-                        }[m
[31m-                    }[m
[31m-[m
[31m-                    // Map을 List로 변환 및 정렬[m
[31m-                    rankingList.clear();[m
[31m-                    for (Map.Entry<String, Long> entry : userTotalTimes.entrySet()) {[m
[31m-                        rankingList.add(new RankingItem(entry.getKey(), entry.getValue()));[m
[31m-                    }[m
[31m-                    rankingList.sort((o1, o2) -> Long.compare(o2.getTotalTime(), o1.getTotalTime()));[m
[31m-[m
[31m-                    // RecyclerView Adapter에 데이터 설정[m
[31m-                    adapter = new RankingAdapter(rankingList);[m
[31m-                    recyclerView.setAdapter(adapter);[m
[31m-                })[m
[31m-                .addOnFailureListener(e -> {[m
[31m-                    Toast.makeText(getContext(), "랭킹 데이터를 가져오지 못했습니다: " + e.getMessage(), Toast.LENGTH_SHORT).show();[m
[31m-                });[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-[m
[31m-    private boolean isWithinTimeRange(String sortOption, long timestamp, long currentTime) {[m
[31m-        long oneDayInMillis = 24 * 60 * 60 * 1000;[m
[31m-        long oneWeekInMillis = 7 * oneDayInMillis;[m
[31m-        long oneMonthInMillis = 30 * oneDayInMillis;[m
[31m-[m
[31m-        switch (sortOption) {[m
[31m-            case "하루":[m
[31m-                return currentTime - timestamp <= oneDayInMillis;[m
[31m-            case "1주":[m
[31m-                return currentTime - timestamp <= oneWeekInMillis;[m
[31m-            case "1달":[m
[31m-                return currentTime - timestamp <= oneMonthInMillis;[m
[31m-            default:[m
[31m-                return true;[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/RankingItem.java b/app/src/main/java/com/example/studybuddy/RankingItem.java[m
[1mdeleted file mode 100644[m
[1mindex 7a588c3..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/RankingItem.java[m
[1m+++ /dev/null[m
[36m@@ -1,19 +0,0 @@[m
[31m-package com.example.studybuddy;[m
[31m-[m
[31m-public class RankingItem {[m
[31m-    private String userId;[m
[31m-    private long totalTime;[m
[31m-[m
[31m-    public RankingItem(String userId, long totalTime) {[m
[31m-        this.userId = userId;[m
[31m-        this.totalTime = totalTime;[m
[31m-    }[m
[31m-[m
[31m-    public String getUserId() {[m
[31m-        return userId;[m
[31m-    }[m
[31m-[m
[31m-    public long getTotalTime() {[m
[31m-        return totalTime;[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/SettingActivity.java b/app/src/main/java/com/example/studybuddy/SettingActivity.java[m
[1mindex 819b047..104237a 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/SettingActivity.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/SettingActivity.java[m
[36m@@ -1,8 +1,6 @@[m
 package com.example.studybuddy;[m
 [m
[31m-import android.content.Context;[m
 import android.content.Intent;[m
[31m-import android.content.SharedPreferences;[m
 import android.net.Uri;[m
 import android.os.Bundle;[m
 import android.provider.MediaStore;[m
[36m@@ -23,6 +21,7 @@[m [mimport androidx.core.view.WindowInsetsCompat;[m
 [m
 import com.bumptech.glide.Glide;[m
 import com.example.studybuddy.databinding.ActivitySettingBinding;[m
[32m+[m[32mimport com.example.studybuddy.utility.userData;[m
 import com.google.android.gms.tasks.OnCompleteListener;[m
 import com.google.android.gms.tasks.OnSuccessListener;[m
 import com.google.android.gms.tasks.Task;[m
[36m@@ -44,7 +43,6 @@[m [mpublic class SettingActivity extends AppCompatActivity {[m
     private FirebaseFirestore db;[m
     private FirebaseStorage storage;[m
     private Uri imgUri = null;[m
[31m-    private SharedPreferences userPref;[m
     ActivitySettingBinding binding;[m
     @Override[m
     protected void onCreate(Bundle savedInstanceState) {[m
[36m@@ -55,17 +53,15 @@[m [mpublic class SettingActivity extends AppCompatActivity {[m
         mAuth = FirebaseAuth.getInstance();[m
         db = FirebaseFirestore.getInstance();[m
         storage = FirebaseStorage.getInstance();[m
[31m-        userPref = getSharedPreferences("userData", Context.MODE_PRIVATE);[m
 [m
[32m+[m[32m        binding.nameText.setText(userData.userName);[m
[32m+[m[32m        binding.emailAdressText.setText(userData.userEmail);[m
[32m+[m[32m        binding.schoolNameText.setText(userData.userSchool);[m
[32m+[m[32m        binding.editMajor.setText(userData.userMajor);[m
[32m+[m[32m        binding.editNickName.setText(userData.userNickname);[m
 [m
[31m-        binding.nameText.setText(userPref.getString("Name","none"));[m
[31m-        binding.emailAdressText.setText(userPref.getString("Email","none"));[m
[31m-        binding.schoolNameText.setText(userPref.getString("School","none"));[m
[31m-        binding.editMajor.setText(userPref.getString("Major","none"));[m
[31m-        binding.editNickName.setText(userPref.getString("Nickname", "none"));[m
[31m-[m
[31m-        if (userPref.getString("Profile",null) != null){[m
[31m-            Glide.with(this).load(userPref.getString("Profile",null)).into(binding.profileChange);[m
[32m+[m[32m        if (userData.profileUrl != null){[m
[32m+[m[32m            Glide.with(this).load(userData.profileUrl).into(binding.profileChange);[m
         }[m
 [m
         binding.profileChange.setOnClickListener(new View.OnClickListener() {[m
[36m@@ -91,39 +87,33 @@[m [mpublic class SettingActivity extends AppCompatActivity {[m
                     Toast.makeText(SettingActivity.this, "잘못된 학과 입력", Toast.LENGTH_SHORT).show();[m
                 } else if (newNickname.isEmpty()||newNickname==null) {[m
                     Toast.makeText(SettingActivity.this, "잘못된 닉네임 입력", Toast.LENGTH_SHORT).show();[m
[31m-                } else if (!prevPassword.equals(userPref.getString("Password","none"))){[m
[32m+[m[32m                } else if (!prevPassword.equals(userData.userPassword)){[m
                     Toast.makeText(SettingActivity.this, "기존 비밀번호가 아닙니다.", Toast.LENGTH_SHORT).show();[m
[31m-                } else if (newPassword.equals(userPref.getString("Password","none"))) {[m
[32m+[m[32m                } else if ((!prevPassword.isEmpty()&&!newPassword.isEmpty())&&[m
[32m+[m[32m                        prevPassword.equals(newPassword)) {[m
                     Toast.makeText(SettingActivity.this, "기존 비밀번호와 동일합니다.", Toast.LENGTH_SHORT).show();[m
[31m-                } else if (newPassword.isEmpty()){[m
[31m-                    Toast.makeText(SettingActivity.this, "새로운 비밀번호를 입력하십시오", Toast.LENGTH_SHORT).show();[m
                 } else {[m
                     Map<String, Object> data = new HashMap<>();[m
[31m-                    SharedPreferences.Editor editor = userPref.edit();[m
[31m-                    if (!newMajor.equals(userPref.getString("Major","none"))) {[m
[32m+[m[32m                    if (!newMajor.equals(userData.userMajor))[m
                         data.put("Major", newMajor);[m
[31m-                        editor.putString("Major",newMajor);[m
[31m-                    }[m
[31m-                    if (!newNickname.equals(userPref.getString("Nickname","none"))) {[m
[32m+[m[32m                    if (!newNickname.equals(userData.userNickname))[m
                         data.put("Nickname", newNickname);[m
[31m-                        editor.putString("Nickname",newNickname);[m
[31m-                    }[m
[31m-                    data.put("Password", newPassword);[m
[31m-                    editor.putString("Password",newPassword);[m
[31m-                    editor.apply();[m
[32m+[m[32m              //      if (!prevPassword.isEmpty()&&!newPassword.isEmpty())[m
[32m+[m[32m              //          data.put("Password", newPassword);[m
                     db.collection("userInfo").document(mAuth.getCurrentUser().getUid()).update(data);[m
                     mAuth.getCurrentUser().updatePassword(newPassword).addOnCompleteListener(new OnCompleteListener<Void>() {[m
                         @Override[m
                         public void onComplete(@NonNull Task<Void> task) {[m
                             if (task.isSuccessful()){[m
                                 Toast.makeText(SettingActivity.this, "프로필 설정 완료", Toast.LENGTH_SHORT).show();[m
[31m-                                finish();[m
                             }[m
                         }[m
                     });[m
                 }[m
             }[m
         });[m
[32m+[m
[32m+[m
     }[m
 [m
     private ActivityResultLauncher<Intent> imageLauncher = registerForActivityResult([m
[36m@@ -132,7 +122,6 @@[m [mpublic class SettingActivity extends AppCompatActivity {[m
                 @Override[m
                 public void onActivityResult(ActivityResult o) {[m
                     if (o.getResultCode() == RESULT_OK){[m
[31m-                        userPref = getSharedPreferences("userData",Context.MODE_PRIVATE);[m
                         Intent intent = o.getData();[m
                         imgUri = intent.getData();[m
                         Glide.with(binding.profileChange).load(imgUri).into(binding.profileChange);[m
[36m@@ -141,11 +130,9 @@[m [mpublic class SettingActivity extends AppCompatActivity {[m
                         stoRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {[m
                             @Override[m
                             public void onSuccess(Uri uri) {[m
[31m-                                SharedPreferences.Editor editor = userPref.edit();[m
[31m-                                editor.putString("Profile", uri.toString());[m
[31m-                                editor.apply();[m
[32m+[m[32m                                userData.profileUrl = uri.toString();[m
                                 Map<String, Object> data = new HashMap<>();[m
[31m-                                data.put("ProfileImage", userPref.getString("Profile",null));[m
[32m+[m[32m                                data.put("ProfileImage", userData.profileUrl);[m
                                 db.collection("userInfo").document(mAuth.getCurrentUser().getUid()).update(data);[m
                             }[m
                         });[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/StudySession.java b/app/src/main/java/com/example/studybuddy/StudySession.java[m
[1mdeleted file mode 100644[m
[1mindex 4bb7152..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/StudySession.java[m
[1m+++ /dev/null[m
[36m@@ -1,61 +0,0 @@[m
[31m-package com.example.studybuddy;[m
[31m-[m
[31m-public class StudySession {[m
[31m-    private String id; // Firestore 문서 ID[m
[31m-    private String user_id;[m
[31m-    private String elapsed_time;[m
[31m-    private String subject_name;[m
[31m-    private String memo;[m
[31m-    private long timestamp;[m
[31m-[m
[31m-    // 기본 생성자 (Firestore에서 필요)[m
[31m-    public StudySession() {}[m
[31m-[m
[31m-    public String getId() {[m
[31m-        return id;[m
[31m-    }[m
[31m-[m
[31m-    public void setId(String id) {[m
[31m-        this.id = id;[m
[31m-    }[m
[31m-[m
[31m-    public String getUser_id() {[m
[31m-        return user_id;[m
[31m-    }[m
[31m-[m
[31m-    public void setUser_id(String user_id) {[m
[31m-        this.user_id = user_id;[m
[31m-    }[m
[31m-[m
[31m-    public String getElapsed_time() {[m
[31m-        return elapsed_time;[m
[31m-    }[m
[31m-[m
[31m-    public void setElapsed_time(String elapsed_time) {[m
[31m-        this.elapsed_time = elapsed_time;[m
[31m-    }[m
[31m-[m
[31m-    public String getSubject_name() {[m
[31m-        return subject_name;[m
[31m-    }[m
[31m-[m
[31m-    public void setSubject_name(String subject_name) {[m
[31m-        this.subject_name = subject_name;[m
[31m-    }[m
[31m-[m
[31m-    public String getMemo() {[m
[31m-        return memo;[m
[31m-    }[m
[31m-[m
[31m-    public void setMemo(String memo) {[m
[31m-        this.memo = memo;[m
[31m-    }[m
[31m-[m
[31m-    public long getTimestamp() {[m
[31m-        return timestamp;[m
[31m-    }[m
[31m-[m
[31m-    public void setTimestamp(long timestamp) {[m
[31m-        this.timestamp = timestamp;[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/StudyTimeItem.java b/app/src/main/java/com/example/studybuddy/StudyTimeItem.java[m
[1mindex c9fdb2d..45a4eee 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/StudyTimeItem.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/StudyTimeItem.java[m
[36m@@ -26,4 +26,4 @@[m [mpublic class StudyTimeItem {[m
     public void setElapsedTime(long elapsedTime) {[m
         this.elapsedTime = elapsedTime;[m
     }[m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/TimeListAdapter.java b/app/src/main/java/com/example/studybuddy/TimeListAdapter.java[m
[1mindex e1f14ac..e0d4ddf 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/TimeListAdapter.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/TimeListAdapter.java[m
[36m@@ -1,31 +1,23 @@[m
 package com.example.studybuddy;[m
 [m
[31m-import static java.security.AccessController.getContext;[m
[31m-[m
 import android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
[31m-import android.widget.Button;[m
 import android.widget.TextView;[m
[31m-import android.widget.Toast;[m
 [m
 import androidx.annotation.NonNull;[m
 import androidx.recyclerview.widget.RecyclerView;[m
 [m
[31m-import com.google.firebase.firestore.CollectionReference;[m
[31m-import com.google.firebase.firestore.FirebaseFirestore;[m
[31m-import com.google.firebase.firestore.QueryDocumentSnapshot;[m
[32m+[m[32mimport com.example.studybuddy.R;[m
 [m
 import java.util.List;[m
 [m
 public class TimeListAdapter extends RecyclerView.Adapter<TimeListAdapter.ViewHolder> {[m
 [m
[31m-    private List<StudySession> timeList;[m
[31m-    private FirebaseFirestore firestore;[m
[32m+[m[32m    private List<String> timeList;[m
 [m
[31m-    public TimeListAdapter(List<StudySession> timeList, FirebaseFirestore firestore) {[m
[32m+[m[32m    public TimeListAdapter(List<String> timeList) {[m
         this.timeList = timeList;[m
[31m-        this.firestore = firestore;[m
     }[m
 [m
     @NonNull[m
[36m@@ -37,27 +29,8 @@[m [mpublic class TimeListAdapter extends RecyclerView.Adapter<TimeListAdapter.ViewHo[m
 [m
     @Override[m
     public void onBindViewHolder(@NonNull ViewHolder holder, int position) {[m
[31m-        StudySession session = timeList.get(position);[m
[31m-        holder.timeTextView.setText(session.getElapsed_time());[m
[31m-[m
[31m-        // 시간 및 과목 표시[m
[31m-        holder.timeTextView.setText(session.getElapsed_time());[m
[31m-        holder.subjectTextView.setText("과목: " + session.getSubject_name());[m
[31m-[m
[31m-        // 삭제 버튼 동작[m
[31m-        holder.deleteButton.setOnClickListener(v -> {[m
[31m-            String documentId = session.getId();[m
[31m-            firestore.collection("study_sessions").document(documentId)[m
[31m-                    .delete()[m
[31m-                    .addOnSuccessListener(aVoid -> {[m
[31m-                        Toast.makeText(holder.itemView.getContext(), "삭제되었습니다.", Toast.LENGTH_SHORT).show();[m
[31m-                        timeList.remove(position);[m
[31m-                        notifyItemRemoved(position);[m
[31m-                    })[m
[31m-                    .addOnFailureListener(e -> {[m
[31m-                        Toast.makeText(holder.itemView.getContext(), "삭제 실패: " + e.getMessage(), Toast.LENGTH_SHORT).show();[m
[31m-                    });[m
[31m-        });[m
[32m+[m[32m        String time = timeList.get(position);[m
[32m+[m[32m        holder.timeTextView.setText(time);[m
     }[m
 [m
     @Override[m
[36m@@ -67,16 +40,10 @@[m [mpublic class TimeListAdapter extends RecyclerView.Adapter<TimeListAdapter.ViewHo[m
 [m
     public static class ViewHolder extends RecyclerView.ViewHolder {[m
         TextView timeTextView;[m
[31m-        TextView subjectTextView;[m
[31m-        Button deleteButton;[m
 [m
         public ViewHolder(@NonNull View itemView) {[m
             super(itemView);[m
             timeTextView = itemView.findViewById(R.id.time_text_view);[m
[31m-            subjectTextView = itemView.findViewById(R.id.subject_text_view);[m
[31m-            deleteButton = itemView.findViewById(R.id.delete_button);[m
         }[m
     }[m
[31m-[m
[31m-[m
 }[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/TimeListFragment.java b/app/src/main/java/com/example/studybuddy/TimeListFragment.java[m
[1mindex 8611229..46bf5a1 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/TimeListFragment.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/TimeListFragment.java[m
[36m@@ -1,10 +1,11 @@[m
 package com.example.studybuddy;[m
 [m
[32m+[m[32mimport android.content.Context;[m
[32m+[m[32mimport android.content.SharedPreferences;[m
 import android.os.Bundle;[m
 import android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
[31m-import android.widget.Toast;[m
 [m
 import androidx.annotation.NonNull;[m
 import androidx.annotation.Nullable;[m
[36m@@ -12,11 +13,12 @@[m [mimport androidx.fragment.app.Fragment;[m
 import androidx.recyclerview.widget.LinearLayoutManager;[m
 import androidx.recyclerview.widget.RecyclerView;[m
 [m
[31m-import com.google.firebase.auth.FirebaseAuth;[m
[31m-import com.google.firebase.firestore.CollectionReference;[m
[31m-import com.google.firebase.firestore.FirebaseFirestore;[m
[31m-import com.google.firebase.firestore.QueryDocumentSnapshot;[m
[32m+[m[32mimport com.example.studybuddy.R;[m
[32m+[m[32mimport com.example.studybuddy.TimeListAdapter;[m
[32m+[m[32mimport com.google.gson.Gson;[m
[32m+[m[32mimport com.google.gson.reflect.TypeToken;[m
 [m
[32m+[m[32mimport java.lang.reflect.Type;[m
 import java.util.ArrayList;[m
 import java.util.List;[m
 [m
[36m@@ -24,9 +26,7 @@[m [mpublic class TimeListFragment extends Fragment {[m
 [m
     private RecyclerView recyclerView;[m
     private TimeListAdapter adapter;[m
[31m-    private List<StudySession> timeList; // StudySession 객체 리스트[m
[31m-    private FirebaseFirestore firestore;[m
[31m-    private FirebaseAuth firebaseAuth;[m
[32m+[m[32m    private List<String> timeList;[m
 [m
     @Nullable[m
     @Override[m
[36m@@ -36,37 +36,20 @@[m [mpublic class TimeListFragment extends Fragment {[m
         recyclerView = view.findViewById(R.id.recycler_view);[m
         recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));[m
 [m
[31m-        firestore = FirebaseFirestore.getInstance();[m
[31m-        firebaseAuth = FirebaseAuth.getInstance();[m
[31m-        timeList = new ArrayList<>();[m
[32m+[m[32m        // SharedPreferences에서 시간 목록 불러오기[m
[32m+[m[32m        SharedPreferences sharedPreferences = requireActivity().getSharedPreferences("TimeData", Context.MODE_PRIVATE);[m
[32m+[m[32m        Gson gson = new Gson();[m
[32m+[m[32m        String json = sharedPreferences.getString("time_list", null);[m
[32m+[m[32m        if (json != null) {[m
[32m+[m[32m            Type type = new TypeToken<List<String>>() {}.getType();[m
[32m+[m[32m            timeList = gson.fromJson(json, type);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            timeList = new ArrayList<>();[m
[32m+[m[32m        }[m
 [m
[31m-        // Firestore에서 데이터 읽어오기[m
[31m-        fetchStudySessions();[m
[32m+[m[32m        adapter = new TimeListAdapter(timeList);[m
[32m+[m[32m        recyclerView.setAdapter(adapter);[m
 [m
         return view;[m
     }[m
[31m-[m
[31m-    private void fetchStudySessions() {[m
[31m-        String userId = firebaseAuth.getCurrentUser() != null ? firebaseAuth.getCurrentUser().getUid() : "anonymous";[m
[31m-[m
[31m-        CollectionReference studySessionsRef = firestore.collection("study_sessions");[m
[31m-        studySessionsRef[m
[31m-                .whereEqualTo("user_id", userId) // 사용자 ID 필터[m
[31m-                .get()[m
[31m-                .addOnSuccessListener(queryDocumentSnapshots -> {[m
[31m-                    timeList.clear();[m
[31m-                    for (QueryDocumentSnapshot document : queryDocumentSnapshots) {[m
[31m-                        StudySession session = document.toObject(StudySession.class);[m
[31m-                        session.setId(document.getId()); // Firestore 문서 ID 저장[m
[31m-                        timeList.add(session);[m
[31m-                    }[m
[31m-[m
[31m-                    // RecyclerView Adapter 초기화[m
[31m-                    adapter = new TimeListAdapter(timeList, firestore);[m
[31m-                    recyclerView.setAdapter(adapter);[m
[31m-                })[m
[31m-                .addOnFailureListener(e -> {[m
[31m-                    Toast.makeText(getContext(), "데이터를 불러오지 못했습니다: " + e.getMessage(), Toast.LENGTH_SHORT).show();[m
[31m-                });[m
[31m-    }[m
 }[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/TimerService.java b/app/src/main/java/com/example/studybuddy/TimerService.java[m
[1mindex 65667ad..9c7bf29 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/TimerService.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/TimerService.java[m
[36m@@ -21,7 +21,6 @@[m [mpublic class TimerService extends Service {[m
     private int elapsedTime = 0; // 타이머 시간 (초)[m
     private boolean isRunning = false;[m
 [m
[31m-[m
     private Runnable timerRunnable = new Runnable() {[m
         @Override[m
         public void run() {[m
[36m@@ -45,10 +44,6 @@[m [mpublic class TimerService extends Service {[m
         return binder;[m
     }[m
 [m
[31m-    public boolean isRunning() {[m
[31m-        return isRunning;[m
[31m-    }[m
[31m-[m
     public class TimerBinder extends Binder {[m
         public TimerService getService() {[m
             return TimerService.this;[m
[36m@@ -80,7 +75,6 @@[m [mpublic class TimerService extends Service {[m
     @SuppressLint({"MissingPermission", "ForegroundServiceType"})[m
     private void startForegroundService() {[m
         String channelId = "timer_channel";[m
[31m-        String channelName = "타이머 서비스";[m
 [m
         // API 26 이상에서 NotificationChannel 생성[m
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {[m
[36m@@ -90,7 +84,6 @@[m [mpublic class TimerService extends Service {[m
                     NotificationManager.IMPORTANCE_LOW[m
             );[m
 [m
[31m-            channel.setDescription("타이머가 백그라운드에서 실행 중입니다.");[m
             NotificationManager manager = getSystemService(NotificationManager.class);[m
             if (manager != null) {[m
                 manager.createNotificationChannel(channel);[m
[36m@@ -99,7 +92,7 @@[m [mpublic class TimerService extends Service {[m
 [m
         Notification notification = new NotificationCompat.Builder(this, channelId)[m
                 .setContentTitle("타이머 실행 중")[m
[31m-                .setContentText("현재 타이머가 실행 중입니다.")[m
[32m+[m[32m                .setContentText("타이머가 진행 중입니다.")[m
                 .setSmallIcon(R.drawable.ic_timer)[m
                 .setPriority(NotificationCompat.PRIORITY_LOW) // 낮은 우선순위[m
                 .build();[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/notifications/StudyBuddyNotificationManager.java b/app/src/main/java/com/example/studybuddy/notifications/StudyBuddyNotificationManager.java[m
[1mdeleted file mode 100644[m
[1mindex 07081cb..0000000[m
[1m--- a/app/src/main/java/com/example/studybuddy/notifications/StudyBuddyNotificationManager.java[m
[1m+++ /dev/null[m
[36m@@ -1,49 +0,0 @@[m
[31m-package com.example.studybuddy.notifications;[m
[31m-[m
[31m-import android.app.NotificationChannel;[m
[31m-import android.app.NotificationManager;[m
[31m-import android.content.Context;[m
[31m-import android.os.Build;[m
[31m-import androidx.core.app.NotificationCompat;[m
[31m-[m
[31m-public class StudyBuddyNotificationManager {[m
[31m-[m
[31m-    private static final String CHANNEL_ID = "studybuddy_notifications";[m
[31m-    private static final String CHANNEL_NAME = "StudyBuddy Notifications";[m
[31m-    private static StudyBuddyNotificationManager instance;[m
[31m-    private final NotificationManager notificationManager;[m
[31m-[m
[31m-    private StudyBuddyNotificationManager(Context context) {[m
[31m-        notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);[m
[31m-        createNotificationChannel();[m
[31m-    }[m
[31m-[m
[31m-    public static StudyBuddyNotificationManager getInstance(Context context) {[m
[31m-        if (instance == null) {[m
[31m-            instance = new StudyBuddyNotificationManager(context);[m
[31m-        }[m
[31m-        return instance;[m
[31m-    }[m
[31m-[m
[31m-    private void createNotificationChannel() {[m
[31m-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {[m
[31m-            NotificationChannel channel = new NotificationChannel([m
[31m-                    CHANNEL_ID,[m
[31m-                    CHANNEL_NAME,[m
[31m-                    NotificationManager.IMPORTANCE_HIGH[m
[31m-            );[m
[31m-            notificationManager.createNotificationChannel(channel);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    public void sendNotification(Context context, int notificationId, String title, String message) {[m
[31m-        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)[m
[31m-                .setSmallIcon(android.R.drawable.ic_notification_overlay)[m
[31m-                .setContentTitle(title)[m
[31m-                .setContentText(message)[m
[31m-                .setPriority(NotificationCompat.PRIORITY_HIGH)[m
[31m-                .setAutoCancel(true);[m
[31m-[m
[31m-        notificationManager.notify(notificationId, builder.build());[m
[31m-    }[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/studybuddy/utility/userData.java b/app/src/main/java/com/example/studybuddy/utility/userData.java[m
[1mindex 476e94a..6ef2527 100644[m
[1m--- a/app/src/main/java/com/example/studybuddy/utility/userData.java[m
[1m+++ b/app/src/main/java/com/example/studybuddy/utility/userData.java[m
[36m@@ -9,4 +9,4 @@[m [mpublic class userData {[m
     public static String userNickname;[m
     public static String profileUrl;[m
 [m
[31m-}[m
\ No newline at end of file[m
[32m+[m[32m}[m
[1mdiff --git a/app/src/main/res/drawable/ic_add.xml b/app/src/main/res/drawable/ic_add.xml[m
[1mindex ae2ce7c..9f83b8f 100644[m
[1m--- a/app/src/main/res/drawable/ic_add.xml[m
[1m+++ b/app/src/main/res/drawable/ic_add.xml[m
[36m@@ -1,5 +1,5 @@[m
 <vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:tint="#000000" android:viewportHeight="24" android:viewportWidth="24" android:width="24dp">[m
[31m-[m
[32m+[m[41m      [m
     <path android:fillColor="@android:color/white" android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>[m
[31m-[m
[31m-</vector>[m
\ No newline at end of file[m
[32m+[m[41m    [m
[32m+[m[32m</vector>[m
[1mdiff --git a/app/src/main/res/drawable/ic_like.xml b/app/src/main/res/drawable/ic_like.xml[m
[1mindex 6f34ac4..0b8b4c6 100644[m
[1m--- a/app/src/main/res/drawable/ic_like.xml[m
[1m+++ b/app/src/main/res/drawable/ic_like.xml[m
[36m@@ -1,5 +1,5 @@[m
 <vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:tint="#000000" android:viewportHeight="24" android:viewportWidth="24" android:width="24dp">[m
[31m-[m
[32m+[m[41m      [m
     <path android:fillColor="@android:color/white" android:pathData="M1,21h4L5,9L1,9v12zM23,10c0,-1.1 -0.9,-2 -2,-2h-6.31l0.95,-4.57 0.03,-0.32c0,-0.41 -0.17,-0.79 -0.44,-1.06L14.17,1 7.59,7.59C7.22,7.95 7,8.45 7,9v10c0,1.1 0.9,2 2,2h9c0.83,0 1.54,-0.5 1.84,-1.22l3.02,-7.05c0.09,-0.23 0.14,-0.47 0.14,-0.73v-2z"/>[m
[31m-[m
[31m-</vector>[m
\ No newline at end of file[m
[32m+[m[41m    [m
[32m+[m[32m</vector>[m
[1mdiff --git a/app/src/main/res/drawable/rounded_button.xml b/app/src/main/res/drawable/rounded_button.xml[m
[1mindex 6da6c5c..ef2572d 100644[m
[1m--- a/app/src/main/res/drawable/rounded_button.xml[m
[1m+++ b/app/src/main/res/drawable/rounded_button.xml[m
[36m@@ -3,7 +3,7 @@[m
 [m
     <item android:state_checked="true">[m
         <shape android:shape="rectangle">[m
[31m-            <solid android:color="#03A9F1" />[m
[32m+[m[32m            <solid android:color="@color/purple" />[m
             <corners android:radius="16dp" />[m
         </shape>[m
     </item>[m
[1mdiff --git a/app/src/main/res/drawable/spinner_background.xml b/app/src/main/res/drawable/spinner_background.xml[m
[1mdeleted file mode 100644[m
[1mindex b5a7a2c..0000000[m
[1m--- a/app/src/main/res/drawable/spinner_background.xml[m
[1m+++ /dev/null[m
[36m@@ -1,10 +0,0 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[31m-<shape xmlns:android="http://schemas.android.com/apk/res/android">[m
[31m-    <solid android:color="#2A2A3E" />[m
[31m-    <corners android:radius="8dp" />[m
[31m-    <padding[m
[31m-        android:left="16dp"[m
[31m-        android:right="16dp"[m
[31m-        android:top="8dp"[m
[31m-        android:bottom="8dp" />[m
[31m-</shape>[m
[1mdiff --git a/app/src/main/res/layout/activity_chat_calendar.xml b/app/src/main/res/layout/activity_chat_calendar.xml[m
[1mdeleted file mode 100644[m
[1mindex c82345c..0000000[m
[1m--- a/app/src/main/res/layout/activity_chat_calendar.xml[m
[1m+++ /dev/null[m
[36m@@ -1,73 +0,0 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[31m-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[31m-    android:layout_width="match_parent"[m
[31m-    android:layout_height="match_parent"[m
[31m-    android:padding="16dp">[m
[31m-[m
[31m-    <!-- 캘린더 뷰 -->[m
[31m-    <CalendarView[m
[31m-        android:id="@+id/calendar_view"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_alignParentTop="true"[m
[31m-        android:background="#FFFFFF" />[m
[31m-[m
[31m-    <!-- 일정 입력 -->[m
[31m-    <EditText[m
[31m-        android:id="@+id/input_schedule"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_below="@id/calendar_view"[m
[31m-        android:layout_marginTop="16dp"[m
[31m-        android:hint="일정을 입력하세요"[m
[31m-        android:textColorHint="#FFFFFF"[m
[31m-        android:textColor="#FFFFFF"[m
[31m-        android:padding="12dp"[m
[31m-        android:background="@drawable/rounded_edittext" />[m
[31m-[m
[31m-    <!-- "등록" 버튼 -->[m
[31m-    <Button[m
[31m-        android:id="@+id/register_button"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_below="@id/input_schedule"[m
[31m-        android:layout_marginTop="16dp"[m
[31m-        android:layout_centerHorizontal="true"[m
[31m-        android:text="채팅방 일정 등록" />[m
[31m-[m
[31m-    <!-- "예"와 "아니오" 버튼 (초기에는 숨김) -->[m
[31m-    <LinearLayout[m
[31m-        android:id="@+id/confirmation_buttons"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_below="@id/input_schedule"[m
[31m-        android:layout_marginTop="16dp"[m
[31m-        android:layout_centerHorizontal="true"[m
[31m-        android:visibility="gone"[m
[31m-        android:orientation="horizontal">[m
[31m-[m
[31m-        <Button[m
[31m-            android:id="@+id/btn_yes"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:text="등록 확정"[m
[31m-            android:layout_marginEnd="16dp" />[m
[31m-[m
[31m-        <Button[m
[31m-            android:id="@+id/btn_no"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:text="등록 취소" />[m
[31m-[m
[31m-    </LinearLayout>[m
[31m-[m
[31m-    <!-- "일정 보기" 버튼 -->[m
[31m-    <Button[m
[31m-        android:id="@+id/view_schedule_button"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_below="@id/register_button"[m
[31m-        android:layout_marginTop="16dp"[m
[31m-        android:layout_centerHorizontal="true"[m
[31m-        android:text="채팅방 일정 보기" />[m
[31m-</RelativeLayout>[m
[1mdiff --git a/app/src/main/res/layout/activity_chat_message.xml b/app/src/main/res/layout/activity_chat_message.xml[m
[1mindex c50c975..0e6863b 100644[m
[1m--- a/app/src/main/res/layout/activity_chat_message.xml[m
[1m+++ b/app/src/main/res/layout/activity_chat_message.xml[m
[36m@@ -26,35 +26,20 @@[m
         android:textStyle="bold"[m
         android:textSize="14sp" />[m
 [m
[31m-    <LinearLayout[m
[32m+[m[32m        <!-- 메시지 -->[m
[32m+[m[32m    <TextView[m
[32m+[m[32m        android:id="@+id/messageText"[m
         android:layout_width="wrap_content"[m
         android:layout_height="wrap_content"[m
[31m-        android:id="@+id/messageFrame"[m
[32m+[m[32m        android:text="메시지 내용"[m
[32m+[m[32m        android:maxWidth="250dp"[m
[32m+[m[32m        android:textColor="#FFFFFF"[m
[32m+[m[32m        android:background="@drawable/rounded_message_background"[m
         android:layout_alignLeft="@+id/username"[m
         android:layout_below="@+id/username"[m
[31m-        android:orientation="vertical"[m
[31m-        android:background="@drawable/rounded_button">[m
[31m-        <ImageView[m
[31m-            android:id="@+id/messageImage"[m
[31m-            android:layout_width="1dp"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_marginLeft="6dp"[m
[31m-            android:layout_marginRight="6dp"[m
[31m-            android:layout_marginTop="6dp"[m
[31m-            android:background="@drawable/rounded_message_background"[m
[31m-            android:layout_gravity="center_horizontal"/>[m
[31m-        <!-- 메시지 -->[m
[31m-        <TextView[m
[31m-            android:id="@+id/messageText"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:text="메시지 내용"[m
[31m-            android:maxWidth="250dp"[m
[31m-            android:textColor="#FFFFFF"[m
[31m-            android:background="@drawable/rounded_message_background"[m
[31m-            android:padding="10dp"[m
[31m-            android:textSize="16sp" />[m
[31m-    </LinearLayout>[m
[32m+[m[32m        android:padding="10dp"[m
[32m+[m[32m        android:textSize="16sp" />[m
[32m+[m
     <!-- 날짜/시간 텍스트 -->[m
     <TextView[m
         android:id="@+id/chatMessage_time"[m
[36m@@ -63,10 +48,8 @@[m
         android:text="08:43"[m
         android:textSize="12sp"[m
         android:textColor="#B0B0B0"[m
[31m-        android:layout_toRightOf="@+id/messageFrame"[m
[31m-        android:layout_alignBottom="@+id/messageFrame"[m
[32m+[m[32m        android:layout_toRightOf="@+id/messageText"[m
[32m+[m[32m        android:layout_alignBottom="@+id/messageText"[m
         android:layout_marginBottom="8dp"[m
[31m-        android:layout_marginLeft="8dp"/>[m
[31m-[m
[31m-    <!-- 오른쪽 정렬 -->[m
[32m+[m[32m        android:layout_marginLeft="8dp"/> <!-- 오른쪽 정렬 -->[m
 </RelativeLayout>[m
[1mdiff --git a/app/src/main/res/layout/activity_chat_room_menu.xml b/app/src/main/res/layout/activity_chat_room_menu.xml[m
[1mindex d47c93c..f5f7c71 100644[m
[1m--- a/app/src/main/res/layout/activity_chat_room_menu.xml[m
[1m+++ b/app/src/main/res/layout/activity_chat_room_menu.xml[m
[36m@@ -1,13 +1,11 @@[m
 <?xml version="1.0" encoding="utf-8"?>[m
[31m-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
     xmlns:app="http://schemas.android.com/apk/res-auto"[m
     xmlns:tools="http://schemas.android.com/tools"[m
     android:layout_width="match_parent"[m
     android:layout_height="match_parent"[m
     android:orientation="vertical"[m
[31m-    android:padding="16dp"[m
[31m-    android:id="@+id/fragment_container"[m
[31m-    >[m
[32m+[m[32m    android:padding="16dp">[m
 [m
     <!-- 상단 프로필 및 제목 -->[m
     <RelativeLayout[m
[36m@@ -41,14 +39,13 @@[m
             android:id="@+id/btn_backButton"[m
             android:layout_width="wrap_content"[m
             android:layout_height="wrap_content"[m
[32m+[m[32m            android:src="@drawable/baseline_arrow_back_24"[m
[32m+[m[32m            android:background="?android:attr/selectableItemBackground"[m
[32m+[m[32m            android:layout_alignParentEnd="true"[m
             android:layout_alignTop="@id/chatTitleText"[m
             android:layout_alignBottom="@id/chatTitleText"[m
[31m-            android:layout_alignParentEnd="true"[m
             android:layout_marginRight="20dp"[m
[31m-            android:background="?android:attr/selectableItemBackground"[m
[31m-            android:contentDescription="뒤로가기 버튼"[m
[31m-            android:src="@drawable/baseline_arrow_back_24"[m
[31m-            tools:ignore="TouchTargetSizeCheck" />[m
[32m+[m[32m            android:contentDescription="뒤로가기 버튼"/>[m
 [m
         <TextView[m
             android:id="@+id/chatSettingText"[m
[36m@@ -134,32 +131,22 @@[m
 [m
     </RelativeLayout>[m
 [m
[31m-    <LinearLayout[m
[32m+[m[32m    <!-- 사용자 리스트 RecyclerView -->[m
[32m+[m[32m    <androidx.recyclerview.widget.RecyclerView[m
[32m+[m[32m        android:id="@+id/userRecyclerView"[m
         android:layout_width="match_parent"[m
[31m-        android:layout_height="148dp"[m
[31m-        android:layout_gravity="bottom">[m
[31m-[m
[31m-        <!-- 사용자 리스트 RecyclerView -->[m
[31m-        <androidx.recyclerview.widget.RecyclerView[m
[31m-            android:id="@+id/userRecyclerView"[m
[31m-            android:layout_width="match_parent"[m
[31m-            android:layout_height="0dp"[m
[31m-            android:layout_weight="1"[m
[31m-            android:clipToPadding="false"[m
[31m-            android:paddingBottom="8dp" />[m
[31m-[m
[31m-        <!-- 초대 버튼 -->[m
[31m-        <Button[m
[31m-            android:id="@+id/btn_Invite"[m
[31m-            android:layout_width="match_parent"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_marginLeft="100dp"[m
[31m-            android:layout_marginTop="16dp"[m
[31m-            android:layout_marginRight="100dp"[m
[31m-            android:text="초대" />[m
[31m-[m
[31m-[m
[31m-    </LinearLayout>[m
[31m-[m
[31m-[m
[31m-</FrameLayout>[m
[32m+[m[32m        android:layout_height="0dp"[m
[32m+[m[32m        android:layout_weight="1"[m
[32m+[m[32m        android:paddingBottom="8dp"[m
[32m+[m[32m        android:clipToPadding="false" />[m
[32m+[m
[32m+[m[32m    <!-- 초대 버튼 -->[m
[32m+[m[32m    <Button[m
[32m+[m[32m        android:id="@+id/btn_Invite"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:text="초대"[m
[32m+[m[32m        android:layout_marginLeft="100dp"[m
[32m+[m[32m        android:layout_marginRight="100dp"[m
[32m+[m[32m        android:layout_marginTop="16dp" />[m
[32m+[m[32m</LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/activity_chatroom.xml b/app/src/main/res/layout/activity_chatroom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..3df509b[m
[1m--- /dev/null[m
[1m+++ b/app/src/main/res/layout/activity_chatroom.xml[m
[36m@@ -0,0 +1,137 @@[m
[32m+[m[32m<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:app="http://schemas.android.com/apk/res-auto"[m
[32m+[m[32m    xmlns:tools="http://schemas.android.com/tools"[m
[32m+[m[32m    android:layout_width="match_parent"[m
[32m+[m[32m    android:layout_height="match_parent"[m
[32m+[m[32m    android:orientation="vertical">[m
[32m+[m[32m    <RelativeLayout[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:padding="16dp">[m
[32m+[m[32m        <ImageView[m
[32m+[m[32m            android:id="@+id/accountImage"[m
[32m+[m[32m            android:layout_width="wrap_content"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:src="@drawable/baseline_account_circle_24"[m
[32m+[m[32m            android:layout_marginLeft="20dp"[m
[32m+[m[32m            android:layout_alignTop="@id/chatTitleText"[m
[32m+[m[32m            android:layout_alignBottom="@id/chatTitleText"/>[m
[32m+[m
[32m+[m[32m        <TextView[m
[32m+[m[32m            android:id="@+id/chatTitleText"[m
[32m+[m[32m            android:layout_width="wrap_content"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:text="채팅 제목"[m
[32m+[m[32m            android:textSize="24dp"[m
[32m+[m[32m            android:textStyle="bold"[m
[32m+[m[32m            android:gravity="center"[m
[32m+[m[32m            android:layout_toRightOf="@id/accountImage"[m
[32m+[m[32m            android:layout_marginLeft="10dp"[m
[32m+[m[32m            android:layout_marginTop="20dp"/>[m
[32m+[m
[32m+[m[32m        <!-- 뒤로가기 버튼 -->[m
[32m+[m[32m        <ImageButton[m
[32m+[m[32m            android:id="@+id/btn_chatMenu"[m
[32m+[m[32m            android:layout_width="wrap_content"[m
[32m+[m[32m            android:layout_height="wrap_content"[m
[32m+[m[32m            android:src="@drawable/baseline_menu_24"[m
[32m+[m[32m            android:background="?android:attr/selectableItemBackground"[m
[32m+[m[32m            android:layout_alignParentEnd="true"[m
[32m+[m[32m            android:layout_alignTop="@id/chatTitleText"[m
[32m+[m[32m            android:layout_alignBottom="@id/chatTitleText"[m
[32m+[m[32m            android:layout_marginRight="20dp"[m
[32m+[m[32m            android:contentDescription="목록 버튼"/>[m
[32m+[m[32m    </RelativeLayout>[m
[32m+[m
[32m+[m[32m    <!-- 채팅 메시지 리스트 -->[m
[32m+[m[32m    <androidx.recyclerview.widget.RecyclerView[m
[32m+[m[32m        android:id="@+id/chatRecyclerView"[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="match_parent"[m
[32m+[m[32m        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"[m
[32m+[m[32m        android:layout_weight="1"[m
[32m+[m[32m        android:padding="8dp"[m
[32m+[m[32m        android:scrollbars="vertical"[m
[32m+[m[32m        android:clipToPadding="false"/>[m
[32m+[m
[32m+[m[32m    <LinearLayout[m
[32m+[m[32m        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_height="wrap_content"[m
[32m+[m[32m        android:orientation="horizontal"[m
[32m+[m[32m        android:padding="8dp"[m
[32m+[m[32m        android:background="#2C2F38"[m
[32m+[m[32m        android:baselineAligned="false"[m
[32m+[m[32m        android:gravity="center_vertical"> <!-- 수직 중앙 정렬 -->[m
[32m+[m
[32m+[m[32m        <EditText[m
[32m+[m[32m            android:id="@+id/messageInput"[m
[32m+[m[32m            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_weight="1"[m
[32m+[m[32m            android:layout_height="match_parent"[m
[32m+[m[32m            android:hint="메시지 입력..."[m
[32m+[m[32m            android:background="@drawable/rounded_edittext"[m
[32m+[m[32m            android:textColor="#FFFFFF"[m
[32m+[m[32m            android:textColorHint="#858585"[m
[32m+[m[32m            android:padding="12dp"[m
[32m+[m[32m            android:gravity="center_vertical" />[m
[32m+[m
[32m+[m[32m        <!-- 첨부 버튼과 전송 버튼을 세로로 배치 -->[m
[32m+[m[32m        <LinearLayout[m
[32m+[m[32m            android:layout_width="wrap_content"[m
[32m+[m[32m            android:layout_height="match_parent"[m
[32m+[m[32m            android:orientation="vertical"[m
[32m+[m[32m            android:gravity="center"[m
[32m+[m[32m            android:layout_marginLeft="10dp">[m
[32m+[m
[32m+[m[32m            <FrameLayout[m
[32m+[m[32m                android:layout_width="wrap_content"[m
[32m+[m[32m                android:layout_height="wrap_content">[m
[32m+[m
[32m+[m[32m            <!-- 테마가 적용된 버튼 -->[m
[32m+[m[32m            <Button[m
[32m+[m[32m                android:id="@+id/btn_noUse1"[m
[32m+[m[32m                android:layout_width="48dp"[m
[32m+[m[32m                android:layout_height="48dp"[m
[32m+[m[32m                android:text=""[m
[32m+[m[32m                android:backgroundTint="#00AC83"[m
[32m+[m[32m                android:contentDescription="Themed button" />[m
[32m+[m
[32m+[m[32m            <ImageButton[m
[32m+[m[32m                android:id="@+id/btn_attachButton"[m
[32m+[m[32m                android:layout_width="48dp"[m
[32m+[m[32m                android:layout_height="48dp"[m
[32m+[m[32m                android:src="@drawable/baseline_attach_file_24"[m
[32m+[m[32m                android:background="?android:attr/selectableItemBackground"[m
[32m+[m[32m                android:contentDescription="Attach"[m
[32m+[m[32m                android:layout_gravity="center_horizontal"[m
[32m+[m[32m                android:layout_marginBottom="4dp" />[m
[32m+[m[32m            </FrameLayout>[m
[32m+[m
[32m+[m[32m            <FrameLayout[m
[32m+[m[32m                android:layout_width="wrap_content"[m
[32m+[m[32m                android:layout_height="wrap_content">[m
[32m+[m
[32m+[m[32m            <!-- 테마가 적용된 버튼 -->[m
[32m+[m[32m            <Button[m
[32m+[m[32m                android:id="@+id/btn_noUse2"[m
[32m+[m[32m                android:layout_width="48dp"[m
[32m+[m[32m                android:layout_height="48dp"[m
[32m+[m[32m                android:text=""[m
[32m+[m[32m                android:backgroundTint="#837DFF"[m
[32m+[m[32m                android:contentDescription="Themed button" />[m
[32m+[m
[32m+[m[32m            <ImageButton[m
[32m+[m[32m                android:id="@+id/btn_sendButton"[m
[32m+[m[32m                android:layout_width="48dp"[m
[32m+[m[32m                android:layout_height="48dp"[m
[32m+[m[32m                android:src="@drawable/baseline_send_24"[m
[32m+[m[32m                android:background="?android:attr/selectableItemBackground"[m
[32m+[m[32m                android:contentDescription="Send"[m
[32m+[m[32m                android:layout_gravity="center_horizontal"[m
[32m+[m[32m                android:layout_marginLeft="1dp"/>[m
[32m+[m[32m            </FrameLayout>[m
[32m+[m
[32m+[m[32m        </LinearLayout>[m
[32m+[m[32m    </LinearLayout>[m
[32m+[m[32m</LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/fragment_create_chat.xml b/app/src/main/res/layout/activity_create_chat.xml[m
[1msimilarity index 97%[m
[1mrename from app/src/main/res/layout/fragment_create_chat.xml[m
[1mrename to app/src/main/res/layout/activity_create_chat.xml[m
[1mindex cd27aae..efde7ba 100644[m
[1m--- a/app/src/main/res/layout/fragment_create_chat.xml[m
[1m+++ b/app/src/main/res/layout/activity_create_chat.xml[m
[36m@@ -4,9 +4,7 @@[m
     xmlns:tools="http://schemas.android.com/tools"[m
     android:layout_width="match_parent"[m
     android:layout_height="match_parent"[m
[31m-    android:background="#292F3F"[m
[31m-    android:orientation="vertical"[m
[31m-    android:clickable="true">[m
[32m+[m[32m    android:orientation="vertical">[m
     <RelativeLayout[m
         android:layout_width="match_parent"[m
         android:layout_height="wrap_content"[m
[36m@@ -62,7 +60,6 @@[m
             android:layout_below="@id/chatRoomNameText"[m
             android:hint="채팅방 이름 입력..."[m
             android:textColorHint="#858585"[m
[31m-            android:textColor="#858585"[m
             android:inputType="text"[m
             android:padding="12dp"[m
             android:layout_marginLeft="20dp"[m
[36m@@ -88,7 +85,6 @@[m
             android:layout_below="@id/classCodeText"[m
             android:hint="수업 코드 입력..."[m
             android:textColorHint="#858585"[m
[31m-            android:textColor="#858585"[m
             android:inputType="text"[m
             android:padding="12dp"[m
             android:layout_marginLeft="20dp"[m
[36m@@ -239,12 +235,12 @@[m
         </RadioGroup>[m
 [m
         <Button[m
[31m-            android:id="@+id/btn_createChat"[m
[32m+[m[32m            android:id="@+id/btn_signUp"[m
             android:layout_width="150dp"[m
             android:layout_height="wrap_content"[m
             android:layout_below="@id/radioPublicSelect"[m
             android:layout_centerHorizontal="true"[m
[31m-            android:text="채팅 생성"[m
[32m+[m[32m            android:text="회원가입"[m
             android:layout_marginTop="20dp"[m
             android:textSize="20dp"/>[m
 [m
[1mdiff --git a/app/src/main/res/layout/activity_my_chat_message.xml b/app/src/main/res/layout/activity_my_chat_message.xml[m
[1mindex 397b639..b58a559 100644[m
[1m--- a/app/src/main/res/layout/activity_my_chat_message.xml[m
[1m+++ b/app/src/main/res/layout/activity_my_chat_message.xml[m
[36m@@ -12,16 +12,15 @@[m
         android:src="@drawable/profile"[m
         android:contentDescription="Profile Image"[m
         android:layout_alignTop="@+id/chatMessage_time"[m
[31m-        android:layout_alignLeft="@+id/messageFrame"[m
[32m+[m[32m        android:layout_alignLeft="@+id/messageText"[m
         android:background="@drawable/rounded_profile_background" />[m
[31m-[m
     <TextView[m
         android:id="@+id/username"[m
         android:layout_width="wrap_content"[m
         android:layout_height="wrap_content"[m
         android:text="사용자 이름"[m
[31m-        android:layout_alignLeft="@+id/messageFrame"[m
[31m-        android:layout_alignBaseline="@+id/messageFrame"[m
[32m+[m[32m        android:layout_alignLeft="@+id/messageText"[m
[32m+[m[32m        android:layout_alignBaseline="@+id/messageText"[m
         android:textSize="1sp" />[m
     <!-- 날짜/시간 텍스트 -->[m
     <TextView[m
[36m@@ -31,42 +30,23 @@[m
         android:text="08:43"[m
         android:textSize="12sp"[m
         android:textColor="#B0B0B0"[m
[31m-        android:layout_toLeftOf="@+id/messageFrame"[m
[31m-        android:layout_alignBottom="@+id/messageFrame"[m
[32m+[m[32m        android:layout_toLeftOf="@+id/messageText"[m
[32m+[m[32m        android:layout_alignBottom="@+id/messageText"[m
         android:layout_marginRight="8dp"[m
         android:layout_marginBottom="8dp"[m
         />[m
 [m
[31m-    <LinearLayout[m
[31m-        android:id="@+id/messageFrame"[m
[32m+[m[32m    <!-- 메시지 -->[m
[32m+[m[32m    <TextView[m
[32m+[m[32m        android:id="@+id/messageText"[m
         android:layout_width="wrap_content"[m
         android:layout_height="wrap_content"[m
[31m-        android:layout_alignParentRight="true"[m
[31m-        android:orientation="vertical"[m
[31m-        android:background="@drawable/rounded_button">[m
[31m-        <ImageView[m
[31m-            android:id="@+id/messageImage"[m
[31m-            android:layout_width="1dp"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_marginLeft="6dp"[m
[31m-            android:layout_marginRight="6dp"[m
[31m-            android:layout_marginTop="6dp"[m
[31m-            android:background="@drawable/rounded_message_background"[m
[31m-            android:layout_gravity="center_horizontal"[m
[31m-            />[m
[31m-    <!-- 메시지 -->[m
[31m-        <TextView[m
[31m-            android:id="@+id/messageText"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:text="메시지 내용"[m
[31m-            android:textColor="#FFFFFF"[m
[31m-            android:textSize="16sp"[m
[31m-            android:maxWidth="250dp"[m
[31m-            android:padding="10dp"[m
[31m-            android:background="@drawable/rounded_message_background"[m
[31m-            android:layout_alignParentRight="true"/>[m
[31m-    </LinearLayout>[m
[32m+[m[32m        android:text="메시지 내용"[m
[32m+[m[32m        android:textColor="#FFFFFF"[m
[32m+[m[32m        android:textSize="16sp"[m
[32m+[m[32m        android:padding="10dp"[m
[32m+[m[32m        android:background="@drawable/rounded_message_background"[m
[32m+[m[32m        android:layout_alignParentRight="true"/>[m
 [m
 [m
 </RelativeLayout>[m
[1mdiff --git a/app/src/main/res/layout/chat_recycler_view.xml b/app/src/main/res/layout/chat_recycler_view.xml[m
[1mindex 30354f0..a37d702 100644[m
[1m--- a/app/src/main/res/layout/chat_recycler_view.xml[m
[1m+++ b/app/src/main/res/layout/chat_recycler_view.xml[m
[36m@@ -5,7 +5,7 @@[m
     android:padding="8dp">[m
 [m
     <!-- 아이템의 이미지 아이콘 -->[m
[31m-    <de.hdodenhof.circleimageview.CircleImageView[m
[32m+[m[32m    <ImageView[m
         android:id="@+id/chat_profile"[m
         android:layout_width="48dp"[m
         android:layout_height="48dp"[m
[1mdiff --git a/app/src/main/res/layout/dialog_register_time.xml b/app/src/main/res/layout/dialog_register_time.xml[m
[1mdeleted file mode 100644[m
[1mindex 510e3ef..0000000[m
[1m--- a/app/src/main/res/layout/dialog_register_time.xml[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[31m-    android:layout_width="match_parent"[m
[31m-    android:layout_height="wrap_content"[m
[31m-    android:orientation="vertical"[m
[31m-    android:background="#373E4E"[m
[31m-    android:padding="16dp">[m
[31m-[m
[31m-    <EditText[m
[31m-        android:id="@+id/subject_edit_text"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:textColorHint="#FFFFFF"[m
[31m-        android:textColor="#FFFFFF"[m
[31m-        android:hint="과목 이름" />[m
[31m-[m
[31m-    <EditText[m
[31m-        android:id="@+id/memo_edit_text"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:textColorHint="#FFFFFF"[m
[31m-        android:textColor="#FFFFFF"[m
[31m-        android:hint="메모" />[m
[31m-</LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/fragment_calendar.xml b/app/src/main/res/layout/fragment_calendar.xml[m
[1mindex 8dc7fa4..f78a538 100644[m
[1m--- a/app/src/main/res/layout/fragment_calendar.xml[m
[1m+++ b/app/src/main/res/layout/fragment_calendar.xml[m
[36m@@ -57,7 +57,6 @@[m
             android:layout_width="wrap_content"[m
             android:layout_height="wrap_content"[m
             android:text="등록 취소" />[m
[31m-[m
     </LinearLayout>[m
 [m
     <!-- "일정 보기" 버튼 -->[m
[1mdiff --git a/app/src/main/res/layout/fragment_chat_calendar.xml b/app/src/main/res/layout/fragment_chat_calendar.xml[m
[1mdeleted file mode 100644[m
[1mindex a9bab90..0000000[m
[1m--- a/app/src/main/res/layout/fragment_chat_calendar.xml[m
[1m+++ /dev/null[m
[36m@@ -1,73 +0,0 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[31m-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[31m-android:layout_width="match_parent"[m
[31m-android:layout_height="match_parent"[m
[31m-android:padding="16dp">[m
[31m-[m
[31m-<!-- 캘린더 뷰 -->[m
[31m-<CalendarView[m
[31m-    android:id="@+id/calendar_view"[m
[31m-    android:layout_width="match_parent"[m
[31m-    android:layout_height="wrap_content"[m
[31m-    android:layout_alignParentTop="true"[m
[31m-    android:background="#FFFFFF" />[m
[31m-[m
[31m-<!-- 일정 입력 -->[m
[31m-<EditText[m
[31m-    android:id="@+id/input_schedule"[m
[31m-    android:layout_width="match_parent"[m
[31m-    android:layout_height="wrap_content"[m
[31m-    android:layout_below="@id/calendar_view"[m
[31m-    android:layout_marginTop="16dp"[m
[31m-    android:hint="일정을 입력하세요"[m
[31m-    android:textColorHint="#FFFFFF"[m
[31m-    android:textColor="#FFFFFF"[m
[31m-    android:padding="12dp"[m
[31m-    android:background="@drawable/rounded_edittext" />[m
[31m-[m
[31m-<!-- "등록" 버튼 -->[m
[31m-<Button[m
[31m-    android:id="@+id/register_button"[m
[31m-    android:layout_width="wrap_content"[m
[31m-    android:layout_height="wrap_content"[m
[31m-    android:layout_below="@id/input_schedule"[m
[31m-    android:layout_marginTop="16dp"[m
[31m-    android:layout_centerHorizontal="true"[m
[31m-    android:text="채팅방 일정 등록" />[m
[31m-[m
[31m-<!-- "예"와 "아니오" 버튼 (초기에는 숨김) -->[m
[31m-<LinearLayout[m
[31m-    android:id="@+id/confirmation_buttons"[m
[31m-    android:layout_width="wrap_content"[m
[31m-    android:layout_height="wrap_content"[m
[31m-    android:layout_below="@id/input_schedule"[m
[31m-    android:layout_marginTop="16dp"[m
[31m-    android:layout_centerHorizontal="true"[m
[31m-    android:visibility="gone"[m
[31m-    android:orientation="horizontal">[m
[31m-[m
[31m-    <Button[m
[31m-        android:id="@+id/btn_yes"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:text="등록 확정"[m
[31m-        android:layout_marginEnd="16dp" />[m
[31m-[m
[31m-    <Button[m
[31m-        android:id="@+id/btn_no"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:text="등록 취소" />[m
[31m-[m
[31m-</LinearLayout>[m
[31m-[m
[31m-<!-- "일정 보기" 버튼 -->[m
[31m-<Button[m
[31m-    android:id="@+id/view_schedule_button"[m
[31m-    android:layout_width="wrap_content"[m
[31m-    android:layout_height="wrap_content"[m
[31m-    android:layout_below="@id/register_button"[m
[31m-    android:layout_marginTop="16dp"[m
[31m-    android:layout_centerHorizontal="true"[m
[31m-    android:text="채팅방 일정 보기" />[m
[31m-</RelativeLayout>[m
[1mdiff --git a/app/src/main/res/layout/fragment_chat_room.xml b/app/src/main/res/layout/fragment_chat_room.xml[m
[1mdeleted file mode 100644[m
[1mindex 5a1ae54..0000000[m
[1m--- a/app/src/main/res/layout/fragment_chat_room.xml[m
[1m+++ /dev/null[m
[36m@@ -1,185 +0,0 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[31m-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[31m-    xmlns:app="http://schemas.android.com/apk/res-auto"[m
[31m-    xmlns:tools="http://schemas.android.com/tools"[m
[31m-    android:layout_height="match_parent"[m
[31m-    android:layout_width="match_parent">[m
[31m-    <LinearLayout[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="match_parent"[m
[31m-        android:orientation="vertical">[m
[31m-        <RelativeLayout[m
[31m-            android:layout_width="match_parent"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:padding="16dp">[m
[31m-            <ImageView[m
[31m-                android:id="@+id/accountImage"[m
[31m-                android:layout_width="wrap_content"[m
[31m-                android:layout_height="wrap_content"[m
[31m-                android:src="@drawable/baseline_account_circle_24"[m
[31m-                android:layout_marginLeft="20dp"[m
[31m-                android:layout_alignTop="@id/chatTitleText"[m
[31m-                android:layout_alignBottom="@id/chatTitleText"/>[m
[31m-[m
[31m-            <TextView[m
[31m-                android:id="@+id/chatTitleText"[m
[31m-                android:layout_width="wrap_content"[m
[31m-                android:layout_height="wrap_content"[m
[31m-                android:text="채팅 제목"[m
[31m-                android:textSize="24dp"[m
[31m-                android:textStyle="bold"[m
[31m-                android:gravity="center"[m
[31m-                android:layout_toRightOf="@id/accountImage"[m
[31m-                android:layout_marginLeft="10dp"[m
[31m-                android:layout_marginTop="20dp"/>[m
[31m-[m
[31m-            <!-- 뒤로가기 버튼 -->[m
[31m-            <ImageButton[m
[31m-                android:id="@+id/btn_chatMenu"[m
[31m-                android:layout_width="wrap_content"[m
[31m-                android:layout_height="wrap_content"[m
[31m-                android:src="@drawable/baseline_menu_24"[m
[31m-                android:background="?android:attr/selectableItemBackground"[m
[31m-                android:layout_alignParentEnd="true"[m
[31m-                android:layout_alignTop="@id/chatTitleText"[m
[31m-                android:layout_alignBottom="@id/chatTitleText"[m
[31m-                android:layout_marginRight="20dp"[m
[31m-                android:contentDescription="목록 버튼"/>[m
[31m-        </RelativeLayout>[m
[31m-[m
[31m-        <!-- 채팅 메시지 리스트 -->[m
[31m-        <androidx.recyclerview.widget.RecyclerView[m
[31m-            android:id="@+id/chatRecyclerView"[m
[31m-            android:layout_width="match_parent"[m
[31m-            android:layout_height="match_parent"[m
[31m-            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"[m
[31m-            android:layout_weight="1"[m
[31m-            android:padding="8dp"[m
[31m-            android:scrollbars="vertical"[m
[31m-            android:clipToPadding="false"/>[m
[31m-[m
[31m-[m
[31m-        <RelativeLayout[m
[31m-            android:layout_width="match_parent"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:background="#4f5464">[m
[31m-            <ImageView[m
[31m-                android:id="@+id/addImageFile"[m
[31m-                android:layout_height="1dp"[m
[31m-                android:layout_width="match_parent"[m
[31m-                android:layout_gravity="center_horizontal"[m
[31m-                android:layout_marginTop="8dp"[m
[31m-                android:layout_marginBottom="4dp"[m
[31m-                />[m
[31m-            <TextView[m
[31m-                android:id="@+id/btn_fileDeleteButton"[m
[31m-                android:layout_width="wrap_content"[m
[31m-                android:layout_height="wrap_content"[m
[31m-                android:text="x"[m
[31m-                android:textSize="1dp"[m
[31m-                android:textColor="#8e94a9"[m
[31m-                android:layout_marginBottom="4dp"[m
[31m-                android:layout_marginTop="4dp"[m
[31m-                android:layout_alignParentRight="true"[m
[31m-                android:layout_marginRight="10dp"/>[m
[31m-[m
[31m-        </RelativeLayout>[m
[31m-[m
[31m-        <LinearLayout[m
[31m-            android:layout_width="match_parent"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:orientation="horizontal"[m
[31m-            android:padding="8dp"[m
[31m-            android:background="#2C2F38"[m
[31m-            android:baselineAligned="false"[m
[31m-            android:gravity="center_vertical"> <!-- 수직 중앙 정렬 -->[m
[31m-[m
[31m-            <EditText[m
[31m-                android:id="@+id/messageInput"[m
[31m-                android:layout_width="0dp"[m
[31m-                android:layout_weight="1"[m
[31m-                android:layout_height="match_parent"[m
[31m-                android:hint="메시지 입력..."[m
[31m-                android:background="@drawable/rounded_edittext"[m
[31m-                android:textColor="#FFFFFF"[m
[31m-                android:textColorHint="#858585"[m
[31m-                android:padding="12dp"[m
[31m-                android:gravity="center_vertical" />[m
[31m-[m
[31m-            <!-- 첨부 버튼과 전송 버튼을 세로로 배치 -->[m
[31m-            <LinearLayout[m
[31m-                android:layout_width="wrap_content"[m
[31m-                android:layout_height="match_parent"[m
[31m-                android:orientation="vertical"[m
[31m-                android:gravity="center"[m
[31m-                android:layout_marginLeft="10dp">[m
[31m-[m
[31m-                <FrameLayout[m
[31m-                    android:layout_width="wrap_content"[m
[31m-                    android:layout_height="wrap_content">[m
[31m-[m
[31m-                    <!-- 테마가 적용된 버튼 -->[m
[31m-                    <Button[m
[31m-                        android:id="@+id/btn_noUse1"[m
[31m-                        android:layout_width="48dp"[m
[31m-                        android:layout_height="48dp"[m
[31m-                        android:text=""[m
[31m-                        android:backgroundTint="#00AC83"[m
[31m-                        android:contentDescription="Themed button" />[m
[31m-[m
[31m-                    <ImageButton[m
[31m-                        android:id="@+id/btn_attachButton"[m
[31m-                        android:layout_width="48dp"[m
[31m-                        android:layout_height="48dp"[m
[31m-                        android:src="@drawable/baseline_attach_file_24"[m
[31m-                        android:background="?android:attr/selectableItemBackground"[m
[31m-                        android:contentDescription="Attach"[m
[31m-                        android:layout_gravity="center_horizontal"[m
[31m-                        android:layout_marginBottom="4dp" />[m
[31m-                </FrameLayout>[m
[31m-[m
[31m-                <FrameLayout[m
[31m-                    android:layout_width="wrap_content"[m
[31m-                    android:layout_height="wrap_content">[m
[31m-[m
[31m-                    <!-- 테마가 적용된 버튼 -->[m
[31m-                    <Button[m
[31m-                        android:id="@+id/btn_noUse2"[m
[31m-                        android:layout_width="48dp"[m
[31m-                        android:layout_height="48dp"[m
[31m-                        android:text=""[m
[31m-                        android:backgroundTint="#837DFF"[m
[31m-                        android:contentDescription="Themed button" />[m
[31m-[m
[31m-                    <ImageButton[m
[31m-                        android:id="@+id/btn_sendButton"[m
[31m-                        android:layout_width="48dp"[m
[31m-                        android:layout_height="48dp"[m
[31m-                        android:src="@drawable/baseline_send_24"[m
[31m-                        android:background="?android:attr/selectableItemBackground"[m
[31m-                        android:contentDescription="Send"[m
[31m-                        android:layout_gravity="center_horizontal"[m
[31m-                        android:layout_marginLeft="1dp"/>[m
[31m-                </FrameLayout>[m
[31m-[m
[31m-            </LinearLayout>[m
[31m-        </LinearLayout>[m
[31m-    </LinearLayout>[m
[31m-    <ImageView[m
[31m-        android:id="@+id/total_image"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="match_parent"[m
[31m-        android:background="@color/black"[m
[31m-        android:alpha="0.4"[m
[31m-        android:visibility="gone"/>[m
[31m-[m
[31m-    <ImageView[m
[31m-        android:id="@+id/expanded_image"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="match_parent"[m
[31m-        android:visibility="gone"[m
[31m-        android:layout_marginRight="50dp"[m
[31m-        android:layout_marginLeft="50dp"[m
[31m-        android:layout_gravity="center"/>[m
[31m-[m
[31m-</FrameLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/fragment_chat_room_menu.xml b/app/src/main/res/layout/fragment_chat_room_menu.xml[m
[1mdeleted file mode 100644[m
[1mindex 3d4d528..0000000[m
[1m--- a/app/src/main/res/layout/fragment_chat_room_menu.xml[m
[1m+++ /dev/null[m
[36m@@ -1,167 +0,0 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[31m-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[31m-    xmlns:app="http://schemas.android.com/apk/res-auto"[m
[31m-    xmlns:tools="http://schemas.android.com/tools"[m
[31m-    android:layout_width="match_parent"[m
[31m-    android:layout_height="match_parent"[m
[31m-    android:orientation="vertical"[m
[31m-    android:padding="16dp"[m
[31m-    android:background="#292F3F"[m
[31m-    android:id="@+id/fragment_container"[m
[31m-    android:clickable="true"[m
[31m-    >[m
[31m-[m
[31m-    <!-- 상단 프로필 및 제목 -->[m
[31m-    <RelativeLayout[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_marginBottom="16dp">[m
[31m-[m
[31m-        <ImageView[m
[31m-            android:id="@+id/accountImage"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:src="@drawable/baseline_account_circle_24"[m
[31m-            android:layout_marginLeft="20dp"[m
[31m-            android:layout_alignTop="@id/chatTitleText"[m
[31m-            android:layout_alignBottom="@id/chatTitleText"/>[m
[31m-[m
[31m-        <TextView[m
[31m-            android:id="@+id/chatTitleText"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:text="채팅 제목"[m
[31m-            android:textSize="24dp"[m
[31m-            android:textStyle="bold"[m
[31m-            android:gravity="center"[m
[31m-            android:layout_toRightOf="@id/accountImage"[m
[31m-            android:layout_marginLeft="10dp"[m
[31m-            android:layout_marginTop="20dp"/>[m
[31m-[m
[31m-        <!-- 뒤로가기 버튼 -->[m
[31m-        <ImageButton[m
[31m-            android:id="@+id/btn_backButton"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_alignTop="@id/chatTitleText"[m
[31m-            android:layout_alignBottom="@id/chatTitleText"[m
[31m-            android:layout_alignParentEnd="true"[m
[31m-            android:layout_marginRight="20dp"[m
[31m-            android:background="?android:attr/selectableItemBackground"[m
[31m-            android:contentDescription="뒤로가기 버튼"[m
[31m-            android:src="@drawable/baseline_arrow_back_24"[m
[31m-            tools:ignore="TouchTargetSizeCheck" />[m
[31m-[m
[31m-        <TextView[m
[31m-            android:id="@+id/chatSettingText"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_below="@id/accountImage"[m
[31m-            android:layout_alignLeft="@id/accountImage"[m
[31m-            android:layout_marginTop="20dp"[m
[31m-            android:text="채팅방 설정"[m
[31m-            android:textSize="15sp"/>[m
[31m-[m
[31m-        <Button[m
[31m-            android:id="@+id/btn_chatSettings"[m
[31m-            android:layout_width="150dp"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_below="@id/chatSettingText"[m
[31m-            android:layout_marginLeft="20dp"[m
[31m-            android:layout_marginTop="10dp"[m
[31m-            android:text="설정"[m
[31m-            android:drawableLeft="@drawable/baseline_settings_24"/>[m
[31m-[m
[31m-        <TextView[m
[31m-            android:id="@+id/chatCalendarText"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_below="@id/btn_chatSettings"[m
[31m-            android:layout_alignLeft="@id/accountImage"[m
[31m-            android:layout_marginTop="20dp"[m
[31m-            android:text="과목 캘린더"[m
[31m-            android:textSize="15sp"/>[m
[31m-[m
[31m-        <Button[m
[31m-            android:id="@+id/btn_classCalendar"[m
[31m-            android:layout_width="150dp"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_below="@id/chatCalendarText"[m
[31m-            android:layout_marginLeft="20dp"[m
[31m-            android:layout_marginTop="10dp"[m
[31m-            android:text="캘린더"[m
[31m-            android:drawableLeft="@drawable/baseline_calendar_month_24"/>[m
[31m-[m
[31m-        <TextView[m
[31m-            android:id="@+id/chatTimerText"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_below="@id/btn_classCalendar"[m
[31m-            android:layout_alignLeft="@id/accountImage"[m
[31m-            android:layout_marginTop="20dp"[m
[31m-            android:text="과목 타이머"[m
[31m-            android:textSize="15sp"/>[m
[31m-[m
[31m-        <Button[m
[31m-            android:id="@+id/btn_classTimer"[m
[31m-            android:layout_width="150dp"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_below="@id/chatTimerText"[m
[31m-            android:layout_marginLeft="20dp"[m
[31m-            android:layout_marginTop="10dp"[m
[31m-            android:text="타이머"[m
[31m-            android:drawableLeft="@drawable/baseline_access_time_24"/>[m
[31m-[m
[31m-        <TextView[m
[31m-            android:id="@+id/goalBoardText"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_below="@id/btn_classTimer"[m
[31m-            android:layout_alignLeft="@id/accountImage"[m
[31m-            android:layout_marginTop="20dp"[m
[31m-            android:text="목표 인증 게시판"[m
[31m-            android:textSize="15sp"/>[m
[31m-[m
[31m-        <Button[m
[31m-            android:id="@+id/btn_goalBoard"[m
[31m-            android:layout_width="150dp"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_below="@id/goalBoardText"[m
[31m-            android:layout_marginLeft="20dp"[m
[31m-            android:layout_marginTop="10dp"[m
[31m-            android:text="목표인증"[m
[31m-            android:drawableLeft="@drawable/baseline_access_time_24"/>[m
[31m-[m
[31m-[m
[31m-[m
[31m-    </RelativeLayout>[m
[31m-[m
[31m-    <LinearLayout[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="148dp"[m
[31m-        android:layout_gravity="bottom">[m
[31m-[m
[31m-        <!-- 사용자 리스트 RecyclerView -->[m
[31m-        <androidx.recyclerview.widget.RecyclerView[m
[31m-            android:id="@+id/userRecyclerView"[m
[31m-            android:layout_width="match_parent"[m
[31m-            android:layout_height="0dp"[m
[31m-            android:layout_weight="1"[m
[31m-            android:clipToPadding="false"[m
[31m-            android:paddingBottom="8dp" />[m
[31m-[m
[31m-        <!-- 초대 버튼 -->[m
[31m-        <Button[m
[31m-            android:id="@+id/btn_Invite"[m
[31m-            android:layout_width="match_parent"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_marginLeft="100dp"[m
[31m-            android:layout_marginTop="16dp"[m
[31m-            android:layout_marginRight="100dp"[m
[31m-            android:text="초대" />[m
[31m-[m
[31m-[m
[31m-    </LinearLayout>[m
[31m-[m
[31m-[m
[31m-</FrameLayout>[m
[1mdiff --git a/app/src/main/res/layout/fragment_class_chat_list.xml b/app/src/main/res/layout/fragment_class_chat_list.xml[m
[1mindex 73c2cca..f9e3326 100644[m
[1m--- a/app/src/main/res/layout/fragment_class_chat_list.xml[m
[1m+++ b/app/src/main/res/layout/fragment_class_chat_list.xml[m
[36m@@ -48,7 +48,6 @@[m
                 android:layout_weight="1"[m
                 android:hint="채팅방 검색..."[m
                 android:textColorHint="#858585"[m
[31m-                android:textColor="#858585"[m
                 android:inputType="text"[m
                 android:padding="12dp"[m
                 android:layout_marginLeft="20dp"[m
[36m@@ -114,14 +113,6 @@[m
         android:scrollbars="vertical"[m
         tools:listitem="@layout/chat_recycler_view"/>[m
 [m
[31m-    <com.google.android.material.floatingactionbutton.FloatingActionButton[m
[31m-        android:id="@+id/addChatButton"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_gravity="end|bottom"[m
[31m-        android:layout_margin="16dp"[m
[31m-        android:src="@drawable/ic_add"[m
[31m-        android:backgroundTint="#03A9F1"/>[m
 [m
 [m
 </LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/fragment_goal_details.xml b/app/src/main/res/layout/fragment_goal_details.xml[m
[1mindex 6494e9c..d7ae871 100644[m
[1m--- a/app/src/main/res/layout/fragment_goal_details.xml[m
[1m+++ b/app/src/main/res/layout/fragment_goal_details.xml[m
[36m@@ -100,13 +100,10 @@[m
             <!-- 설명 추가를 위한 EditText -->[m
             <EditText[m
                 android:id="@+id/certificationDescription"[m
[31m-                android:background="@drawable/rounded_edittext"[m
                 android:layout_width="match_parent"[m
                 android:layout_height="wrap_content"[m
[31m-                android:padding="15dp"[m
                 android:layout_below="@id/certificationImagePreview"[m
                 android:layout_marginTop="16dp"[m
[31m-                android:textColorHint="#858585"[m
                 android:hint="인증 설명을 입력하세요" />[m
 [m
             <TextView[m
[36m@@ -114,7 +111,7 @@[m
                 android:layout_width="wrap_content"[m
                 android:layout_height="wrap_content"[m
                 android:layout_below="@id/certificationDescription"[m
[31m-                android:textSize="20sp"/>[m
[32m+[m[32m                android:textSize="15sp"/>[m
 [m
             <!-- 인증하기 버튼 -->[m
             <Button[m
[36m@@ -128,4 +125,5 @@[m
 [m
         </RelativeLayout>[m
     </LinearLayout>[m
[31m-</ScrollView>[m
\ No newline at end of file[m
[32m+[m[32m</ScrollView>[m
[41m+[m
[1mdiff --git a/app/src/main/res/layout/fragment_my_profile.xml b/app/src/main/res/layout/fragment_my_profile.xml[m
[1mindex 30a56c7..c5d863a 100644[m
[1m--- a/app/src/main/res/layout/fragment_my_profile.xml[m
[1m+++ b/app/src/main/res/layout/fragment_my_profile.xml[m
[36m@@ -30,7 +30,7 @@[m
         android:layout_toRightOf="@id/accountImage"[m
         android:layout_marginLeft="10dp"[m
         android:layout_marginTop="20dp"/>[m
[31m-    [m
[32m+[m
     <ImageView[m
         android:id="@+id/profile_image"[m
         android:layout_width="120dp"[m
[36m@@ -105,7 +105,7 @@[m
         android:id="@+id/btn_goalTest"[m
         android:layout_width="match_parent"[m
         android:layout_height="wrap_content"[m
[31m-        android:layout_below="@id/btn_setting"[m
[32m+[m[32m        android:layout_below="@id/btn_personalCalender"[m
         android:layout_centerHorizontal="true"[m
         android:layout_marginTop="20dp"[m
         android:layout_marginLeft="20dp"[m
[36m@@ -113,19 +113,6 @@[m
         android:text="(테스트용)목표 게시판 가기"[m
         android:textSize="20sp"/>[m
 [m
[31m-    <Button[m
[31m-        android:id="@+id/btn_logout"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="47dp"[m
[31m-        android:layout_below="@+id/btn_setting"[m
[31m-        android:layout_alignParentRight="true"[m
[31m-        android:layout_alignParentBottom="true"[m
[31m-        android:layout_marginTop="190dp"[m
[31m-        android:layout_marginRight="20dp"[m
[31m-        android:text="로그아웃"[m
[31m-        android:textSize="17sp" />[m
[31m-[m
[31m-[m
 [m
 [m
 </RelativeLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/fragment_my_study_time.xml b/app/src/main/res/layout/fragment_my_study_time.xml[m
[1mindex b33f8ae..22a15d1 100644[m
[1m--- a/app/src/main/res/layout/fragment_my_study_time.xml[m
[1m+++ b/app/src/main/res/layout/fragment_my_study_time.xml[m
[36m@@ -1,51 +1,28 @@[m
 <?xml version="1.0" encoding="utf-8"?>[m
[31m-<RelativeLayout[m
[31m-    xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"[m
[32m+[m[32m    xmlns:tools="http://schemas.android.com/tools"[m
     android:layout_width="match_parent"[m
     android:layout_height="match_parent"[m
[31m-    android:background="#1A1A2E">[m
[32m+[m[32m    android:orientation="vertical"[m
[32m+[m[32m    tools:context=".MyStudyTimeFragment">[m
 [m
[31m-    <!-- 상단 정렬 기준 -->[m
[31m-    <LinearLayout[m
[31m-        android:id="@+id/sort_container"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:orientation="horizontal"[m
[31m-        android:padding="16dp"[m
[31m-        android:gravity="center_vertical">[m
 [m
[31m-        <TextView[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:text="정렬 기준: "[m
[31m-            android:textSize="16sp"[m
[31m-            android:textColor="#FFFFFF"[m
[31m-            android:layout_marginEnd="8dp" />[m
 [m
[31m-        <Spinner[m
[31m-            android:id="@+id/sort_spinner"[m
[32m+[m
[32m+[m[32m    <TextView[m
[32m+[m[32m            android:id="@+id/total_study_time"[m
             android:layout_width="wrap_content"[m
             android:layout_height="wrap_content"[m
[31m-            android:entries="@array/sort_options"[m
[31m-            android:minHeight="48dp" />[m
[31m-    </LinearLayout>[m
[32m+[m[32m            android:text="나의 공부 시간 통계"[m
[32m+[m[32m            android:textSize="20sp"[m
[32m+[m[32m            android:layout_gravity="center"[m
[32m+[m[32m            android:layout_marginTop="20dp"/>[m
 [m
[31m-    <!-- 총 공부 시간 -->[m
[31m-    <TextView[m
[31m-        android:id="@+id/total_study_time"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_below="@id/sort_container"[m
[31m-        android:padding="16dp"[m
[31m-        android:textSize="20sp"[m
[31m-        android:textStyle="bold"[m
[31m-        android:textColor="#FFFFFF" />[m
[31m-[m
[31m-    <!-- RecyclerView -->[m
     <androidx.recyclerview.widget.RecyclerView[m
         android:id="@+id/recycler_view"[m
         android:layout_width="match_parent"[m
[31m-        android:layout_height="match_parent"[m
[31m-        android:layout_below="@id/total_study_time"[m
[31m-        android:padding="16dp" />[m
[31m-</RelativeLayout>[m
[32m+[m[32m        android:layout_height="match_parent"/>[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m</LinearLayout>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/res/layout/fragment_my_timer.xml b/app/src/main/res/layout/fragment_my_timer.xml[m
[1mindex 4a41044..0455820 100644[m
[1m--- a/app/src/main/res/layout/fragment_my_timer.xml[m
[1m+++ b/app/src/main/res/layout/fragment_my_timer.xml[m
[36m@@ -9,27 +9,16 @@[m
         android:layout_height="wrap_content"[m
         android:orientation="horizontal"[m
         android:padding="16dp"[m
[31m-        android:gravity="center"> <!-- center로 변경 -->[m
[32m+[m[32m        android:gravity="center_vertical">[m
 [m
[31m-        <Button[m
[31m-            android:id="@+id/history_button"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:background="@drawable/rounded_button"[m
[31m-            android:padding="8dp"[m
[31m-            android:text="기록 화인"[m
[31m-            android:textColor="#FFFFFF" />[m
[31m-[m
[31m-        <!-- TextView에 weight 추가 -->[m
         <TextView[m
[31m-            android:layout_width="0dp"[m
[32m+[m[32m            android:layout_width="wrap_content"[m
             android:layout_height="wrap_content"[m
[31m-            android:layout_weight="1"[m
             android:text="개인 타이머"[m
             android:textSize="20sp"[m
             android:textStyle="bold"[m
             android:textColor="#FFFFFF"[m
[31m-            android:gravity="center" /> <!-- gravity 추가 -->[m
[32m+[m[32m            android:layout_marginEnd="8dp" />[m
 [m
         <Button[m
             android:id="@+id/ranking_button"[m
[36m@@ -37,11 +26,10 @@[m
             android:layout_height="wrap_content"[m
             android:background="@drawable/rounded_button"[m
             android:padding="8dp"[m
[31m-            android:text="랭킹"[m
[32m+[m[32m            android:text="랭킹 확인"[m
             android:textColor="#FFFFFF" />[m
     </LinearLayout>[m
 [m
[31m-[m
     <!-- 원형 타이머 -->[m
     <FrameLayout[m
         android:id="@+id/circular_timer_container"[m
[1mdiff --git a/app/src/main/res/layout/fragment_ranking.xml b/app/src/main/res/layout/fragment_ranking.xml[m
[1mdeleted file mode 100644[m
[1mindex ff416db..0000000[m
[1m--- a/app/src/main/res/layout/fragment_ranking.xml[m
[1m+++ /dev/null[m
[36m@@ -1,47 +0,0 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[31m-<RelativeLayout[m
[31m-    xmlns:android="http://schemas.android.com/apk/res/android"[m
[31m-    android:layout_width="match_parent"[m
[31m-    android:layout_height="match_parent"[m
[31m-    android:background="#1A1A2E">[m
[31m-[m
[31m-    <!-- 상단 헤더 -->[m
[31m-    <LinearLayout[m
[31m-        android:id="@+id/header_container"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:orientation="horizontal"[m
[31m-        android:padding="16dp"[m
[31m-        android:gravity="center_vertical"[m
[31m-        android:layout_marginTop="16dp">[m
[31m-[m
[31m-        <!-- 왼쪽 정렬 기준 텍스트 -->[m
[31m-        <TextView[m
[31m-            android:id="@+id/sort_title"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:text="랭킹"[m
[31m-            android:textSize="18sp"[m
[31m-            android:textStyle="bold"[m
[31m-            android:textColor="#FFFFFF"[m
[31m-            android:layout_marginEnd="16dp" />[m
[31m-[m
[31m-        <!-- 오른쪽 Spinner -->[m
[31m-        <Spinner[m
[31m-            android:id="@+id/sort_spinner"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_alignParentRight="true"[m
[31m-            android:background="@drawable/spinner_background"[m
[31m-            android:layout_gravity="end" />[m
[31m-    </LinearLayout>[m
[31m-[m
[31m-    <!-- RecyclerView -->[m
[31m-    <androidx.recyclerview.widget.RecyclerView[m
[31m-        android:id="@+id/recycler_view"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="match_parent"[m
[31m-        android:layout_below="@id/header_container"[m
[31m-        android:padding="16dp" />[m
[31m-[m
[31m-</RelativeLayout>[m
[1mdiff --git a/app/src/main/res/layout/item_goal.xml b/app/src/main/res/layout/item_goal.xml[m
[1mindex e967de2..df19083 100644[m
[1m--- a/app/src/main/res/layout/item_goal.xml[m
[1m+++ b/app/src/main/res/layout/item_goal.xml[m
[36m@@ -17,7 +17,7 @@[m
             android:id="@+id/thumbnail"[m
             android:layout_width="60dp"[m
             android:layout_height="60dp"[m
[31m-            android:src="@drawable/placeholder_image"[m
[32m+[m[32m            android:src="@drawable/sample_goal"[m
             android:scaleType="centerCrop"[m
             android:background="@drawable/rounded_image"[m
             android:clipToOutline="true" />[m
[36m@@ -65,21 +65,10 @@[m
                 android:layout_width="wrap_content"[m
                 android:layout_height="wrap_content"[m
                 android:layout_marginStart="4dp"[m
[31m-                android:text="2"[m
[32m+[m[32m                android:text="2/3"[m
                 android:textColor="#000000"[m
                 android:textSize="14sp" />[m
         </LinearLayout>[m
[31m-[m
[31m-        <TextView[m
[31m-            android:id="@+id/userIdTextView"[m
[31m-            android:layout_width="wrap_content"[m
[31m-            android:layout_height="wrap_content"[m
[31m-            android:layout_below="@id/likeLayout"[m
[31m-            android:text="김하늘빛"[m
[31m-            android:textColor="#000000"[m
[31m-            android:layout_alignParentRight="true"[m
[31m-            android:layout_marginTop="10dp"/>[m
[31m-[m
     </RelativeLayout>[m
 [m
[31m-</androidx.appcompat.widget.LinearLayoutCompat>[m
\ No newline at end of file[m
[32m+[m[32m</androidx.appcompat.widget.LinearLayoutCompat>[m
[1mdiff --git a/app/src/main/res/layout/item_ranking.xml b/app/src/main/res/layout/item_ranking.xml[m
[1mdeleted file mode 100644[m
[1mindex 8bf5779..0000000[m
[1m--- a/app/src/main/res/layout/item_ranking.xml[m
[1m+++ /dev/null[m
[36m@@ -1,31 +0,0 @@[m
[31m-<?xml version="1.0" encoding="utf-8"?>[m
[31m-<LinearLayout[m
[31m-    xmlns:android="http://schemas.android.com/apk/res/android"[m
[31m-    android:layout_width="match_parent"[m
[31m-    android:layout_height="wrap_content"[m
[31m-    android:orientation="horizontal"[m
[31m-    android:padding="8dp">[m
[31m-[m
[31m-    <TextView[m
[31m-        android:id="@+id/rank_text"[m
[31m-        android:layout_width="40dp"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:gravity="center"[m
[31m-        android:textSize="16sp"[m
[31m-        android:textStyle="bold"/>[m
[31m-[m
[31m-    <TextView[m
[31m-        android:id="@+id/user_id_text"[m
[31m-        android:layout_width="0dp"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:layout_weight="1"[m
[31m-        android:padding="8dp"[m
[31m-        android:textSize="16sp"/>[m
[31m-[m
[31m-    <TextView[m
[31m-        android:id="@+id/total_time_text"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:padding="8dp"[m
[31m-        android:textSize="16sp"/>[m
[31m-</LinearLayout>[m
[1mdiff --git a/app/src/main/res/layout/item_time.xml b/app/src/main/res/layout/item_time.xml[m
[1mindex e710ae6..cbd6536 100644[m
[1m--- a/app/src/main/res/layout/item_time.xml[m
[1m+++ b/app/src/main/res/layout/item_time.xml[m
[36m@@ -2,46 +2,13 @@[m
     android:layout_width="match_parent"[m
     android:layout_height="wrap_content"[m
     android:orientation="horizontal"[m
[31m-    android:padding="8dp">[m
[31m-<LinearLayout[m
[31m-    android:layout_width="0dp"[m
[31m-    android:layout_height="wrap_content"[m
[31m-    android:layout_weight="1"[m
[31m-    android:orientation="vertical"[m
[31m-    >[m
[32m+[m[32m    android:padding="16dp">[m
 [m
     <TextView[m
         android:id="@+id/time_text_view"[m
[31m-        android:layout_width="match_parent"[m
[32m+[m[32m        android:layout_width="wrap_content"[m
         android:layout_height="wrap_content"[m
         android:text="00:00"[m
         android:textSize="18sp"[m
[31m-        android:textColor="#FFFFFF"[m
[31m-        android:paddingBottom="4dp"/>[m
[31m-[m
[31m-    <TextView[m
[31m-        android:id="@+id/subject_text_view"[m
[31m-        android:layout_width="match_parent"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:text="과목 : "[m
[31m-        android:textSize="16sp"[m
[31m-        />[m
[31m-[m
[31m-[m
[31m-</LinearLayout>[m
[31m-[m
[31m-[m
[31m-    <Button[m
[31m-        android:id="@+id/ranking_register_button"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:text="랭킹 등록"[m
[31m-        android:layout_marginRight="8dp"/>[m
[31m-[m
[31m-    <Button[m
[31m-        android:id="@+id/delete_button"[m
[31m-        android:layout_width="wrap_content"[m
[31m-        android:layout_height="wrap_content"[m
[31m-        android:text="삭제" />[m
[31m-[m
[32m+[m[32m        android:textColor="#FFFFFF" />[m
 </LinearLayout>[m
[1mdiff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml[m
[1mindex 7d3e571..427bc1e 100644[m
[1m--- a/app/src/main/res/values/strings.xml[m
[1m+++ b/app/src/main/res/values/strings.xml[m
[36m@@ -6,10 +6,4 @@[m
     <string name="title_notifications">Notifications</string>[m
     <!-- TODO: Remove or change this placeholder text -->[m
     <string name="hello_blank_fragment">Hello, Blank Fragment!</string>[m
[31m-    <string-array name="sort_options">[m
[31m-        <item>하루</item>[m
[31m-        <item>1주</item>[m
[31m-        <item>1달</item>[m
[31m-    </string-array>[m
[31m-[m
 </resources>[m
\ No newline at end of file[m
